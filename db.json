{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/hexo-theme-aurora/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/icons/favicon-16x16.png","path":"icons/favicon-16x16.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/icons/favicon-32x32.png","path":"icons/favicon-32x32.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/img/default-cover.df7c128c.jpg","path":"static/img/default-cover.df7c128c.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/css/404.1a6cd5bd.css","path":"static/css/404.1a6cd5bd.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/css/about.32dfa3b0.css","path":"static/css/about.32dfa3b0.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/css/app.0d31776f.css","path":"static/css/app.0d31776f.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/css/archives.c0d49bd5.css","path":"static/css/archives.c0d49bd5.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/css/categories.10e2be12.css","path":"static/css/categories.10e2be12.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/css/chunk-libs.eebac533.css","path":"static/css/chunk-libs.eebac533.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/css/page.749ad047.css","path":"static/css/page.749ad047.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/css/post.9f951a60.css","path":"static/css/post.9f951a60.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/css/result.10e2be12.css","path":"static/css/result.10e2be12.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/css/tags.10e2be12.css","path":"static/css/tags.10e2be12.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/js/404.00d640a8.js","path":"static/js/404.00d640a8.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/js/about.1658f909.js","path":"static/js/about.1658f909.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/js/app.c39752b7.js","path":"static/js/app.c39752b7.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/js/archives.574ac664.js","path":"static/js/archives.574ac664.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/js/categories.90aa5475.js","path":"static/js/categories.90aa5475.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/js/chunk-libs.dc6146cd.js","path":"static/js/chunk-libs.dc6146cd.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/js/page.1368e45c.js","path":"static/js/page.1368e45c.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/js/post.66842423.js","path":"static/js/post.66842423.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/js/result.39470350.js","path":"static/js/result.39470350.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-aurora/source/static/js/tags.3662bc03.js","path":"static/js/tags.3662bc03.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/about/index.md","hash":"a3164a76913fdbe935d3beb74077113eefa37855","modified":1685961974536},{"_id":"source/_posts/ali-vue.md","hash":"8695d9e6f8c1ded592138d5fa7efbfc997fd8735","modified":1685961974526},{"_id":"source/_posts/base-table.md","hash":"81ac7287d29236fddd48235925b70d0e313da094","modified":1685961974531},{"_id":"source/_posts/css-standard.md","hash":"77db64c52a8b32c37fdafa47d4b7f006de360cf6","modified":1685961974532},{"_id":"source/_posts/fore-end-standard.md","hash":"8c8d56be7aad7f940b322ea058c5c971b8acbdc3","modified":1685961974533},{"_id":"source/_posts/git-standard.md","hash":"e941ff7820bbfe7f18ca5d140702137c5eef46fc","modified":1685961974534},{"_id":"source/_posts/h5medio.md","hash":"316f90f0cc691dda3eb79cb398be2326670c305f","modified":1685961974535},{"_id":"source/_posts/swiper.md","hash":"0121daeed0581d25b7be135d231b33a73bae6638","modified":1685961974536},{"_id":"source/_posts/base-search.md","hash":"ec4defe3c20840b23506c9ae8b3bc79e0e56a60f","modified":1685961974527},{"_id":"themes/hexo-theme-aurora/src/styles/components/header.scss","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1686185194000},{"_id":"themes/hexo-theme-aurora/.browserslistrc","hash":"db215b841182d2af3259a1c1d6e1957bca333970","modified":1686185193900},{"_id":"themes/hexo-theme-aurora/.editorconfig","hash":"34178aacf5e15cc56f4cda57ff4105f286098297","modified":1686185193900},{"_id":"themes/hexo-theme-aurora/.env","hash":"a078239e5311990296389f529f0cf55352af912f","modified":1686185193900},{"_id":"themes/hexo-theme-aurora/.env.development","hash":"4587b844c5ab7627976722408cfb215b1e16318f","modified":1686185193901},{"_id":"themes/hexo-theme-aurora/.env.production","hash":"43fc735c29d58490f4d04afb1afc6813087c7da1","modified":1686185785411},{"_id":"themes/hexo-theme-aurora/.eslintignore","hash":"94e03be498d4eacd2131932c80863d6dace2685b","modified":1686185193904},{"_id":"themes/hexo-theme-aurora/.eslintrc.js","hash":"d849be239111cec29f367a25758270a77c59d315","modified":1686185193904},{"_id":"themes/hexo-theme-aurora/.gitignore","hash":"29b3c7b78bec24f4eb14561bba2ace66eca1e1e5","modified":1686185193904},{"_id":"themes/hexo-theme-aurora/.npmignore","hash":"88b3508adc61c53bf7d668f84680c451f8352853","modified":1686185193905},{"_id":"themes/hexo-theme-aurora/.prettierrc","hash":"7486b4fa2ce30fb800963d375892aeab7725966e","modified":1686185193906},{"_id":"themes/hexo-theme-aurora/.yo-rc.json","hash":"e8ea5bdc5d8bc3024a5d7d85db01aca012c3f222","modified":1686185193906},{"_id":"themes/hexo-theme-aurora/CHANGELOG.md","hash":"e68f3af8af17d326a48e1b317e01d7429193217e","modified":1686185193906},{"_id":"themes/hexo-theme-aurora/CHANGELOG_CN.md","hash":"5d13c251e8b77fd86870da50f3be98f8822edc66","modified":1686185193907},{"_id":"themes/hexo-theme-aurora/LICENSE","hash":"21cf269018b0cf04e1126b6b9b1a5e6af7c5e61f","modified":1686185193907},{"_id":"themes/hexo-theme-aurora/README.md","hash":"c50f58b08b75780990c18ab85761e3e24aac0d90","modified":1686185193907},{"_id":"themes/hexo-theme-aurora/_config.yml","hash":"e6b2335cb393444b8a1fc1ad65331f4a30bc8915","modified":1686185193907},{"_id":"themes/hexo-theme-aurora/babel.config.js","hash":"a34de46b78a5abf97b9b995872ecf9cce26268d6","modified":1686185193908},{"_id":"themes/hexo-theme-aurora/jest.config.js","hash":"425f08cb718a56630ce61ae0686f35c55ef565df","modified":1686185193909},{"_id":"themes/hexo-theme-aurora/package.json","hash":"142d1db981d7a12f28f17063758e6248388d892e","modified":1686185193909},{"_id":"themes/hexo-theme-aurora/postcss.config.js","hash":"e055130e203b3956bb4f869615e3153825ab8596","modified":1686185193910},{"_id":"themes/hexo-theme-aurora/tailwind.config.js","hash":"dfb63ca1042326fcdfdd7909b5bce5d25a8d7743","modified":1686185194007},{"_id":"themes/hexo-theme-aurora/tsconfig.json","hash":"dfd97ebba1bed7ce88adacf7a604ab29bd41cff0","modified":1686185194008},{"_id":"themes/hexo-theme-aurora/vue.config.js","hash":"935d0e2b0c005d42f8d689e7dea105dfcc883568","modified":1686185194008},{"_id":"themes/hexo-theme-aurora/.circleci/config.yml","hash":"534051be311581f69aa8287120275a04539290e4","modified":1686185193900},{"_id":"themes/hexo-theme-aurora/build/index.js","hash":"071034feaf36983778e66c6b79ab83f5e039469c","modified":1686185193908},{"_id":"themes/hexo-theme-aurora/data/en.yml","hash":"7bbd6c0da0ae2f93f8a786a3be77fbe4e95a787e","modified":1686185193909},{"_id":"themes/hexo-theme-aurora/data/cn.yml","hash":"4f5dcc1e2953df7a8e4e683c1a9115f6e0041f5e","modified":1686185193908},{"_id":"themes/hexo-theme-aurora/layout/index.ejs","hash":"77edfbcfdd1c9e9c6a0797bd3d31acbf722e5acc","modified":1686185829023},{"_id":"themes/hexo-theme-aurora/public/favicon.ico","hash":"c39d3ad80489cffed0d3df82c8cb05a049ab39a3","modified":1686185193910},{"_id":"themes/hexo-theme-aurora/public/index.html","hash":"9538d4eb325eb0dd9e7bf90b16a6f74e1a49e443","modified":1686185193911},{"_id":"themes/hexo-theme-aurora/public/index_prod.html","hash":"b27376fc6e89bd80fe0c361e8ddfe0dbd4aade0e","modified":1686185193912},{"_id":"themes/hexo-theme-aurora/scripts/index.js","hash":"2a3c62a860581ee6813ca4bcaa7c952f614e818c","modified":1686185193912},{"_id":"themes/hexo-theme-aurora/source/favicon.ico","hash":"c39d3ad80489cffed0d3df82c8cb05a049ab39a3","modified":1686185829022},{"_id":"themes/hexo-theme-aurora/src/main.ts","hash":"217b6dc4239815976c50c77a7cd3ef368dd0438f","modified":1686185193989},{"_id":"themes/hexo-theme-aurora/src/App.vue","hash":"7853c6ae77f6c1ecc093ef043b7c4ce159707ed0","modified":1686185193948},{"_id":"themes/hexo-theme-aurora/src/shims-vue.d.ts","hash":"f8f86098c58fdce8596119fbe85778b8838c9177","modified":1686185193997},{"_id":"themes/hexo-theme-aurora/build/scripts/config-script.js","hash":"58d551952c1c31f98d6fd019a0c15fc4aa153065","modified":1686185193908},{"_id":"themes/hexo-theme-aurora/src/settings.ts","hash":"50c6521eb4d395430e9a1448e5870a3f28103840","modified":1686185193996},{"_id":"themes/hexo-theme-aurora/public/icons/favicon-16x16.png","hash":"849cad2a5ae49fa54c20372f7a21ae95192bafcf","modified":1686185193911},{"_id":"themes/hexo-theme-aurora/source/icons/favicon-16x16.png","hash":"849cad2a5ae49fa54c20372f7a21ae95192bafcf","modified":1686185829023},{"_id":"themes/hexo-theme-aurora/source/icons/favicon-32x32.png","hash":"9dbabf6f4d825da99dcb2e91583755ae8d3b3ff4","modified":1686185829023},{"_id":"themes/hexo-theme-aurora/public/icons/favicon-32x32.png","hash":"9dbabf6f4d825da99dcb2e91583755ae8d3b3ff4","modified":1686185193911},{"_id":"themes/hexo-theme-aurora/src/api/index.ts","hash":"ffbd95818e3e55ddc3634c2116ce4262954d64bb","modified":1686185193949},{"_id":"themes/hexo-theme-aurora/src/assets/default-cover.jpg","hash":"1934ace0c6f2397d15729f9b08cc4d42e45bf437","modified":1686185193952},{"_id":"themes/hexo-theme-aurora/src/assets/gongan-beian-40-40.png","hash":"69893d2270fcafa0928dbf58e3b3899061d6dc84","modified":1686185193954},{"_id":"themes/hexo-theme-aurora/src/components/Breadcrumbs.vue","hash":"3af1f00f0730ba72bca4382f5a94d889e905aefd","modified":1686185193955},{"_id":"themes/hexo-theme-aurora/src/components/Comment.vue","hash":"3cf4ac746ad510c783d3a2046bd95080d621a5f8","modified":1686185193955},{"_id":"themes/hexo-theme-aurora/src/components/Dia.vue","hash":"3cc448c321a9f975d9cafd9d3a5d0bc2689e1319","modified":1686185193956},{"_id":"themes/hexo-theme-aurora/src/components/Footer.vue","hash":"5ff6aca37a14ff5039967ec00488a41472bb4bb8","modified":1686185193958},{"_id":"themes/hexo-theme-aurora/src/components/MobileMenu.vue","hash":"61c7d8cf1452e2c9ee3a654e06fee8b76447af5a","modified":1686185193961},{"_id":"themes/hexo-theme-aurora/src/components/PageContainer.vue","hash":"24004367c1c1c12749fd51fdc01a479893252059","modified":1686185193962},{"_id":"themes/hexo-theme-aurora/src/components/Navigator.vue","hash":"c64b6fbafd7d40bf64aa63e478928eeaab67be28","modified":1686185193961},{"_id":"themes/hexo-theme-aurora/src/components/Paginator.vue","hash":"30ee6c408a497228565c43d7e81aab6827460630","modified":1686185193962},{"_id":"themes/hexo-theme-aurora/src/components/ProgressBar.vue","hash":"90f2f7e49847afbc9a97149f7672fce549a212ba","modified":1686185193962},{"_id":"themes/hexo-theme-aurora/src/components/SearchModal.vue","hash":"ff84c41019c8e6c8defeb305a8adbbdee905eed9","modified":1686185193962},{"_id":"themes/hexo-theme-aurora/src/components/Social.vue","hash":"311d1ff536009c6c967f904539559a70173a9dec","modified":1686185193965},{"_id":"themes/hexo-theme-aurora/src/icons/index.ts","hash":"42208101990f593c17d82abdefa14f4767e7a276","modified":1686185193969},{"_id":"themes/hexo-theme-aurora/src/icons/svgo.yml","hash":"cec15018e3e99ff97ff5a46f2084b81488622a46","modified":1686185193986},{"_id":"themes/hexo-theme-aurora/src/components/Sticky.vue","hash":"68c96e00e9f08d8cde7cba8221cf7a734630c75e","modified":1686185193965},{"_id":"themes/hexo-theme-aurora/src/models/HexoConfig.class.ts","hash":"8f4152986ef091db3adc37073bb9f47bc42f2760","modified":1686185193990},{"_id":"themes/hexo-theme-aurora/src/models/Post.class.ts","hash":"e9cb9192dd3a105d2578e8d7c2a49fb3e7ee5f26","modified":1686185193991},{"_id":"themes/hexo-theme-aurora/src/models/Article.class.ts","hash":"cd1c3bedd3fac8a227211e51b7d0f8c8876805a5","modified":1686185193990},{"_id":"themes/hexo-theme-aurora/src/models/Search.class.ts","hash":"1d0176491646083ff8a760ce83476c77458439a8","modified":1686185193994},{"_id":"themes/hexo-theme-aurora/src/models/Statistic.class.ts","hash":"c3e818985fc1bf58268e530179c516de0678643b","modified":1686185193994},{"_id":"themes/hexo-theme-aurora/src/models/ThemeConfig.class.ts","hash":"84de8463188cbe3f54fac7881dc39fd157d47644","modified":1686185193995},{"_id":"themes/hexo-theme-aurora/src/router/guard.ts","hash":"27f44238ffd1d0093e8497bfc879adb0f5ced823","modified":1686185193995},{"_id":"themes/hexo-theme-aurora/src/stores/app.ts","hash":"f5924a907877c528c12ff076361f280facec2df4","modified":1686185193997},{"_id":"themes/hexo-theme-aurora/src/stores/article.ts","hash":"c0216ef0d74dd657dd856ce9ea4925ddaa89f65a","modified":1686185193997},{"_id":"themes/hexo-theme-aurora/src/router/index.ts","hash":"9348ab70fb7363cf3ae570ac2080a4ba3554d0f6","modified":1686185193995},{"_id":"themes/hexo-theme-aurora/src/stores/author.ts","hash":"369997cd5109e781b9de6effcc8b4328b7139fbd","modified":1686185193998},{"_id":"themes/hexo-theme-aurora/src/stores/category.ts","hash":"dbdce404fafa6516b7d212e9b7a9831370787c96","modified":1686185193998},{"_id":"themes/hexo-theme-aurora/src/stores/dia.ts","hash":"0c7ed8810b2433fc324c68a6565e40bc5f9c1d33","modified":1686185193998},{"_id":"themes/hexo-theme-aurora/src/stores/dropdown.ts","hash":"dd444b4d59d2911668d8b95138c7d891d758d0a7","modified":1686185193998},{"_id":"themes/hexo-theme-aurora/src/stores/meta.ts","hash":"de12cda52116e5ddcb10eac75ee277cf63493a0e","modified":1686185193999},{"_id":"themes/hexo-theme-aurora/src/stores/common.ts","hash":"16549bef537cb94c3e1783d490bee48247b5ee31","modified":1686185193998},{"_id":"themes/hexo-theme-aurora/src/stores/post.ts","hash":"19a240acc49b9692483eb2df47493561bc4cff63","modified":1686185193999},{"_id":"themes/hexo-theme-aurora/src/stores/routers.ts","hash":"74622dc85a9447d795bd84df68cf3eaca19f7766","modified":1686185193999},{"_id":"themes/hexo-theme-aurora/src/stores/navigator.ts","hash":"93fbf76a3670fe90b22536501b0acfac2f404b45","modified":1686185193999},{"_id":"themes/hexo-theme-aurora/src/stores/search.ts","hash":"210a685cc3bdae2663e471962edaa10954b14ba7","modified":1686185193999},{"_id":"themes/hexo-theme-aurora/src/stores/tag.ts","hash":"1ffa482d4a36e02c651127a2f490b13814029608","modified":1686185193999},{"_id":"themes/hexo-theme-aurora/src/styles/index.scss","hash":"186667653b380a61a724829af6425e1e2de824a9","modified":1686185194001},{"_id":"themes/hexo-theme-aurora/src/styles/prism-aurora-future.css","hash":"a907572fd4f6d771c5f7dc33847395a96bbed306","modified":1686185194001},{"_id":"themes/hexo-theme-aurora/src/styles/transitions.scss","hash":"8895ce60d5bf950681fac616a1263df2db9d67f6","modified":1686185194001},{"_id":"themes/hexo-theme-aurora/src/styles/theme-variables.scss","hash":"31ba718f9aacff75a91fc966784f89459728f160","modified":1686185194001},{"_id":"themes/hexo-theme-aurora/src/utils/auth.ts","hash":"5dda5e6767965bbb127bfa516f91d2b7e5347607","modified":1686185194003},{"_id":"themes/hexo-theme-aurora/src/utils/external-request.ts","hash":"0bb605b502d077a42a6a057aaa7ad5df05593305","modified":1686185194003},{"_id":"themes/hexo-theme-aurora/src/utils/get-page-title.ts","hash":"fbb22b9309c7fffae34c2dc6b0be3a0d5788a8af","modified":1686185194003},{"_id":"themes/hexo-theme-aurora/src/utils/github-api.ts","hash":"606e1483e477bc619aa10e875ab0492bada5a874","modified":1686185194003},{"_id":"themes/hexo-theme-aurora/src/utils/index.ts","hash":"424ff9c25e9a2829eeeca014f80ee9f0f7edb935","modified":1686185194004},{"_id":"themes/hexo-theme-aurora/src/utils/leancloud-api.ts","hash":"aa9c7464661201b469158b54d0e1718836e1b07f","modified":1686185194004},{"_id":"themes/hexo-theme-aurora/src/utils/request.ts","hash":"5cfb1f2f671d7e6a13cd45f08d56e3e7c774c0b3","modified":1686185194004},{"_id":"themes/hexo-theme-aurora/src/utils/validate.ts","hash":"967b5e7f96c4788838610d1f8adccec2fc917bdc","modified":1686185194004},{"_id":"themes/hexo-theme-aurora/src/views/404.vue","hash":"2529eedf830f79926a2f0c0cc10cbc15ac895d41","modified":1686185194005},{"_id":"themes/hexo-theme-aurora/src/views/Archives.vue","hash":"48d41ce6441aa0a93a42eb4bb81813f7295c779f","modified":1686185194005},{"_id":"themes/hexo-theme-aurora/src/views/About.vue","hash":"ba16bfd9aa10b821ce8125dfe13ac12002cdc890","modified":1686185194005},{"_id":"themes/hexo-theme-aurora/src/views/Category.vue","hash":"6303ff3fb01cbf9c2d2786fcdc41ad8654d43580","modified":1686185194005},{"_id":"themes/hexo-theme-aurora/src/views/Page.vue","hash":"f0cdd8e08eb1400dd0981cb121605450b256c5d5","modified":1686185194006},{"_id":"themes/hexo-theme-aurora/src/views/Home.vue","hash":"605850a95787dc3b9204727a6b9ebf2fec64a5d5","modified":1686185194005},{"_id":"themes/hexo-theme-aurora/src/views/Post.vue","hash":"fd307bff1e89c2b5ab7ba307118be627b0150777","modified":1686185194006},{"_id":"themes/hexo-theme-aurora/src/views/Tag.vue","hash":"5704b81ed71f397a7b9df383ba7e287e39836c1b","modified":1686185194006},{"_id":"themes/hexo-theme-aurora/src/views/Result.vue","hash":"5f180fd9dd66530a172eedf44216195f06b55ee2","modified":1686185194006},{"_id":"themes/hexo-theme-aurora/src/locales/index.ts","hash":"8cf2f27743f6fdd7b8ec69e281e8cd935be89e0d","modified":1686185193987},{"_id":"themes/hexo-theme-aurora/scripts/lib/filters/index.js","hash":"5eacff9446dd6c9a7eb0a0c84be9187055440454","modified":1686185193913},{"_id":"themes/hexo-theme-aurora/scripts/lib/generators/category.js","hash":"453ecf6c3df19e63de5387bf48240871d2b03473","modified":1686185193913},{"_id":"themes/hexo-theme-aurora/scripts/lib/generators/index.js","hash":"dfbb0fdbf990bd67684ed891a4aaa1fd8dcd23f2","modified":1686185193913},{"_id":"themes/hexo-theme-aurora/scripts/lib/generators/page.js","hash":"1be54ea9cdf8e293e67bf457075fcdd8a72b8779","modified":1686185193914},{"_id":"themes/hexo-theme-aurora/scripts/lib/generators/post.js","hash":"023baeb8d0fd3687c97004f2c73bad0dd207c0f7","modified":1686185193914},{"_id":"themes/hexo-theme-aurora/scripts/lib/generators/search.js","hash":"a2a636e1df76efdcaca37226b490afa539ce766b","modified":1686185193914},{"_id":"themes/hexo-theme-aurora/scripts/lib/generators/site.js","hash":"b5f5ce813b4b0b322eceb11b036dc65201604256","modified":1686185193914},{"_id":"themes/hexo-theme-aurora/scripts/lib/generators/statistic.js","hash":"1c641956e15cec96490de16a88ccc7bec0c9d5c4","modified":1686185193915},{"_id":"themes/hexo-theme-aurora/scripts/lib/generators/tag.js","hash":"491cdcee3abb1ce1ed348e93af568ebae1599d6d","modified":1686185193915},{"_id":"themes/hexo-theme-aurora/scripts/lib/helpers/mapper.js","hash":"266a87499af02b7d25a14e88c2c632d2c492b6c3","modified":1686185193915},{"_id":"themes/hexo-theme-aurora/scripts/lib/helpers/symbols-count-time.js","hash":"d1a81e31b2988edcdf4b4761cec7326a980f097a","modified":1686185193916},{"_id":"themes/hexo-theme-aurora/scripts/lib/helpers/toc.js","hash":"5c7348c550ef7f164d492847801a360cdefc60a2","modified":1686185193916},{"_id":"themes/hexo-theme-aurora/scripts/lib/helpers/truncate-html.js","hash":"49d4832af027eabe5b8383a24e66dceae761533e","modified":1686185193916},{"_id":"themes/hexo-theme-aurora/scripts/lib/helpers/utils.js","hash":"93ff75f0e35a1dc40d5406cc097f5988dd820600","modified":1686185193916},{"_id":"themes/hexo-theme-aurora/scripts/lib/injector/index.js","hash":"7ca562ea3af3068ee925b5a8afdce0eaa1e15e64","modified":1686185193916},{"_id":"themes/hexo-theme-aurora/source/static/css/404.1a6cd5bd.css","hash":"a7a4d83756520d8f6c410ac0ffe9a45d63868113","modified":1686185829020},{"_id":"themes/hexo-theme-aurora/source/static/img/default-cover.df7c128c.jpg","hash":"1934ace0c6f2397d15729f9b08cc4d42e45bf437","modified":1686185829020},{"_id":"themes/hexo-theme-aurora/source/static/css/about.32dfa3b0.css","hash":"614ef7c4e52877c76ffddb26192bf8fffddcb8d8","modified":1686185829020},{"_id":"themes/hexo-theme-aurora/source/static/css/archives.c0d49bd5.css","hash":"c56213315c57254d0a6e6301ef24c2186fef4d2b","modified":1686185829021},{"_id":"themes/hexo-theme-aurora/source/static/css/categories.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1686185829020},{"_id":"themes/hexo-theme-aurora/source/static/css/chunk-libs.eebac533.css","hash":"41226b6c29aadcc6190fe7c2c4c37464855b8453","modified":1686185829020},{"_id":"themes/hexo-theme-aurora/source/static/css/page.749ad047.css","hash":"6fcf0e6f3c628954c5f8105791e0e7f3e6512da6","modified":1686185829021},{"_id":"themes/hexo-theme-aurora/source/static/css/post.9f951a60.css","hash":"8e360582d745d6483fdfc18c46f75897b44721a6","modified":1686185829022},{"_id":"themes/hexo-theme-aurora/source/static/css/result.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1686185829023},{"_id":"themes/hexo-theme-aurora/source/static/css/tags.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1686185829023},{"_id":"themes/hexo-theme-aurora/source/static/js/404.00d640a8.js","hash":"74f1da9e0f953e73e4fe1a6554433f56fdcdf54d","modified":1686185829020},{"_id":"themes/hexo-theme-aurora/source/static/js/about.1658f909.js","hash":"7ce2b3f7d232dd3b3930ac993bb841452e2cde89","modified":1686185829020},{"_id":"themes/hexo-theme-aurora/source/static/js/archives.574ac664.js","hash":"fbb094fb4f7a01bffd6975aca27142935bfdca73","modified":1686185829020},{"_id":"themes/hexo-theme-aurora/source/static/js/categories.90aa5475.js","hash":"0dde3d731fc665962a4c330338a2c663c330be26","modified":1686185829020},{"_id":"themes/hexo-theme-aurora/source/static/js/page.1368e45c.js","hash":"db775fbfbaa1cf8bbf4cc4f2b0a869519d508e3a","modified":1686185829020},{"_id":"themes/hexo-theme-aurora/source/static/js/post.66842423.js","hash":"53586f9dab5886a366e9397eb17088e74af5cde1","modified":1686185829023},{"_id":"themes/hexo-theme-aurora/source/static/js/result.39470350.js","hash":"f6f5ab2ca7274dad169ec600a419d1a2aeb2347c","modified":1686185829023},{"_id":"themes/hexo-theme-aurora/source/static/js/tags.3662bc03.js","hash":"4f49139e435788710115fc884dc26a5b1e0d4833","modified":1686185829023},{"_id":"themes/hexo-theme-aurora/tests/unit/components/Dropdown.spec.ts","hash":"98dd70a537a1a5aaf7c33ab2c7a2cd745037ad12","modified":1686185194007},{"_id":"themes/hexo-theme-aurora/tests/unit/components/Toggle.spec.ts","hash":"5280431555e3a253a1b3ddcf4684ef06e3a5d7bb","modified":1686185194007},{"_id":"themes/hexo-theme-aurora/tests/unit/utils/filterHTMLContent.spec.ts","hash":"94227b1cf0edde793f20d68ec63cd6344012e9f5","modified":1686185194008},{"_id":"themes/hexo-theme-aurora/tests/unit/utils/formatTime.spec.ts","hash":"ce3f0fb34f88566bb948a7e1c7efff54311e0279","modified":1686185194008},{"_id":"themes/hexo-theme-aurora/src/components/ArticleCard/index.ts","hash":"421fd99b48d780fe8080e8438711c0b188579711","modified":1686185193954},{"_id":"themes/hexo-theme-aurora/src/components/Dropdown/index.ts","hash":"6b1e4fd2afa494cb20c8e12f4fe06d81c31f5288","modified":1686185193956},{"_id":"themes/hexo-theme-aurora/src/components/Feature/index.ts","hash":"9652d9c3871edb25d9c72fe33ab5709bac0a5727","modified":1686185193957},{"_id":"themes/hexo-theme-aurora/src/components/Header/index.ts","hash":"cd2018ecc2e0bed98a0aa82128ffec1b14cec43e","modified":1686185193958},{"_id":"themes/hexo-theme-aurora/src/components/LoadingSkeleton/Skeleton.vue","hash":"fe6fde597ef98e0f9d3b27867e38ade039c56f63","modified":1686185193960},{"_id":"themes/hexo-theme-aurora/src/components/LoadingSkeleton/SkeletonTheme.vue","hash":"2e4f3f87954734f0aaad4dada5cb88d84d2a150e","modified":1686185193960},{"_id":"themes/hexo-theme-aurora/src/components/LoadingSkeleton/index.ts","hash":"e3c58664e222149736521b95ba20809dcbabf3a1","modified":1686185193961},{"_id":"themes/hexo-theme-aurora/src/components/Sidebar/index.ts","hash":"368f869ed7eb5cb59406616b75e8fdd6f7390a3e","modified":1686185193963},{"_id":"themes/hexo-theme-aurora/src/components/SvgIcon/index.vue","hash":"30a9546e6c832de75eb89f96fca82deec8c7d401","modified":1686185193966},{"_id":"themes/hexo-theme-aurora/src/components/Tag/TagItem.vue","hash":"0dc01eeacf5ce936a6f66f8e3af4619717250fb1","modified":1686185193966},{"_id":"themes/hexo-theme-aurora/src/components/Tag/TagList.vue","hash":"dbf699c1471649b35756545afb4defc03e4410f1","modified":1686185193967},{"_id":"themes/hexo-theme-aurora/src/components/Tag/index.ts","hash":"f37ea29668f9132868c213b0c582d61253acc6c1","modified":1686185193967},{"_id":"themes/hexo-theme-aurora/src/components/Title/index.ts","hash":"52689eb0fdd50ca59d2e0398c3f88196bfbb0b2f","modified":1686185193967},{"_id":"themes/hexo-theme-aurora/src/components/ToggleSwitch/ThemeToggle.vue","hash":"f2192614dae0015eed9f15ebde40135559c2429a","modified":1686185193968},{"_id":"themes/hexo-theme-aurora/src/components/ToggleSwitch/Toggle.vue","hash":"9f111a5e1d772d6e76ba68276aa131b6df404ada","modified":1686185193969},{"_id":"themes/hexo-theme-aurora/src/icons/svg/arrow-left-circle.svg","hash":"d24cb779d59ddeb9831489197e0de3e45a126713","modified":1686185193969},{"_id":"themes/hexo-theme-aurora/src/icons/svg/arrow-left.svg","hash":"e13aa826e3e8290e184d05cd124a8616f1780d05","modified":1686185193969},{"_id":"themes/hexo-theme-aurora/src/icons/svg/arrow-right-circle.svg","hash":"6cb5fec350e914c780ac0918df9bbfded65b87e9","modified":1686185193970},{"_id":"themes/hexo-theme-aurora/src/icons/svg/arrow-right.svg","hash":"65d14cb330c6acb5bdc3eefc67091c80543b4ef2","modified":1686185193970},{"_id":"themes/hexo-theme-aurora/src/icons/svg/article.svg","hash":"dfefd3f418b36a5d2dfefc1cf7d6147ad4d2157f","modified":1686185193970},{"_id":"themes/hexo-theme-aurora/src/icons/svg/back-to-top.svg","hash":"b9d4c2c04db9a9d3381aab6a87c38f3965df5f59","modified":1686185193970},{"_id":"themes/hexo-theme-aurora/src/icons/svg/category.svg","hash":"3584c3613d492e82777de0b1df9138210a780dad","modified":1686185193970},{"_id":"themes/hexo-theme-aurora/src/icons/svg/chevron.svg","hash":"3beefdb25774ddee5b66d6052c87d8e49592adac","modified":1686185193971},{"_id":"themes/hexo-theme-aurora/src/icons/svg/clock-outline.svg","hash":"6baa6f9ec1363d21becdedd09f979fcc44fab363","modified":1686185193971},{"_id":"themes/hexo-theme-aurora/src/icons/svg/clock.svg","hash":"83a8d9ef9a2f558d941f8da7ae2a57b6d5829c1b","modified":1686185193971},{"_id":"themes/hexo-theme-aurora/src/icons/svg/close.svg","hash":"bb4abf26ede1bb887eb37bdcd30385756e3871f0","modified":1686185193971},{"_id":"themes/hexo-theme-aurora/src/icons/svg/csdn.svg","hash":"82ce630d0d0a30218e1c033a6c30d1034ad364bf","modified":1686185193971},{"_id":"themes/hexo-theme-aurora/src/icons/svg/date-outline.svg","hash":"1a68395ab3d45277277a7e15faa50e07b803dad7","modified":1686185193972},{"_id":"themes/hexo-theme-aurora/src/icons/svg/date.svg","hash":"1607d963f562e423d12791222e34eecaedcfddf3","modified":1686185193972},{"_id":"themes/hexo-theme-aurora/src/icons/svg/dots.svg","hash":"66561703dc7758f3168101221b2e16a929d26207","modified":1686185193972},{"_id":"themes/hexo-theme-aurora/src/icons/svg/eye.svg","hash":"a147ad7ce31b7bba47d7cf41618a2b86dc8f656c","modified":1686185193974},{"_id":"themes/hexo-theme-aurora/src/icons/svg/folder.svg","hash":"049e15f38d2ae9f68267bdb003897d55a252fac3","modified":1686185193975},{"_id":"themes/hexo-theme-aurora/src/icons/svg/github.svg","hash":"0cd78274306fe8eaf8de0a3e15d77268bc2bfb3f","modified":1686185193975},{"_id":"themes/hexo-theme-aurora/src/icons/svg/globe.svg","hash":"73c94657681a125c78591c257d8a9adb352c1dd8","modified":1686185193976},{"_id":"themes/hexo-theme-aurora/src/icons/svg/go-back.svg","hash":"27c4dc008bd78eba3f6ecee683b0362d19dbaacf","modified":1686185193979},{"_id":"themes/hexo-theme-aurora/src/icons/svg/hot.svg","hash":"d66db48dff0910d54241c448135c5cb6ab676156","modified":1686185193979},{"_id":"themes/hexo-theme-aurora/src/icons/svg/nav-home.svg","hash":"4e83d442cfb1964b5b5cf428b0176e689be8de62","modified":1686185193980},{"_id":"themes/hexo-theme-aurora/src/icons/svg/nav-menu.svg","hash":"2b90d658afcb07831f4f38e2d72e2f85d4a2c08b","modified":1686185193980},{"_id":"themes/hexo-theme-aurora/src/icons/svg/nav-top.svg","hash":"2eecde453071833d83d653845ba811aac94c7ca1","modified":1686185193981},{"_id":"themes/hexo-theme-aurora/src/icons/svg/people.svg","hash":"6bea8c4db5e9d928ced939f3192b1c7cc696fc01","modified":1686185193981},{"_id":"themes/hexo-theme-aurora/src/icons/svg/pin.svg","hash":"c623f1fbc18ac970d95f13fb8d237573bd039beb","modified":1686185193982},{"_id":"themes/hexo-theme-aurora/src/icons/svg/qq.svg","hash":"6b1645070500fcb0e27c74f8c8118517aadac401","modified":1686185193982},{"_id":"themes/hexo-theme-aurora/src/icons/svg/quote.svg","hash":"38c9ecc8637470d42f26799e7f193be003de98ed","modified":1686185193982},{"_id":"themes/hexo-theme-aurora/src/icons/svg/search.svg","hash":"581c2f3191c0d0ab466fa0b28c7e56c1a101e5dd","modified":1686185193983},{"_id":"themes/hexo-theme-aurora/src/icons/svg/stackoverflow.svg","hash":"3931d62ccba7756cd8df001b99592a70c1112fa0","modified":1686185193983},{"_id":"themes/hexo-theme-aurora/src/icons/svg/tag.svg","hash":"c8b96680247e88097127f93bcdc54b6fd879c6e7","modified":1686185193983},{"_id":"themes/hexo-theme-aurora/src/icons/svg/text-outline.svg","hash":"26637d9094476ba18da50da4aa7bafdd83938b69","modified":1686185193984},{"_id":"themes/hexo-theme-aurora/src/icons/svg/toc.svg","hash":"b0703ee44a11f6cda03ae01b3d38d1aa1cc10ba1","modified":1686185193985},{"_id":"themes/hexo-theme-aurora/src/icons/svg/twitter.svg","hash":"f092516c60eba115e884875143663dc3c53c11c7","modified":1686185193985},{"_id":"themes/hexo-theme-aurora/src/icons/svg/text.svg","hash":"83e9ef94d7b972feccbdfd33873c5bbb1c049e90","modified":1686185193984},{"_id":"themes/hexo-theme-aurora/src/icons/svg/warning.svg","hash":"582ea5bd57887d8bf08113e63ccb218ce181ceae","modified":1686185193985},{"_id":"themes/hexo-theme-aurora/src/icons/svg/wechat.svg","hash":"77557aef69e8a67c6cb80ddd62c15c496d14f245","modified":1686185193986},{"_id":"themes/hexo-theme-aurora/src/icons/svg/weibo.svg","hash":"3102fa74bc12d0633b1b11f51d0a66d1167790b7","modified":1686185193986},{"_id":"themes/hexo-theme-aurora/src/icons/svg/zhifu.svg","hash":"23087cb0cfb3289492530d109fe0428f1bdd783c","modified":1686185193986},{"_id":"themes/hexo-theme-aurora/src/styles/components/search-modal.scss","hash":"613140d9ac2db745bb4381e40f9dc9ed6ca9482a","modified":1686185194000},{"_id":"themes/hexo-theme-aurora/src/styles/components/article.scss","hash":"aa66b8ec3ad9a45f87b3f8ff3cb578e1a6dbccf2","modified":1686185194000},{"_id":"themes/hexo-theme-aurora/src/styles/components/sidebar-box.scss","hash":"37937391ea224b0c6aa28d9fa7fea63d64b79b5e","modified":1686185194001},{"_id":"themes/hexo-theme-aurora/src/utils/aurora-dia/index.ts","hash":"0fc1f0d915efeb10115fda626203a87321ba8788","modified":1686185194002},{"_id":"themes/hexo-theme-aurora/src/locales/languages/cn.json","hash":"2ea72753f0394cb14e65bb8428e2204408ee7723","modified":1686185193987},{"_id":"themes/hexo-theme-aurora/src/locales/languages/en.json","hash":"8f2ac7e9ad6fc25c1ea160bcb8c69dc3805ea5cc","modified":1686185193988},{"_id":"themes/hexo-theme-aurora/src/components/ArticleCard/src/Article.vue","hash":"91b4dfa26362bc987c7d63e7ed868665eb5610e3","modified":1686185193955},{"_id":"themes/hexo-theme-aurora/src/components/ArticleCard/src/HorizontalArticle.vue","hash":"f42cc866ee50a5f2b4d629535d9e11b51dddbcd0","modified":1686185193955},{"_id":"themes/hexo-theme-aurora/src/components/Dropdown/src/Dropdown.vue","hash":"d25b5c37681c5dd97a1e30888c86e91845485d30","modified":1686185193956},{"_id":"themes/hexo-theme-aurora/src/components/Dropdown/src/DropdownItem.vue","hash":"8b55bd892975ee5de2386fab3f913d7cde7182ce","modified":1686185193956},{"_id":"themes/hexo-theme-aurora/src/components/Dropdown/src/DropdownMenu.vue","hash":"f1051cd3dbc5c9049c3863735a580bab3b237a7e","modified":1686185193957},{"_id":"themes/hexo-theme-aurora/src/components/Header/src/Controls.vue","hash":"92b5b88cd186568aa6f331557644b602e23db78d","modified":1686185193959},{"_id":"themes/hexo-theme-aurora/src/components/Feature/src/Feature.vue","hash":"26611f8a68c76b088feac20fc632b90ed768ef0c","modified":1686185193957},{"_id":"themes/hexo-theme-aurora/src/components/Feature/src/FeatureList.vue","hash":"e01968f56de5f7350da0aedf80da1b3144f71aa0","modified":1686185193958},{"_id":"themes/hexo-theme-aurora/src/components/Header/src/Header.vue","hash":"6f4120d2601285013d3df555dbc7314c46e789d2","modified":1686185193959},{"_id":"themes/hexo-theme-aurora/src/components/Header/src/Navigation.vue","hash":"1310485b89dc97854ae7c41ea9d67ddc60391800","modified":1686185193959},{"_id":"themes/hexo-theme-aurora/src/components/Header/src/Logo.vue","hash":"132767335e592b879329d2dfeff9b6a555a7fb80","modified":1686185193959},{"_id":"themes/hexo-theme-aurora/src/components/Sidebar/src/Navigator.vue","hash":"90210c5ac02583360ff98185088545fe64f1bb0f","modified":1686185193963},{"_id":"themes/hexo-theme-aurora/src/components/Sidebar/src/CategoryBox.vue","hash":"4d1f34b0e1a5d4d899ed8eaaceaad11831f938ed","modified":1686185193963},{"_id":"themes/hexo-theme-aurora/src/components/Sidebar/src/RecentComment.vue","hash":"07bc814171f7eae0e3e5643c9f9049e0f48c9236","modified":1686185193964},{"_id":"themes/hexo-theme-aurora/src/components/Sidebar/src/Sidebar.vue","hash":"a05ecf22f3113624dde74d63712f5590616e8ff6","modified":1686185193964},{"_id":"themes/hexo-theme-aurora/src/components/Sidebar/src/Profile.vue","hash":"9529022ec354a47f926c2dfa5b4e3786f6cd6ba0","modified":1686185193963},{"_id":"themes/hexo-theme-aurora/src/components/Sidebar/src/TagBox.vue","hash":"9b7aae652c899ca06d66c3c46ee76e0c8c8321f3","modified":1686185193964},{"_id":"themes/hexo-theme-aurora/src/components/Sidebar/src/Toc.vue","hash":"8fcc1bc890e9fa1a22ec09f683b8d22a3a21c84c","modified":1686185193964},{"_id":"themes/hexo-theme-aurora/src/components/Title/src/Title.vue","hash":"c0e6c51aba7b5d207ef59286e2d3dda5b5bcbcc5","modified":1686185193968},{"_id":"themes/hexo-theme-aurora/src/components/Title/src/SubTitle.vue","hash":"af7dbda26df80cf102cddd5463a82755f94ef73d","modified":1686185193968},{"_id":"themes/hexo-theme-aurora/src/utils/aurora-dia/messages/cn.json","hash":"69ce04e175e657ed98903c1a076c47b8f62b14ea","modified":1686185194002},{"_id":"themes/hexo-theme-aurora/src/utils/aurora-dia/messages/en.json","hash":"5336bed90e2a81ddc150e7ac690a61e4e5b0a4e7","modified":1686185194002},{"_id":"themes/hexo-theme-aurora/source/static/css/app.0d31776f.css","hash":"43b43acd76bd8dc22f34cc49c7e026c45c3a5004","modified":1686185829018},{"_id":"themes/hexo-theme-aurora/src/icons/svg/empty-search.svg","hash":"8f57d88c54beec671d77b2df929f1fdb18897992","modified":1686185193974},{"_id":"themes/hexo-theme-aurora/source/static/js/app.c39752b7.js","hash":"8cfc9fdb15e23c072886bacd9c746ee944f6d46c","modified":1686185829021},{"_id":"themes/hexo-theme-aurora/source/static/js/chunk-libs.dc6146cd.js","hash":"534266637d09abf39278f4d3a21bd36728740105","modified":1686185829020},{"_id":"themes/hexo-theme-aurora/yarn.lock","hash":"9e02d093d51270a656537af37e5275f96daec3cc","modified":1686185194012},{"_id":"themes/hexo-theme-aurora/package-lock.json","hash":"a97cba44fd87413db3cabdd4e425c71abae857b0","modified":1686185322253}],"Category":[{"name":"规范","_id":"climfiox20003ol9rdjage2hu"},{"name":"组件","_id":"climfioxc000eol9r5xq0405r"},{"name":"文章","_id":"climfioxf000kol9rflrjbrts"}],"Data":[],"Page":[{"title":"个人介绍","date":"2023-06-01T10:26:54.000Z","_content":"\n>工作经历（由近及远）\n\n:::details 点击查看更多\n\n> 集时通（福建）信息科技有限公司（2022-03 ～ 至今）\n> - 高级前端开发工程师\n\n参与项目\n  1. 竞赛系统\n  2. 移动门户\n  3. 海洋研究院-门户网站\n  4. 海洋研究院-门户网站管台\n  5. 学工系统\n  \n> 福州创活帮科技有限公司（2020-10 ～ 2022-03）\n> - 项目经理\n\n参与项目\n  1. uniapp项目（钓鱼项目） \n  2. uniapp项目（头疗项目）\n  3. 钓鱼项目管台及服务开发 \n\n> 福州微端网络科技有限公司（2018-06 ～ 2020-10）\n> - 项目组长\n\n参与项目\n  1. 各类小程序开发\n\n> 福州荧光信息技术有限公司（2015-06 ～ 2018-06）\n> - 开发工程师\n\n\n参与项目\n  1. 涉猎小程序开发\n  2. android应用开发\n  3. 涉猎java开发\n\n:::\n\n\n>涉猎技术\n\n:::details 点击查看更多\n  - 熟悉 nodejs 开发，使用eggjs，koa2框架作为小程序的服务端，利用docker部署。\n  - 熟练微信小程序开发，熟悉uniapp混合开发。\n  - 熟练微信生态接口(支付，订阅消息等)。\n  - 熟练vue，使用Ant Design，element ui框架开发中台前端。\n  - 有团队管理经验。 有较强的学习能力，善于团队合作，不断在工作中提升开发技能。\n  - 组件二次封装经验。\n\n:::\n\n> 服务指南\n\n  - 可接各类小程序开发。\n  - 工作经验足，技术可靠。团队成员稳定。\n  - 有意者可添加微信 yjh93108, 添加请备注【开发咨询】,欢迎打扰。\n","source":"about/index.md","raw":"---\ntitle: 个人介绍\ndate: 2023-06-01 18:26:54\n---\n\n>工作经历（由近及远）\n\n:::details 点击查看更多\n\n> 集时通（福建）信息科技有限公司（2022-03 ～ 至今）\n> - 高级前端开发工程师\n\n参与项目\n  1. 竞赛系统\n  2. 移动门户\n  3. 海洋研究院-门户网站\n  4. 海洋研究院-门户网站管台\n  5. 学工系统\n  \n> 福州创活帮科技有限公司（2020-10 ～ 2022-03）\n> - 项目经理\n\n参与项目\n  1. uniapp项目（钓鱼项目） \n  2. uniapp项目（头疗项目）\n  3. 钓鱼项目管台及服务开发 \n\n> 福州微端网络科技有限公司（2018-06 ～ 2020-10）\n> - 项目组长\n\n参与项目\n  1. 各类小程序开发\n\n> 福州荧光信息技术有限公司（2015-06 ～ 2018-06）\n> - 开发工程师\n\n\n参与项目\n  1. 涉猎小程序开发\n  2. android应用开发\n  3. 涉猎java开发\n\n:::\n\n\n>涉猎技术\n\n:::details 点击查看更多\n  - 熟悉 nodejs 开发，使用eggjs，koa2框架作为小程序的服务端，利用docker部署。\n  - 熟练微信小程序开发，熟悉uniapp混合开发。\n  - 熟练微信生态接口(支付，订阅消息等)。\n  - 熟练vue，使用Ant Design，element ui框架开发中台前端。\n  - 有团队管理经验。 有较强的学习能力，善于团队合作，不断在工作中提升开发技能。\n  - 组件二次封装经验。\n\n:::\n\n> 服务指南\n\n  - 可接各类小程序开发。\n  - 工作经验足，技术可靠。团队成员稳定。\n  - 有意者可添加微信 yjh93108, 添加请备注【开发咨询】,欢迎打扰。\n","updated":"2023-06-05T10:46:14.536Z","path":"about/index.html","comments":1,"layout":"page","_id":"climfiows0000ol9r8d025vgs","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>工作经历（由近及远）</p></blockquote>\n<details class=\"custom-details\">\n<summary>点击查看更多</summary>\n<p><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>集时通（福建）信息科技有限公司（2022-03 ～ 至今）</p>\n<ul>\n<li>高级前端开发工程师</li>\n</ul></blockquote>\n<p>参与项目</p>\n<ol>\n<li>竞赛系统</li>\n<li>移动门户</li>\n<li>海洋研究院-门户网站</li>\n<li>海洋研究院-门户网站管台</li>\n<li>学工系统</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>福州创活帮科技有限公司（2020-10 ～ 2022-03）</p>\n<ul>\n<li>项目经理</li>\n</ul></blockquote>\n<p>参与项目</p>\n<ol>\n<li>uniapp项目（钓鱼项目） </li>\n<li>uniapp项目（头疗项目）</li>\n<li>钓鱼项目管台及服务开发</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>福州微端网络科技有限公司（2018-06 ～ 2020-10）</p>\n<ul>\n<li>项目组长</li>\n</ul></blockquote>\n<p>参与项目</p>\n<ol>\n<li>各类小程序开发</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>福州荧光信息技术有限公司（2015-06 ～ 2018-06）</p>\n<ul>\n<li>开发工程师</li>\n</ul></blockquote>\n<p>参与项目</p>\n<ol>\n<li>涉猎小程序开发</li>\n<li>android应用开发</li>\n<li>涉猎java开发</li>\n</ol>\n</p>\n</details>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>涉猎技术</p></blockquote>\n<details class=\"custom-details\">\n<summary>点击查看更多</summary>\n<ul>\n<li>熟悉 nodejs 开发，使用eggjs，koa2框架作为小程序的服务端，利用docker部署。</li>\n<li>熟练微信小程序开发，熟悉uniapp混合开发。</li>\n<li>熟练微信生态接口(支付，订阅消息等)。</li>\n<li>熟练vue，使用Ant Design，element ui框架开发中台前端。</li>\n<li>有团队管理经验。 有较强的学习能力，善于团队合作，不断在工作中提升开发技能。</li>\n<li>组件二次封装经验。</li>\n</ul>\n\n</details>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>服务指南</p></blockquote>\n<ul>\n<li>可接各类小程序开发。</li>\n<li>工作经验足，技术可靠。团队成员稳定。</li>\n<li>有意者可添加微信 yjh93108, 添加请备注【开发咨询】,欢迎打扰。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>工作经历（由近及远）</p>\n</blockquote>\n<p>:::details 点击查看更多</p>\n<blockquote>\n<p>集时通（福建）信息科技有限公司（2022-03 ～ 至今）</p>\n<ul>\n<li>高级前端开发工程师</li>\n</ul>\n</blockquote>\n<p>参与项目</p>\n<ol>\n<li>竞赛系统</li>\n<li>移动门户</li>\n<li>海洋研究院-门户网站</li>\n<li>海洋研究院-门户网站管台</li>\n<li>学工系统</li>\n</ol>\n<blockquote>\n<p>福州创活帮科技有限公司（2020-10 ～ 2022-03）</p>\n<ul>\n<li>项目经理</li>\n</ul>\n</blockquote>\n<p>参与项目</p>\n<ol>\n<li>uniapp项目（钓鱼项目） </li>\n<li>uniapp项目（头疗项目）</li>\n<li>钓鱼项目管台及服务开发</li>\n</ol>\n<blockquote>\n<p>福州微端网络科技有限公司（2018-06 ～ 2020-10）</p>\n<ul>\n<li>项目组长</li>\n</ul>\n</blockquote>\n<p>参与项目</p>\n<ol>\n<li>各类小程序开发</li>\n</ol>\n<blockquote>\n<p>福州荧光信息技术有限公司（2015-06 ～ 2018-06）</p>\n<ul>\n<li>开发工程师</li>\n</ul>\n</blockquote>\n<p>参与项目</p>\n<ol>\n<li>涉猎小程序开发</li>\n<li>android应用开发</li>\n<li>涉猎java开发</li>\n</ol>\n<p>:::</p>\n<blockquote>\n<p>涉猎技术</p>\n</blockquote>\n<p>:::details 点击查看更多</p>\n<ul>\n<li>熟悉 nodejs 开发，使用eggjs，koa2框架作为小程序的服务端，利用docker部署。</li>\n<li>熟练微信小程序开发，熟悉uniapp混合开发。</li>\n<li>熟练微信生态接口(支付，订阅消息等)。</li>\n<li>熟练vue，使用Ant Design，element ui框架开发中台前端。</li>\n<li>有团队管理经验。 有较强的学习能力，善于团队合作，不断在工作中提升开发技能。</li>\n<li>组件二次封装经验。</li>\n</ul>\n<p>:::</p>\n<blockquote>\n<p>服务指南</p>\n</blockquote>\n<ul>\n<li>可接各类小程序开发。</li>\n<li>工作经验足，技术可靠。团队成员稳定。</li>\n<li>有意者可添加微信 yjh93108, 添加请备注【开发咨询】,欢迎打扰。</li>\n</ul>\n"}],"Post":[{"title":"阿里Vue规范整理","date":"2022-10-15T10:49:36.000Z","_content":"\n# 阿里Vue 规范\n\n\n## Vue 项目规范\n\n### Vue 编码基础\n\n#### vue 项目规范以 Vue [官方规范](https://cn.vuejs.org/v2/style-guide/) 中的 A 规范为基础，在其上面进行项目开发，故所有代码均遵守该规范。\n#### 请仔仔细细阅读 Vue 官方规范，切记，此为第一步。\n\n### 组件规范\n\n#### 组件名为多个单词。\n\n>组件名应该始终是多个单词组成（大于等于 2），且命名规范为KebabCase格式。\n这样做可以避免跟现有的以及未来的 HTML 元素相冲突，因为所有的 HTML 元素名称都是单个单词的。\n\n##### 正例：\n\n      export default {\n        name: 'TodoItem'\n        // ...\n      };\n      反例：\n      export default {\n        name: 'Todo',\n        // ...\n      }\n      export default {\n        name: 'todo-item',\n        // ...\n      }\n\n#### 组件文件名为 pascal-case 格式\n\n##### 正例：\n      components/\n      |- my-component.vue\n\n##### 反例：\n\n      components/\n      |- myComponent.vue\n      |- MyComponent.vue\n      3) 基础组件文件名为 base 开头，使用完整单词而不是缩写。\n\n##### 正例：\n\n      components/\n      |- base-button.vue\n      |- base-table.vue\n      |- base-icon.vue\n\n##### 反例：\n\n      components/\n      |- MyButton.vue\n      |- VueTable.vue\n      |- Icon.vue\n      4) 和父组件紧密耦合的子组件应该以父组件名作为前缀命名\n\n##### 正例：\n\n      components/\n      |- todo-list.vue\n      |- todo-list-item.vue\n      |- todo-list-item-button.vue\n      |- user-profile-options.vue （完整单词）\n      \n##### 反例：\n\n      components/\n      |- TodoList.vue\n      |- TodoItem.vue\n      |- TodoButton.vue\n      |- UProfOpts.vue （使用了缩写）\n\n\n#### 在 Template 模版中使用组件，应使用 PascalCase 模式，并且使用自闭合组件。\n\n##### 正例：\n\n      <!-- 在单文件组件、字符串模板和 JSX 中 -->\n      <MyComponent />\n      <Row><table :column=\"data\"/></Row>\n\n##### 反例：\n\n      <my-component /> <row><table :column=\"data\"/></row>\n\n#### 组件的 data 必须是一个函数\n\n##### 正例：\n\n      export default {\n        data () {\n          return {\n            name: 'jack'\n          }\n        }\n      }\n\n##### 反例：\n\n      export default {\n        data: {\n          name: 'jack'\n        }\n      }\n\n#### Prop 定义应该尽量详细\n\n - 必须使用 camelCase 驼峰命名\n - 必须指定类型\n - 必须加上注释，表明其含义\n - 必须加上 required 或者 default，两者二选其一\n - 如果有业务需要，必须加上 validator 验证\n\n##### 正例：\n\n      props: {\n        // 组件状态，用于控制组件的颜色\n        status: {\n          type: String,\n          required: true,\n          validator: function (value) {\n            return [\n              'succ',\n              'info',\n              'error'\n            ].indexOf(value) !== -1\n          }\n        },\n          // 用户级别，用于显示皇冠个数\n        userLevel：{\n            type: String,\n            required: true\n        }\n      }\n\n#### 为组件样式设置作用域\n\n##### 正例：\n\n      <template>\n        <button class=\"btn btn-close\">X</button>\n      </template>\n      <!-- 使用 `scoped` 特性 -->\n      <style scoped>\n        .btn-close {\n          background-color: red;\n        }\n      </style>\n\n##### 反例：\n\n      <template>\n        <button class=\"btn btn-close\">X</button>\n      </template>\n      <!-- 没有使用 `scoped` 特性 -->\n      <style>\n        .btn-close {\n          background-color: red;\n        }\n      </style>\n\n\n#### 如果特性元素较多，应该主动换行。\n\n##### 正例：\n\n      <MyComponent foo=\"a\" bar=\"b\" baz=\"c\"\n          foo=\"a\" bar=\"b\" baz=\"c\"\n          foo=\"a\" bar=\"b\" baz=\"c\"\n      />\n\n##### 反例：\n\n      <MyComponent foo=\"a\" bar=\"b\" baz=\"c\" foo=\"a\" bar=\"b\" baz=\"c\" foo=\"a\" bar=\"b\" baz=\"c\" foo=\"a\" bar=\"b\" baz=\"c\"/>\n\n### 模板中使用简单的表达式\n>组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。复杂表达式会让你的模板变得不那么声明式。我们应该尽量描述应该出现的是什么，而非如何计算那个值。而且计算属性和方法使得代码可以重用。\n\n##### 正例：\n```vue\n      <template>\n        <p>{{ normalizedFullName }}</p>\n      </template>\n      // 复杂表达式已经移入一个计算属性\n      computed: {\n        normalizedFullName: function () {\n          return this.fullName.split(' ').map(function (word) {\n            return word[0].toUpperCase() + word.slice(1)\n          }).join(' ')\n        }\n      }\n```\n##### 反例：\n```vue\n      <template>\n        <p>\n            {{\n                fullName.split(' ').map(function (word) {\n                  return word[0].toUpperCase() + word.slice(1)\n                }).join(' ')\n              }}\n        </p>\n      </template>\n```\n\n#### 指令都使用缩写形式\n\n>指令推荐都使用缩写形式，(用 : 表示 v-bind: 、用 @ 表示 v-on: 和用 # 表示 v-slot:)\n\n##### 正例：\n\n    <input\n      @input=\"onInput\"\n      @focus=\"onFocus\"\n    >\n\n##### 反例：\n\n      <input\n        v-on:input=\"onInput\"\n        @focus=\"onFocus\"\n      >\n\n#### 标签顺序保持一致\n\n>单文件组件应该总是让标签顺序保持为\n\n##### 正例：\n      <template>...</template>\n      <script>...</script>\n      <style>...</style>\n\n##### 反例：\n\n      <template>...</template>\n      <style>...</style>\n      <script>...</script>\n\n#### 必须为 v-for 设置键值 key\n\n#### v-show 与 v-if 选择\n>如果运行时，需要非常频繁地切换，使用 v-show ；如果在运行时，条件很少改变，使用 v-if。\n\n#### script 标签内部结构顺序\n>components > props > data > computed > watch > filter > 钩子函数（钩子函数按其执行顺序） > methods\n\n### Vue Router 规范\n\n#### 页面跳转数据传递使用路由参数\n\n>页面跳转，例如 A 页面跳转到 B 页面，需要将 A 页面的数据传递到 B 页面，推荐使用 路由参数进行传参，而不是将需要传递的数据保存 vuex，然后在 B 页面取出 vuex 的数据，因为如果在 B 页面刷新会导致 vuex 数据丢失，导致 B 页面无法正常显示数据。\n\n##### 正例：\n\n      let id = ' 123';\n      this.$router.push({ name: 'userCenter', query: { id: id } });\n\n###### 使用路由懒加载（延迟加载）机制\n\n      {\n          path: '/uploadAttachment',\n          name: 'uploadAttachment',\n          meta: {\n            title: '上传附件'\n          },\n          component: () => import('@/view/components/uploadAttachment/index.vue')\n        },\n\n#### router 中的命名规范\n\n - path、childrenPoints 命名规范采用kebab-case命名规范（尽量vue文件的目录结构保持一致，因为目录、文件名都是kebab-case，这样很方便找到对应的文件）\n\n - name 命名规范采用KebabCase命名规范且和component组件名保持一致！（因为要保持keep-alive特性，keep-alive按照component的name进行缓存，所以两者必须高度保持一致）\n\n          // 动态加载\n          export const reload = [\n            {\n              path: '/reload',\n              name: 'reload',\n              component: Main,\n              meta: {\n                title: '动态加载',\n                icon: 'icon iconfont'\n              },\n              children: [\n                {\n                  path: '/reload/smart-reload-list',\n                  name: 'SmartReloadList',\n                  meta: {\n                    title: 'SmartReload',\n                    childrenPoints: [\n                      {\n                        title: '查询',\n                        name: 'smart-reload-search'\n                      },\n                      {\n                        title: '执行reload',\n                        name: 'smart-reload-update'\n                      },\n                      {\n                        title: '查看执行结果',\n                        name: 'smart-reload-result'\n                      }\n                    ]\n                  },\n                  component: () =>\n                    import('@/views/reload/smart-reload/smart-reload-list.vue')\n                }\n              ]\n            }\n          ];\n\n### router 中的 path 命名规范\n\n>path除了采用kebab-case命名规范以外，必须以 / 开头，即使是children里的path也要以 / 开头。如下示例\n\n#### 目的：\n>经常有这样的场景：某个页面有问题，要立刻找到这个vue文件，如果不用以/开头，path为parent和children组成的，可能经常需要在router文件里搜索多次才能找到，而如果以/开头，则能立刻搜索到对应的组件\n\n      {\n          path: '/file',\n          name: 'File',\n          component: Main,\n          meta: {\n            title: '文件服务',\n            icon: 'ios-cloud-upload'\n          },\n          children: [\n            {\n              path: '/file/file-list',\n              name: 'FileList',\n              component: () => import('@/views/file/file-list.vue')\n            },\n            {\n              path: '/file/file-add',\n              name: 'FileAdd',\n              component: () => import('@/views/file/file-add.vue')\n            },\n            {\n              path: '/file/file-update',\n              name: 'FileUpdate',\n              component: () => import('@/views/file/file-update.vue')\n            }\n          ]\n        }\n\n## Vue 项目目录规范\n\n### 基础\n\n#### vue 项目中的所有命名一定要与后端命名统一。\n>比如权限：后端 privilege, 前端无论 router , store, api 等都必须使用 privielege 单词！\n\n#### 使用 Vue-cli 脚手架\n\n>使用 vue-cli3 来初始化项目，项目名按照上面的命名规范。\n\n#### 目录说明\n\n>目录名按照上面的命名规范，其中 components 组件用大写驼峰，其余除 components 组件目录外的所有目录均使用 kebab-case 命名。\n\n      src                                  源码目录\n      |-- api                              所有api接口\n      |-- assets                           静态资源，images, icons, styles等\n      |-- components                       公用组件\n      |-- config                           配置信息\n      |-- constants                        常量信息，项目所有Enum, 全局常量等\n      |-- directives                       自定义指令\n      |-- filters                          过滤器，全局工具\n      |-- datas                            模拟数据，临时存放\n      |-- lib                              外部引用的插件存放及修改文件\n      |-- mock                             模拟接口，临时存放\n      |-- plugins                          插件，全局使用\n      |-- router                           路由，统一管理\n      |-- store                            vuex, 统一管理\n      |-- themes                           自定义样式主题\n      |-- views                            视图目录\n      |   |-- role                                 role模块名\n      |   |-- |-- role-list.vue                    role列表页面\n      |   |-- |-- role-add.vue                     role新建页面\n      |   |-- |-- role-update.vue                  role更新页面\n      |   |-- |-- index.less                       role模块样式\n      |   |-- |-- components                       role模块通用组件文件夹\n      |   |-- employee                             employee模块\n\n\n### api 目录\n\n#### 文件、变量命名要与后端保持一致。\n\n>此目录对应后端 API 接口，按照后端一个 controller 一个 api js 文件。若项目较大时，可以按照业务划分子目录，并与后端保持一致。\n>api 中的方法名字要与后端 api url 尽量保持语义高度一致性。\n>对于 api 中的每个方法要添加注释，注释与后端 swagger 文档保持一致。\n\n##### 正例：\n\n      后端 url： EmployeeController.java\n      /employee/add\n      /employee/delete/{id}\n      /employee/update\n\n      前端： employee.js\n        // 添加员工\n        addEmployee: (data) => {\n          return postAxios('/employee/add', data)\n        },\n        // 更新员工信息\n        updateEmployee: (data) => {\n          return postAxios('/employee/update', data)\n        },\n          // 删除员工\n        deleteEmployee: (employeeId) => {\n          return postAxios('/employee/delete/' + employeeId)\n        },\n\n### assets 目录\n\n> assets 为静态资源，里面存放 images, styles, icons 等静态资源，静态资源命名格式为 kebab-case\n\n> 如果图片过多，可以新增文件夹来区分\n\n      |assets\n      |-- icons\n      |-- images\n      |   |-- background-color.png\n      |   |-- upload-header.png\n      |-- styles\n\n      |assets\n      |-- icons\n      |-- images\n      |-- |-- login\n      |   |   |-- background-color.png\n      |   |-- upload-header.png\n      |-- styles\n\n### components 目录\n\n> 此目录应按照组件进行目录划分，目录命名为 KebabCase，组件命名规则也为 KebabCase\n\n      |components\n      |-- error-log\n      |   |-- index.vue\n      |   |-- index.less\n      |-- markdown-editor\n      |   |-- index.vue\n      |   |-- index.js\n      |-- kebab-case\n\n### constants 目录\n\n> 此目录存放项目所有常量，如果常量在 vue 中使用，请使用 [vue-enum 插件](https://www.npmjs.com/package/vue-enum)\n\n#### 目录结构：\n\n      |constants\n      |-- index.js\n      |-- role.js\n      |-- employee.js\n\n##### 例子： employee.js\n\n      export const EMPLOYEE_STATUS = {\n        NORMAL: {\n          value: 1,\n          desc: '正常'\n        },\n        DISABLED: {\n          value: 1,\n          desc: '禁用'\n        },\n        DELETED: {\n          value: 2,\n          desc: '已删除'\n        }\n      };\n      export const EMPLOYEE_ACCOUNT_TYPE = {\n        QQ: {\n          value: 1,\n          desc: 'QQ登录'\n        },\n        WECHAT: {\n          value: 2,\n          desc: '微信登录'\n        },\n        DINGDING: {\n          value: 3,\n          desc: '钉钉登录'\n        },\n        USERNAME: {\n          value: 4,\n          desc: '用户名密码登录'\n        }\n      };\n      export default {\n        EMPLOYEE_STATUS,\n        EMPLOYEE_ACCOUNT_TYPE\n      };\n\n\n### router 与 store 目录\n\n>这两个目录一定要将业务进行拆分，不能放到一个 js 文件里。\n\n>router 尽量按照 views 中的结构保持一致\n\n>store 按照业务进行拆分不同的 js 文件\n\n### views 目录\n\n> 命名要与后端、router、api 等保持一致\n\n> components 中组件要使用 PascalCase 规则\n\n      |-- views                                    视图目录\n      |   |-- role                                 role模块名\n      |   |   |-- role-list.vue                    role列表页面\n      |   |   |-- role-add.vue                     role新建页面\n      |   |   |-- role-update.vue                  role更新页面\n      |   |   |-- index.less                      role模块样式\n      |   |   |-- components                      role模块通用组件文件夹\n      |   |   |   |-- role-header.vue             role头部组件\n      |   |   |   |-- role-modal.vue              role弹出框组件\n      |   |-- employee                            employee模块\n      |   |-- behavior-log                        行为日志log模块\n      |   |-- code-generator                      代码生成器模块\n\n### 注释说明\n - 整理必须加注释的地方\n - 公共组件使用说明\n - api 目录的接口 js 文件必须加注释\n - store 中的 state, mutation, action 等必须加注释\n - vue 文件中的 template 必须加注释，若文件较大添加 start end 注释\n - vue 文件的 methods，每个 method 必须添加注释\n - vue 文件的 data, 非常见单词要加注释\n\n### 其他\n\n#### 尽量不要手动操作 DOM\n> 因使用 vue 框架，所以在项目开发中尽量使用 vue 的数据驱动更新 DOM，尽量（不到万不得已）不要手动操作 DOM，包括：增删改 dom 元素、以及更改样式、添加事件等。\n\n#### 删除无用代码\n\n>因使用了 git/svn 等代码版本工具，对于无用代码必须及时删除，例如：一些调试的 console 语句、无用的弃用功能代码。","source":"_posts/ali-vue.md","raw":"---\ntitle: 阿里Vue规范整理\ndate: 2022-10-15 18:49:36\ntags:\n  - Vue 规范\ncategories:\n  - 规范\n# cover: https://cover.png\n# feature: true\n---\n\n# 阿里Vue 规范\n\n\n## Vue 项目规范\n\n### Vue 编码基础\n\n#### vue 项目规范以 Vue [官方规范](https://cn.vuejs.org/v2/style-guide/) 中的 A 规范为基础，在其上面进行项目开发，故所有代码均遵守该规范。\n#### 请仔仔细细阅读 Vue 官方规范，切记，此为第一步。\n\n### 组件规范\n\n#### 组件名为多个单词。\n\n>组件名应该始终是多个单词组成（大于等于 2），且命名规范为KebabCase格式。\n这样做可以避免跟现有的以及未来的 HTML 元素相冲突，因为所有的 HTML 元素名称都是单个单词的。\n\n##### 正例：\n\n      export default {\n        name: 'TodoItem'\n        // ...\n      };\n      反例：\n      export default {\n        name: 'Todo',\n        // ...\n      }\n      export default {\n        name: 'todo-item',\n        // ...\n      }\n\n#### 组件文件名为 pascal-case 格式\n\n##### 正例：\n      components/\n      |- my-component.vue\n\n##### 反例：\n\n      components/\n      |- myComponent.vue\n      |- MyComponent.vue\n      3) 基础组件文件名为 base 开头，使用完整单词而不是缩写。\n\n##### 正例：\n\n      components/\n      |- base-button.vue\n      |- base-table.vue\n      |- base-icon.vue\n\n##### 反例：\n\n      components/\n      |- MyButton.vue\n      |- VueTable.vue\n      |- Icon.vue\n      4) 和父组件紧密耦合的子组件应该以父组件名作为前缀命名\n\n##### 正例：\n\n      components/\n      |- todo-list.vue\n      |- todo-list-item.vue\n      |- todo-list-item-button.vue\n      |- user-profile-options.vue （完整单词）\n      \n##### 反例：\n\n      components/\n      |- TodoList.vue\n      |- TodoItem.vue\n      |- TodoButton.vue\n      |- UProfOpts.vue （使用了缩写）\n\n\n#### 在 Template 模版中使用组件，应使用 PascalCase 模式，并且使用自闭合组件。\n\n##### 正例：\n\n      <!-- 在单文件组件、字符串模板和 JSX 中 -->\n      <MyComponent />\n      <Row><table :column=\"data\"/></Row>\n\n##### 反例：\n\n      <my-component /> <row><table :column=\"data\"/></row>\n\n#### 组件的 data 必须是一个函数\n\n##### 正例：\n\n      export default {\n        data () {\n          return {\n            name: 'jack'\n          }\n        }\n      }\n\n##### 反例：\n\n      export default {\n        data: {\n          name: 'jack'\n        }\n      }\n\n#### Prop 定义应该尽量详细\n\n - 必须使用 camelCase 驼峰命名\n - 必须指定类型\n - 必须加上注释，表明其含义\n - 必须加上 required 或者 default，两者二选其一\n - 如果有业务需要，必须加上 validator 验证\n\n##### 正例：\n\n      props: {\n        // 组件状态，用于控制组件的颜色\n        status: {\n          type: String,\n          required: true,\n          validator: function (value) {\n            return [\n              'succ',\n              'info',\n              'error'\n            ].indexOf(value) !== -1\n          }\n        },\n          // 用户级别，用于显示皇冠个数\n        userLevel：{\n            type: String,\n            required: true\n        }\n      }\n\n#### 为组件样式设置作用域\n\n##### 正例：\n\n      <template>\n        <button class=\"btn btn-close\">X</button>\n      </template>\n      <!-- 使用 `scoped` 特性 -->\n      <style scoped>\n        .btn-close {\n          background-color: red;\n        }\n      </style>\n\n##### 反例：\n\n      <template>\n        <button class=\"btn btn-close\">X</button>\n      </template>\n      <!-- 没有使用 `scoped` 特性 -->\n      <style>\n        .btn-close {\n          background-color: red;\n        }\n      </style>\n\n\n#### 如果特性元素较多，应该主动换行。\n\n##### 正例：\n\n      <MyComponent foo=\"a\" bar=\"b\" baz=\"c\"\n          foo=\"a\" bar=\"b\" baz=\"c\"\n          foo=\"a\" bar=\"b\" baz=\"c\"\n      />\n\n##### 反例：\n\n      <MyComponent foo=\"a\" bar=\"b\" baz=\"c\" foo=\"a\" bar=\"b\" baz=\"c\" foo=\"a\" bar=\"b\" baz=\"c\" foo=\"a\" bar=\"b\" baz=\"c\"/>\n\n### 模板中使用简单的表达式\n>组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。复杂表达式会让你的模板变得不那么声明式。我们应该尽量描述应该出现的是什么，而非如何计算那个值。而且计算属性和方法使得代码可以重用。\n\n##### 正例：\n```vue\n      <template>\n        <p>{{ normalizedFullName }}</p>\n      </template>\n      // 复杂表达式已经移入一个计算属性\n      computed: {\n        normalizedFullName: function () {\n          return this.fullName.split(' ').map(function (word) {\n            return word[0].toUpperCase() + word.slice(1)\n          }).join(' ')\n        }\n      }\n```\n##### 反例：\n```vue\n      <template>\n        <p>\n            {{\n                fullName.split(' ').map(function (word) {\n                  return word[0].toUpperCase() + word.slice(1)\n                }).join(' ')\n              }}\n        </p>\n      </template>\n```\n\n#### 指令都使用缩写形式\n\n>指令推荐都使用缩写形式，(用 : 表示 v-bind: 、用 @ 表示 v-on: 和用 # 表示 v-slot:)\n\n##### 正例：\n\n    <input\n      @input=\"onInput\"\n      @focus=\"onFocus\"\n    >\n\n##### 反例：\n\n      <input\n        v-on:input=\"onInput\"\n        @focus=\"onFocus\"\n      >\n\n#### 标签顺序保持一致\n\n>单文件组件应该总是让标签顺序保持为\n\n##### 正例：\n      <template>...</template>\n      <script>...</script>\n      <style>...</style>\n\n##### 反例：\n\n      <template>...</template>\n      <style>...</style>\n      <script>...</script>\n\n#### 必须为 v-for 设置键值 key\n\n#### v-show 与 v-if 选择\n>如果运行时，需要非常频繁地切换，使用 v-show ；如果在运行时，条件很少改变，使用 v-if。\n\n#### script 标签内部结构顺序\n>components > props > data > computed > watch > filter > 钩子函数（钩子函数按其执行顺序） > methods\n\n### Vue Router 规范\n\n#### 页面跳转数据传递使用路由参数\n\n>页面跳转，例如 A 页面跳转到 B 页面，需要将 A 页面的数据传递到 B 页面，推荐使用 路由参数进行传参，而不是将需要传递的数据保存 vuex，然后在 B 页面取出 vuex 的数据，因为如果在 B 页面刷新会导致 vuex 数据丢失，导致 B 页面无法正常显示数据。\n\n##### 正例：\n\n      let id = ' 123';\n      this.$router.push({ name: 'userCenter', query: { id: id } });\n\n###### 使用路由懒加载（延迟加载）机制\n\n      {\n          path: '/uploadAttachment',\n          name: 'uploadAttachment',\n          meta: {\n            title: '上传附件'\n          },\n          component: () => import('@/view/components/uploadAttachment/index.vue')\n        },\n\n#### router 中的命名规范\n\n - path、childrenPoints 命名规范采用kebab-case命名规范（尽量vue文件的目录结构保持一致，因为目录、文件名都是kebab-case，这样很方便找到对应的文件）\n\n - name 命名规范采用KebabCase命名规范且和component组件名保持一致！（因为要保持keep-alive特性，keep-alive按照component的name进行缓存，所以两者必须高度保持一致）\n\n          // 动态加载\n          export const reload = [\n            {\n              path: '/reload',\n              name: 'reload',\n              component: Main,\n              meta: {\n                title: '动态加载',\n                icon: 'icon iconfont'\n              },\n              children: [\n                {\n                  path: '/reload/smart-reload-list',\n                  name: 'SmartReloadList',\n                  meta: {\n                    title: 'SmartReload',\n                    childrenPoints: [\n                      {\n                        title: '查询',\n                        name: 'smart-reload-search'\n                      },\n                      {\n                        title: '执行reload',\n                        name: 'smart-reload-update'\n                      },\n                      {\n                        title: '查看执行结果',\n                        name: 'smart-reload-result'\n                      }\n                    ]\n                  },\n                  component: () =>\n                    import('@/views/reload/smart-reload/smart-reload-list.vue')\n                }\n              ]\n            }\n          ];\n\n### router 中的 path 命名规范\n\n>path除了采用kebab-case命名规范以外，必须以 / 开头，即使是children里的path也要以 / 开头。如下示例\n\n#### 目的：\n>经常有这样的场景：某个页面有问题，要立刻找到这个vue文件，如果不用以/开头，path为parent和children组成的，可能经常需要在router文件里搜索多次才能找到，而如果以/开头，则能立刻搜索到对应的组件\n\n      {\n          path: '/file',\n          name: 'File',\n          component: Main,\n          meta: {\n            title: '文件服务',\n            icon: 'ios-cloud-upload'\n          },\n          children: [\n            {\n              path: '/file/file-list',\n              name: 'FileList',\n              component: () => import('@/views/file/file-list.vue')\n            },\n            {\n              path: '/file/file-add',\n              name: 'FileAdd',\n              component: () => import('@/views/file/file-add.vue')\n            },\n            {\n              path: '/file/file-update',\n              name: 'FileUpdate',\n              component: () => import('@/views/file/file-update.vue')\n            }\n          ]\n        }\n\n## Vue 项目目录规范\n\n### 基础\n\n#### vue 项目中的所有命名一定要与后端命名统一。\n>比如权限：后端 privilege, 前端无论 router , store, api 等都必须使用 privielege 单词！\n\n#### 使用 Vue-cli 脚手架\n\n>使用 vue-cli3 来初始化项目，项目名按照上面的命名规范。\n\n#### 目录说明\n\n>目录名按照上面的命名规范，其中 components 组件用大写驼峰，其余除 components 组件目录外的所有目录均使用 kebab-case 命名。\n\n      src                                  源码目录\n      |-- api                              所有api接口\n      |-- assets                           静态资源，images, icons, styles等\n      |-- components                       公用组件\n      |-- config                           配置信息\n      |-- constants                        常量信息，项目所有Enum, 全局常量等\n      |-- directives                       自定义指令\n      |-- filters                          过滤器，全局工具\n      |-- datas                            模拟数据，临时存放\n      |-- lib                              外部引用的插件存放及修改文件\n      |-- mock                             模拟接口，临时存放\n      |-- plugins                          插件，全局使用\n      |-- router                           路由，统一管理\n      |-- store                            vuex, 统一管理\n      |-- themes                           自定义样式主题\n      |-- views                            视图目录\n      |   |-- role                                 role模块名\n      |   |-- |-- role-list.vue                    role列表页面\n      |   |-- |-- role-add.vue                     role新建页面\n      |   |-- |-- role-update.vue                  role更新页面\n      |   |-- |-- index.less                       role模块样式\n      |   |-- |-- components                       role模块通用组件文件夹\n      |   |-- employee                             employee模块\n\n\n### api 目录\n\n#### 文件、变量命名要与后端保持一致。\n\n>此目录对应后端 API 接口，按照后端一个 controller 一个 api js 文件。若项目较大时，可以按照业务划分子目录，并与后端保持一致。\n>api 中的方法名字要与后端 api url 尽量保持语义高度一致性。\n>对于 api 中的每个方法要添加注释，注释与后端 swagger 文档保持一致。\n\n##### 正例：\n\n      后端 url： EmployeeController.java\n      /employee/add\n      /employee/delete/{id}\n      /employee/update\n\n      前端： employee.js\n        // 添加员工\n        addEmployee: (data) => {\n          return postAxios('/employee/add', data)\n        },\n        // 更新员工信息\n        updateEmployee: (data) => {\n          return postAxios('/employee/update', data)\n        },\n          // 删除员工\n        deleteEmployee: (employeeId) => {\n          return postAxios('/employee/delete/' + employeeId)\n        },\n\n### assets 目录\n\n> assets 为静态资源，里面存放 images, styles, icons 等静态资源，静态资源命名格式为 kebab-case\n\n> 如果图片过多，可以新增文件夹来区分\n\n      |assets\n      |-- icons\n      |-- images\n      |   |-- background-color.png\n      |   |-- upload-header.png\n      |-- styles\n\n      |assets\n      |-- icons\n      |-- images\n      |-- |-- login\n      |   |   |-- background-color.png\n      |   |-- upload-header.png\n      |-- styles\n\n### components 目录\n\n> 此目录应按照组件进行目录划分，目录命名为 KebabCase，组件命名规则也为 KebabCase\n\n      |components\n      |-- error-log\n      |   |-- index.vue\n      |   |-- index.less\n      |-- markdown-editor\n      |   |-- index.vue\n      |   |-- index.js\n      |-- kebab-case\n\n### constants 目录\n\n> 此目录存放项目所有常量，如果常量在 vue 中使用，请使用 [vue-enum 插件](https://www.npmjs.com/package/vue-enum)\n\n#### 目录结构：\n\n      |constants\n      |-- index.js\n      |-- role.js\n      |-- employee.js\n\n##### 例子： employee.js\n\n      export const EMPLOYEE_STATUS = {\n        NORMAL: {\n          value: 1,\n          desc: '正常'\n        },\n        DISABLED: {\n          value: 1,\n          desc: '禁用'\n        },\n        DELETED: {\n          value: 2,\n          desc: '已删除'\n        }\n      };\n      export const EMPLOYEE_ACCOUNT_TYPE = {\n        QQ: {\n          value: 1,\n          desc: 'QQ登录'\n        },\n        WECHAT: {\n          value: 2,\n          desc: '微信登录'\n        },\n        DINGDING: {\n          value: 3,\n          desc: '钉钉登录'\n        },\n        USERNAME: {\n          value: 4,\n          desc: '用户名密码登录'\n        }\n      };\n      export default {\n        EMPLOYEE_STATUS,\n        EMPLOYEE_ACCOUNT_TYPE\n      };\n\n\n### router 与 store 目录\n\n>这两个目录一定要将业务进行拆分，不能放到一个 js 文件里。\n\n>router 尽量按照 views 中的结构保持一致\n\n>store 按照业务进行拆分不同的 js 文件\n\n### views 目录\n\n> 命名要与后端、router、api 等保持一致\n\n> components 中组件要使用 PascalCase 规则\n\n      |-- views                                    视图目录\n      |   |-- role                                 role模块名\n      |   |   |-- role-list.vue                    role列表页面\n      |   |   |-- role-add.vue                     role新建页面\n      |   |   |-- role-update.vue                  role更新页面\n      |   |   |-- index.less                      role模块样式\n      |   |   |-- components                      role模块通用组件文件夹\n      |   |   |   |-- role-header.vue             role头部组件\n      |   |   |   |-- role-modal.vue              role弹出框组件\n      |   |-- employee                            employee模块\n      |   |-- behavior-log                        行为日志log模块\n      |   |-- code-generator                      代码生成器模块\n\n### 注释说明\n - 整理必须加注释的地方\n - 公共组件使用说明\n - api 目录的接口 js 文件必须加注释\n - store 中的 state, mutation, action 等必须加注释\n - vue 文件中的 template 必须加注释，若文件较大添加 start end 注释\n - vue 文件的 methods，每个 method 必须添加注释\n - vue 文件的 data, 非常见单词要加注释\n\n### 其他\n\n#### 尽量不要手动操作 DOM\n> 因使用 vue 框架，所以在项目开发中尽量使用 vue 的数据驱动更新 DOM，尽量（不到万不得已）不要手动操作 DOM，包括：增删改 dom 元素、以及更改样式、添加事件等。\n\n#### 删除无用代码\n\n>因使用了 git/svn 等代码版本工具，对于无用代码必须及时删除，例如：一些调试的 console 语句、无用的弃用功能代码。","slug":"ali-vue","published":1,"updated":"2023-06-05T10:46:14.526Z","comments":1,"layout":"post","photos":[],"link":"","_id":"climfiowx0001ol9rewpyb6cg","content":"<h1 id=\"阿里Vue-规范\"><a href=\"#阿里Vue-规范\" class=\"headerlink\" title=\"阿里Vue 规范\"></a>阿里Vue 规范</h1><h2 id=\"Vue-项目规范\"><a href=\"#Vue-项目规范\" class=\"headerlink\" title=\"Vue 项目规范\"></a>Vue 项目规范</h2><h3 id=\"Vue-编码基础\"><a href=\"#Vue-编码基础\" class=\"headerlink\" title=\"Vue 编码基础\"></a>Vue 编码基础</h3><h4 id=\"vue-项目规范以-Vue-官方规范-中的-A-规范为基础，在其上面进行项目开发，故所有代码均遵守该规范。\"><a href=\"#vue-项目规范以-Vue-官方规范-中的-A-规范为基础，在其上面进行项目开发，故所有代码均遵守该规范。\" class=\"headerlink\" title=\"vue 项目规范以 Vue 官方规范 中的 A 规范为基础，在其上面进行项目开发，故所有代码均遵守该规范。\"></a>vue 项目规范以 Vue <a href=\"https://cn.vuejs.org/v2/style-guide/\">官方规范</a> 中的 A 规范为基础，在其上面进行项目开发，故所有代码均遵守该规范。</h4><h4 id=\"请仔仔细细阅读-Vue-官方规范，切记，此为第一步。\"><a href=\"#请仔仔细细阅读-Vue-官方规范，切记，此为第一步。\" class=\"headerlink\" title=\"请仔仔细细阅读 Vue 官方规范，切记，此为第一步。\"></a>请仔仔细细阅读 Vue 官方规范，切记，此为第一步。</h4><h3 id=\"组件规范\"><a href=\"#组件规范\" class=\"headerlink\" title=\"组件规范\"></a>组件规范</h3><h4 id=\"组件名为多个单词。\"><a href=\"#组件名为多个单词。\" class=\"headerlink\" title=\"组件名为多个单词。\"></a>组件名为多个单词。</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>组件名应该始终是多个单词组成（大于等于 2），且命名规范为KebabCase格式。<br>这样做可以避免跟现有的以及未来的 HTML 元素相冲突，因为所有的 HTML 元素名称都是单个单词的。</p></blockquote>\n<h5 id=\"正例：\"><a href=\"#正例：\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  export default &#123;\n    name: &#39;TodoItem&#39;\n    // ...\n  &#125;;\n  反例：\n  export default &#123;\n    name: &#39;Todo&#39;,\n    // ...\n  &#125;\n  export default &#123;\n    name: &#39;todo-item&#39;,\n    // ...\n  &#125;\n</code></pre>\n<h4 id=\"组件文件名为-pascal-case-格式\"><a href=\"#组件文件名为-pascal-case-格式\" class=\"headerlink\" title=\"组件文件名为 pascal-case 格式\"></a>组件文件名为 pascal-case 格式</h4><h5 id=\"正例：-1\"><a href=\"#正例：-1\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  components/\n  |- my-component.vue\n</code></pre>\n<h5 id=\"反例：\"><a href=\"#反例：\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  components/\n  |- myComponent.vue\n  |- MyComponent.vue\n  3) 基础组件文件名为 base 开头，使用完整单词而不是缩写。\n</code></pre>\n<h5 id=\"正例：-2\"><a href=\"#正例：-2\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  components/\n  |- base-button.vue\n  |- base-table.vue\n  |- base-icon.vue\n</code></pre>\n<h5 id=\"反例：-1\"><a href=\"#反例：-1\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  components/\n  |- MyButton.vue\n  |- VueTable.vue\n  |- Icon.vue\n  4) 和父组件紧密耦合的子组件应该以父组件名作为前缀命名\n</code></pre>\n<h5 id=\"正例：-3\"><a href=\"#正例：-3\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  components/\n  |- todo-list.vue\n  |- todo-list-item.vue\n  |- todo-list-item-button.vue\n  |- user-profile-options.vue （完整单词）\n  \n</code></pre>\n<h5 id=\"反例：-2\"><a href=\"#反例：-2\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  components/\n  |- TodoList.vue\n  |- TodoItem.vue\n  |- TodoButton.vue\n  |- UProfOpts.vue （使用了缩写）\n</code></pre>\n<h4 id=\"在-Template-模版中使用组件，应使用-PascalCase-模式，并且使用自闭合组件。\"><a href=\"#在-Template-模版中使用组件，应使用-PascalCase-模式，并且使用自闭合组件。\" class=\"headerlink\" title=\"在 Template 模版中使用组件，应使用 PascalCase 模式，并且使用自闭合组件。\"></a>在 Template 模版中使用组件，应使用 PascalCase 模式，并且使用自闭合组件。</h4><h5 id=\"正例：-4\"><a href=\"#正例：-4\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  &lt;!-- 在单文件组件、字符串模板和 JSX 中 --&gt;\n  &lt;MyComponent /&gt;\n  &lt;Row&gt;&lt;table :column=&quot;data&quot;/&gt;&lt;/Row&gt;\n</code></pre>\n<h5 id=\"反例：-3\"><a href=\"#反例：-3\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  &lt;my-component /&gt; &lt;row&gt;&lt;table :column=&quot;data&quot;/&gt;&lt;/row&gt;\n</code></pre>\n<h4 id=\"组件的-data-必须是一个函数\"><a href=\"#组件的-data-必须是一个函数\" class=\"headerlink\" title=\"组件的 data 必须是一个函数\"></a>组件的 data 必须是一个函数</h4><h5 id=\"正例：-5\"><a href=\"#正例：-5\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  export default &#123;\n    data () &#123;\n      return &#123;\n        name: &#39;jack&#39;\n      &#125;\n    &#125;\n  &#125;\n</code></pre>\n<h5 id=\"反例：-4\"><a href=\"#反例：-4\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  export default &#123;\n    data: &#123;\n      name: &#39;jack&#39;\n    &#125;\n  &#125;\n</code></pre>\n<h4 id=\"Prop-定义应该尽量详细\"><a href=\"#Prop-定义应该尽量详细\" class=\"headerlink\" title=\"Prop 定义应该尽量详细\"></a>Prop 定义应该尽量详细</h4><ul>\n<li>必须使用 camelCase 驼峰命名</li>\n<li>必须指定类型</li>\n<li>必须加上注释，表明其含义</li>\n<li>必须加上 required 或者 default，两者二选其一</li>\n<li>如果有业务需要，必须加上 validator 验证</li>\n</ul>\n<h5 id=\"正例：-6\"><a href=\"#正例：-6\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  props: &#123;\n    // 组件状态，用于控制组件的颜色\n    status: &#123;\n      type: String,\n      required: true,\n      validator: function (value) &#123;\n        return [\n          &#39;succ&#39;,\n          &#39;info&#39;,\n          &#39;error&#39;\n        ].indexOf(value) !== -1\n      &#125;\n    &#125;,\n      // 用户级别，用于显示皇冠个数\n    userLevel：&#123;\n        type: String,\n        required: true\n    &#125;\n  &#125;\n</code></pre>\n<h4 id=\"为组件样式设置作用域\"><a href=\"#为组件样式设置作用域\" class=\"headerlink\" title=\"为组件样式设置作用域\"></a>为组件样式设置作用域</h4><h5 id=\"正例：-7\"><a href=\"#正例：-7\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  &lt;template&gt;\n    &lt;button class=&quot;btn btn-close&quot;&gt;X&lt;/button&gt;\n  &lt;/template&gt;\n  &lt;!-- 使用 `scoped` 特性 --&gt;\n  &lt;style scoped&gt;\n    .btn-close &#123;\n      background-color: red;\n    &#125;\n  &lt;/style&gt;\n</code></pre>\n<h5 id=\"反例：-5\"><a href=\"#反例：-5\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  &lt;template&gt;\n    &lt;button class=&quot;btn btn-close&quot;&gt;X&lt;/button&gt;\n  &lt;/template&gt;\n  &lt;!-- 没有使用 `scoped` 特性 --&gt;\n  &lt;style&gt;\n    .btn-close &#123;\n      background-color: red;\n    &#125;\n  &lt;/style&gt;\n</code></pre>\n<h4 id=\"如果特性元素较多，应该主动换行。\"><a href=\"#如果特性元素较多，应该主动换行。\" class=\"headerlink\" title=\"如果特性元素较多，应该主动换行。\"></a>如果特性元素较多，应该主动换行。</h4><h5 id=\"正例：-8\"><a href=\"#正例：-8\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  &lt;MyComponent foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot;\n      foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot;\n      foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot;\n  /&gt;\n</code></pre>\n<h5 id=\"反例：-6\"><a href=\"#反例：-6\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  &lt;MyComponent foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot; foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot; foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot; foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot;/&gt;\n</code></pre>\n<h3 id=\"模板中使用简单的表达式\"><a href=\"#模板中使用简单的表达式\" class=\"headerlink\" title=\"模板中使用简单的表达式\"></a>模板中使用简单的表达式</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。复杂表达式会让你的模板变得不那么声明式。我们应该尽量描述应该出现的是什么，而非如何计算那个值。而且计算属性和方法使得代码可以重用。</p></blockquote>\n<h5 id=\"正例：-9\"><a href=\"#正例：-9\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;p&gt;&#123;&#123; normalizedFullName &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">// 复杂表达式已经移入一个计算属性</span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  normalizedFullName: function () &#123;</span><br><span class=\"line\">    return this.fullName.split(&#x27; &#x27;).map(function (word) &#123;</span><br><span class=\"line\">      return word[0].toUpperCase() + word.slice(1)</span><br><span class=\"line\">    &#125;).join(&#x27; &#x27;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"反例：-7\"><a href=\"#反例：-7\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;p&gt;</span><br><span class=\"line\">      &#123;&#123;</span><br><span class=\"line\">          fullName.split(&#x27; &#x27;).map(function (word) &#123;</span><br><span class=\"line\">            return word[0].toUpperCase() + word.slice(1)</span><br><span class=\"line\">          &#125;).join(&#x27; &#x27;)</span><br><span class=\"line\">        &#125;&#125;</span><br><span class=\"line\">  &lt;/p&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"指令都使用缩写形式\"><a href=\"#指令都使用缩写形式\" class=\"headerlink\" title=\"指令都使用缩写形式\"></a>指令都使用缩写形式</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>指令推荐都使用缩写形式，(用 : 表示 v-bind: 、用 @ 表示 v-on: 和用 # 表示 v-slot:)</p></blockquote>\n<h5 id=\"正例：-10\"><a href=\"#正例：-10\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>&lt;input\n  @input=&quot;onInput&quot;\n  @focus=&quot;onFocus&quot;\n&gt;\n</code></pre>\n<h5 id=\"反例：-8\"><a href=\"#反例：-8\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  &lt;input\n    v-on:input=&quot;onInput&quot;\n    @focus=&quot;onFocus&quot;\n  &gt;\n</code></pre>\n<h4 id=\"标签顺序保持一致\"><a href=\"#标签顺序保持一致\" class=\"headerlink\" title=\"标签顺序保持一致\"></a>标签顺序保持一致</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>单文件组件应该总是让标签顺序保持为</p></blockquote>\n<h5 id=\"正例：-11\"><a href=\"#正例：-11\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  &lt;template&gt;...&lt;/template&gt;\n  &lt;script&gt;...&lt;/script&gt;\n  &lt;style&gt;...&lt;/style&gt;\n</code></pre>\n<h5 id=\"反例：-9\"><a href=\"#反例：-9\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  &lt;template&gt;...&lt;/template&gt;\n  &lt;style&gt;...&lt;/style&gt;\n  &lt;script&gt;...&lt;/script&gt;\n</code></pre>\n<h4 id=\"必须为-v-for-设置键值-key\"><a href=\"#必须为-v-for-设置键值-key\" class=\"headerlink\" title=\"必须为 v-for 设置键值 key\"></a>必须为 v-for 设置键值 key</h4><h4 id=\"v-show-与-v-if-选择\"><a href=\"#v-show-与-v-if-选择\" class=\"headerlink\" title=\"v-show 与 v-if 选择\"></a>v-show 与 v-if 选择</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果运行时，需要非常频繁地切换，使用 v-show ；如果在运行时，条件很少改变，使用 v-if。</p></blockquote>\n<h4 id=\"script-标签内部结构顺序\"><a href=\"#script-标签内部结构顺序\" class=\"headerlink\" title=\"script 标签内部结构顺序\"></a>script 标签内部结构顺序</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>components &gt; props &gt; data &gt; computed &gt; watch &gt; filter &gt; 钩子函数（钩子函数按其执行顺序） &gt; methods</p></blockquote>\n<h3 id=\"Vue-Router-规范\"><a href=\"#Vue-Router-规范\" class=\"headerlink\" title=\"Vue Router 规范\"></a>Vue Router 规范</h3><h4 id=\"页面跳转数据传递使用路由参数\"><a href=\"#页面跳转数据传递使用路由参数\" class=\"headerlink\" title=\"页面跳转数据传递使用路由参数\"></a>页面跳转数据传递使用路由参数</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>页面跳转，例如 A 页面跳转到 B 页面，需要将 A 页面的数据传递到 B 页面，推荐使用 路由参数进行传参，而不是将需要传递的数据保存 vuex，然后在 B 页面取出 vuex 的数据，因为如果在 B 页面刷新会导致 vuex 数据丢失，导致 B 页面无法正常显示数据。</p></blockquote>\n<h5 id=\"正例：-12\"><a href=\"#正例：-12\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  let id = &#39; 123&#39;;\n  this.$router.push(&#123; name: &#39;userCenter&#39;, query: &#123; id: id &#125; &#125;);\n</code></pre>\n<h6 id=\"使用路由懒加载（延迟加载）机制\"><a href=\"#使用路由懒加载（延迟加载）机制\" class=\"headerlink\" title=\"使用路由懒加载（延迟加载）机制\"></a>使用路由懒加载（延迟加载）机制</h6><pre><code>  &#123;\n      path: &#39;/uploadAttachment&#39;,\n      name: &#39;uploadAttachment&#39;,\n      meta: &#123;\n        title: &#39;上传附件&#39;\n      &#125;,\n      component: () =&gt; import(&#39;@/view/components/uploadAttachment/index.vue&#39;)\n    &#125;,\n</code></pre>\n<h4 id=\"router-中的命名规范\"><a href=\"#router-中的命名规范\" class=\"headerlink\" title=\"router 中的命名规范\"></a>router 中的命名规范</h4><ul>\n<li><p>path、childrenPoints 命名规范采用kebab-case命名规范（尽量vue文件的目录结构保持一致，因为目录、文件名都是kebab-case，这样很方便找到对应的文件）</p>\n</li>\n<li><p>name 命名规范采用KebabCase命名规范且和component组件名保持一致！（因为要保持keep-alive特性，keep-alive按照component的name进行缓存，所以两者必须高度保持一致）</p>\n<pre><code>   // 动态加载\n   export const reload = [\n     &#123;\n       path: &#39;/reload&#39;,\n       name: &#39;reload&#39;,\n       component: Main,\n       meta: &#123;\n         title: &#39;动态加载&#39;,\n         icon: &#39;icon iconfont&#39;\n       &#125;,\n       children: [\n         &#123;\n           path: &#39;/reload/smart-reload-list&#39;,\n           name: &#39;SmartReloadList&#39;,\n           meta: &#123;\n             title: &#39;SmartReload&#39;,\n             childrenPoints: [\n               &#123;\n                 title: &#39;查询&#39;,\n                 name: &#39;smart-reload-search&#39;\n               &#125;,\n               &#123;\n                 title: &#39;执行reload&#39;,\n                 name: &#39;smart-reload-update&#39;\n               &#125;,\n               &#123;\n                 title: &#39;查看执行结果&#39;,\n                 name: &#39;smart-reload-result&#39;\n               &#125;\n             ]\n           &#125;,\n           component: () =&gt;\n             import(&#39;@/views/reload/smart-reload/smart-reload-list.vue&#39;)\n         &#125;\n       ]\n     &#125;\n   ];\n</code></pre>\n</li>\n</ul>\n<h3 id=\"router-中的-path-命名规范\"><a href=\"#router-中的-path-命名规范\" class=\"headerlink\" title=\"router 中的 path 命名规范\"></a>router 中的 path 命名规范</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>path除了采用kebab-case命名规范以外，必须以 &#x2F; 开头，即使是children里的path也要以 &#x2F; 开头。如下示例</p></blockquote>\n<h4 id=\"目的：\"><a href=\"#目的：\" class=\"headerlink\" title=\"目的：\"></a>目的：</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>经常有这样的场景：某个页面有问题，要立刻找到这个vue文件，如果不用以&#x2F;开头，path为parent和children组成的，可能经常需要在router文件里搜索多次才能找到，而如果以&#x2F;开头，则能立刻搜索到对应的组件</p></blockquote>\n<pre><code>  &#123;\n      path: &#39;/file&#39;,\n      name: &#39;File&#39;,\n      component: Main,\n      meta: &#123;\n        title: &#39;文件服务&#39;,\n        icon: &#39;ios-cloud-upload&#39;\n      &#125;,\n      children: [\n        &#123;\n          path: &#39;/file/file-list&#39;,\n          name: &#39;FileList&#39;,\n          component: () =&gt; import(&#39;@/views/file/file-list.vue&#39;)\n        &#125;,\n        &#123;\n          path: &#39;/file/file-add&#39;,\n          name: &#39;FileAdd&#39;,\n          component: () =&gt; import(&#39;@/views/file/file-add.vue&#39;)\n        &#125;,\n        &#123;\n          path: &#39;/file/file-update&#39;,\n          name: &#39;FileUpdate&#39;,\n          component: () =&gt; import(&#39;@/views/file/file-update.vue&#39;)\n        &#125;\n      ]\n    &#125;\n</code></pre>\n<h2 id=\"Vue-项目目录规范\"><a href=\"#Vue-项目目录规范\" class=\"headerlink\" title=\"Vue 项目目录规范\"></a>Vue 项目目录规范</h2><h3 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h3><h4 id=\"vue-项目中的所有命名一定要与后端命名统一。\"><a href=\"#vue-项目中的所有命名一定要与后端命名统一。\" class=\"headerlink\" title=\"vue 项目中的所有命名一定要与后端命名统一。\"></a>vue 项目中的所有命名一定要与后端命名统一。</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>比如权限：后端 privilege, 前端无论 router , store, api 等都必须使用 privielege 单词！</p></blockquote>\n<h4 id=\"使用-Vue-cli-脚手架\"><a href=\"#使用-Vue-cli-脚手架\" class=\"headerlink\" title=\"使用 Vue-cli 脚手架\"></a>使用 Vue-cli 脚手架</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用 vue-cli3 来初始化项目，项目名按照上面的命名规范。</p></blockquote>\n<h4 id=\"目录说明\"><a href=\"#目录说明\" class=\"headerlink\" title=\"目录说明\"></a>目录说明</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>目录名按照上面的命名规范，其中 components 组件用大写驼峰，其余除 components 组件目录外的所有目录均使用 kebab-case 命名。</p></blockquote>\n<pre><code>  src                                  源码目录\n  |-- api                              所有api接口\n  |-- assets                           静态资源，images, icons, styles等\n  |-- components                       公用组件\n  |-- config                           配置信息\n  |-- constants                        常量信息，项目所有Enum, 全局常量等\n  |-- directives                       自定义指令\n  |-- filters                          过滤器，全局工具\n  |-- datas                            模拟数据，临时存放\n  |-- lib                              外部引用的插件存放及修改文件\n  |-- mock                             模拟接口，临时存放\n  |-- plugins                          插件，全局使用\n  |-- router                           路由，统一管理\n  |-- store                            vuex, 统一管理\n  |-- themes                           自定义样式主题\n  |-- views                            视图目录\n  |   |-- role                                 role模块名\n  |   |-- |-- role-list.vue                    role列表页面\n  |   |-- |-- role-add.vue                     role新建页面\n  |   |-- |-- role-update.vue                  role更新页面\n  |   |-- |-- index.less                       role模块样式\n  |   |-- |-- components                       role模块通用组件文件夹\n  |   |-- employee                             employee模块\n</code></pre>\n<h3 id=\"api-目录\"><a href=\"#api-目录\" class=\"headerlink\" title=\"api 目录\"></a>api 目录</h3><h4 id=\"文件、变量命名要与后端保持一致。\"><a href=\"#文件、变量命名要与后端保持一致。\" class=\"headerlink\" title=\"文件、变量命名要与后端保持一致。\"></a>文件、变量命名要与后端保持一致。</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>此目录对应后端 API 接口，按照后端一个 controller 一个 api js 文件。若项目较大时，可以按照业务划分子目录，并与后端保持一致。<br>api 中的方法名字要与后端 api url 尽量保持语义高度一致性。<br>对于 api 中的每个方法要添加注释，注释与后端 swagger 文档保持一致。</p></blockquote>\n<h5 id=\"正例：-13\"><a href=\"#正例：-13\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  后端 url： EmployeeController.java\n  /employee/add\n  /employee/delete/&#123;id&#125;\n  /employee/update\n\n  前端： employee.js\n    // 添加员工\n    addEmployee: (data) =&gt; &#123;\n      return postAxios(&#39;/employee/add&#39;, data)\n    &#125;,\n    // 更新员工信息\n    updateEmployee: (data) =&gt; &#123;\n      return postAxios(&#39;/employee/update&#39;, data)\n    &#125;,\n      // 删除员工\n    deleteEmployee: (employeeId) =&gt; &#123;\n      return postAxios(&#39;/employee/delete/&#39; + employeeId)\n    &#125;,\n</code></pre>\n<h3 id=\"assets-目录\"><a href=\"#assets-目录\" class=\"headerlink\" title=\"assets 目录\"></a>assets 目录</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>assets 为静态资源，里面存放 images, styles, icons 等静态资源，静态资源命名格式为 kebab-case</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果图片过多，可以新增文件夹来区分</p></blockquote>\n<pre><code>  |assets\n  |-- icons\n  |-- images\n  |   |-- background-color.png\n  |   |-- upload-header.png\n  |-- styles\n\n  |assets\n  |-- icons\n  |-- images\n  |-- |-- login\n  |   |   |-- background-color.png\n  |   |-- upload-header.png\n  |-- styles\n</code></pre>\n<h3 id=\"components-目录\"><a href=\"#components-目录\" class=\"headerlink\" title=\"components 目录\"></a>components 目录</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>此目录应按照组件进行目录划分，目录命名为 KebabCase，组件命名规则也为 KebabCase</p></blockquote>\n<pre><code>  |components\n  |-- error-log\n  |   |-- index.vue\n  |   |-- index.less\n  |-- markdown-editor\n  |   |-- index.vue\n  |   |-- index.js\n  |-- kebab-case\n</code></pre>\n<h3 id=\"constants-目录\"><a href=\"#constants-目录\" class=\"headerlink\" title=\"constants 目录\"></a>constants 目录</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>此目录存放项目所有常量，如果常量在 vue 中使用，请使用 <a href=\"https://www.npmjs.com/package/vue-enum\">vue-enum 插件</a></p></blockquote>\n<h4 id=\"目录结构：\"><a href=\"#目录结构：\" class=\"headerlink\" title=\"目录结构：\"></a>目录结构：</h4><pre><code>  |constants\n  |-- index.js\n  |-- role.js\n  |-- employee.js\n</code></pre>\n<h5 id=\"例子：-employee-js\"><a href=\"#例子：-employee-js\" class=\"headerlink\" title=\"例子： employee.js\"></a>例子： employee.js</h5><pre><code>  export const EMPLOYEE_STATUS = &#123;\n    NORMAL: &#123;\n      value: 1,\n      desc: &#39;正常&#39;\n    &#125;,\n    DISABLED: &#123;\n      value: 1,\n      desc: &#39;禁用&#39;\n    &#125;,\n    DELETED: &#123;\n      value: 2,\n      desc: &#39;已删除&#39;\n    &#125;\n  &#125;;\n  export const EMPLOYEE_ACCOUNT_TYPE = &#123;\n    QQ: &#123;\n      value: 1,\n      desc: &#39;QQ登录&#39;\n    &#125;,\n    WECHAT: &#123;\n      value: 2,\n      desc: &#39;微信登录&#39;\n    &#125;,\n    DINGDING: &#123;\n      value: 3,\n      desc: &#39;钉钉登录&#39;\n    &#125;,\n    USERNAME: &#123;\n      value: 4,\n      desc: &#39;用户名密码登录&#39;\n    &#125;\n  &#125;;\n  export default &#123;\n    EMPLOYEE_STATUS,\n    EMPLOYEE_ACCOUNT_TYPE\n  &#125;;\n</code></pre>\n<h3 id=\"router-与-store-目录\"><a href=\"#router-与-store-目录\" class=\"headerlink\" title=\"router 与 store 目录\"></a>router 与 store 目录</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这两个目录一定要将业务进行拆分，不能放到一个 js 文件里。</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>router 尽量按照 views 中的结构保持一致</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>store 按照业务进行拆分不同的 js 文件</p></blockquote>\n<h3 id=\"views-目录\"><a href=\"#views-目录\" class=\"headerlink\" title=\"views 目录\"></a>views 目录</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>命名要与后端、router、api 等保持一致</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>components 中组件要使用 PascalCase 规则</p></blockquote>\n<pre><code>  |-- views                                    视图目录\n  |   |-- role                                 role模块名\n  |   |   |-- role-list.vue                    role列表页面\n  |   |   |-- role-add.vue                     role新建页面\n  |   |   |-- role-update.vue                  role更新页面\n  |   |   |-- index.less                      role模块样式\n  |   |   |-- components                      role模块通用组件文件夹\n  |   |   |   |-- role-header.vue             role头部组件\n  |   |   |   |-- role-modal.vue              role弹出框组件\n  |   |-- employee                            employee模块\n  |   |-- behavior-log                        行为日志log模块\n  |   |-- code-generator                      代码生成器模块\n</code></pre>\n<h3 id=\"注释说明\"><a href=\"#注释说明\" class=\"headerlink\" title=\"注释说明\"></a>注释说明</h3><ul>\n<li>整理必须加注释的地方</li>\n<li>公共组件使用说明</li>\n<li>api 目录的接口 js 文件必须加注释</li>\n<li>store 中的 state, mutation, action 等必须加注释</li>\n<li>vue 文件中的 template 必须加注释，若文件较大添加 start end 注释</li>\n<li>vue 文件的 methods，每个 method 必须添加注释</li>\n<li>vue 文件的 data, 非常见单词要加注释</li>\n</ul>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><h4 id=\"尽量不要手动操作-DOM\"><a href=\"#尽量不要手动操作-DOM\" class=\"headerlink\" title=\"尽量不要手动操作 DOM\"></a>尽量不要手动操作 DOM</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>因使用 vue 框架，所以在项目开发中尽量使用 vue 的数据驱动更新 DOM，尽量（不到万不得已）不要手动操作 DOM，包括：增删改 dom 元素、以及更改样式、添加事件等。</p></blockquote>\n<h4 id=\"删除无用代码\"><a href=\"#删除无用代码\" class=\"headerlink\" title=\"删除无用代码\"></a>删除无用代码</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>因使用了 git&#x2F;svn 等代码版本工具，对于无用代码必须及时删除，例如：一些调试的 console 语句、无用的弃用功能代码。</p></blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"阿里Vue-规范\"><a href=\"#阿里Vue-规范\" class=\"headerlink\" title=\"阿里Vue 规范\"></a>阿里Vue 规范</h1><h2 id=\"Vue-项目规范\"><a href=\"#Vue-项目规范\" class=\"headerlink\" title=\"Vue 项目规范\"></a>Vue 项目规范</h2><h3 id=\"Vue-编码基础\"><a href=\"#Vue-编码基础\" class=\"headerlink\" title=\"Vue 编码基础\"></a>Vue 编码基础</h3><h4 id=\"vue-项目规范以-Vue-官方规范-中的-A-规范为基础，在其上面进行项目开发，故所有代码均遵守该规范。\"><a href=\"#vue-项目规范以-Vue-官方规范-中的-A-规范为基础，在其上面进行项目开发，故所有代码均遵守该规范。\" class=\"headerlink\" title=\"vue 项目规范以 Vue 官方规范 中的 A 规范为基础，在其上面进行项目开发，故所有代码均遵守该规范。\"></a>vue 项目规范以 Vue <a href=\"https://cn.vuejs.org/v2/style-guide/\">官方规范</a> 中的 A 规范为基础，在其上面进行项目开发，故所有代码均遵守该规范。</h4><h4 id=\"请仔仔细细阅读-Vue-官方规范，切记，此为第一步。\"><a href=\"#请仔仔细细阅读-Vue-官方规范，切记，此为第一步。\" class=\"headerlink\" title=\"请仔仔细细阅读 Vue 官方规范，切记，此为第一步。\"></a>请仔仔细细阅读 Vue 官方规范，切记，此为第一步。</h4><h3 id=\"组件规范\"><a href=\"#组件规范\" class=\"headerlink\" title=\"组件规范\"></a>组件规范</h3><h4 id=\"组件名为多个单词。\"><a href=\"#组件名为多个单词。\" class=\"headerlink\" title=\"组件名为多个单词。\"></a>组件名为多个单词。</h4><blockquote>\n<p>组件名应该始终是多个单词组成（大于等于 2），且命名规范为KebabCase格式。<br>这样做可以避免跟现有的以及未来的 HTML 元素相冲突，因为所有的 HTML 元素名称都是单个单词的。</p>\n</blockquote>\n<h5 id=\"正例：\"><a href=\"#正例：\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  export default &#123;\n    name: &#39;TodoItem&#39;\n    // ...\n  &#125;;\n  反例：\n  export default &#123;\n    name: &#39;Todo&#39;,\n    // ...\n  &#125;\n  export default &#123;\n    name: &#39;todo-item&#39;,\n    // ...\n  &#125;\n</code></pre>\n<h4 id=\"组件文件名为-pascal-case-格式\"><a href=\"#组件文件名为-pascal-case-格式\" class=\"headerlink\" title=\"组件文件名为 pascal-case 格式\"></a>组件文件名为 pascal-case 格式</h4><h5 id=\"正例：-1\"><a href=\"#正例：-1\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  components/\n  |- my-component.vue\n</code></pre>\n<h5 id=\"反例：\"><a href=\"#反例：\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  components/\n  |- myComponent.vue\n  |- MyComponent.vue\n  3) 基础组件文件名为 base 开头，使用完整单词而不是缩写。\n</code></pre>\n<h5 id=\"正例：-2\"><a href=\"#正例：-2\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  components/\n  |- base-button.vue\n  |- base-table.vue\n  |- base-icon.vue\n</code></pre>\n<h5 id=\"反例：-1\"><a href=\"#反例：-1\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  components/\n  |- MyButton.vue\n  |- VueTable.vue\n  |- Icon.vue\n  4) 和父组件紧密耦合的子组件应该以父组件名作为前缀命名\n</code></pre>\n<h5 id=\"正例：-3\"><a href=\"#正例：-3\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  components/\n  |- todo-list.vue\n  |- todo-list-item.vue\n  |- todo-list-item-button.vue\n  |- user-profile-options.vue （完整单词）\n  \n</code></pre>\n<h5 id=\"反例：-2\"><a href=\"#反例：-2\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  components/\n  |- TodoList.vue\n  |- TodoItem.vue\n  |- TodoButton.vue\n  |- UProfOpts.vue （使用了缩写）\n</code></pre>\n<h4 id=\"在-Template-模版中使用组件，应使用-PascalCase-模式，并且使用自闭合组件。\"><a href=\"#在-Template-模版中使用组件，应使用-PascalCase-模式，并且使用自闭合组件。\" class=\"headerlink\" title=\"在 Template 模版中使用组件，应使用 PascalCase 模式，并且使用自闭合组件。\"></a>在 Template 模版中使用组件，应使用 PascalCase 模式，并且使用自闭合组件。</h4><h5 id=\"正例：-4\"><a href=\"#正例：-4\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  &lt;!-- 在单文件组件、字符串模板和 JSX 中 --&gt;\n  &lt;MyComponent /&gt;\n  &lt;Row&gt;&lt;table :column=&quot;data&quot;/&gt;&lt;/Row&gt;\n</code></pre>\n<h5 id=\"反例：-3\"><a href=\"#反例：-3\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  &lt;my-component /&gt; &lt;row&gt;&lt;table :column=&quot;data&quot;/&gt;&lt;/row&gt;\n</code></pre>\n<h4 id=\"组件的-data-必须是一个函数\"><a href=\"#组件的-data-必须是一个函数\" class=\"headerlink\" title=\"组件的 data 必须是一个函数\"></a>组件的 data 必须是一个函数</h4><h5 id=\"正例：-5\"><a href=\"#正例：-5\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  export default &#123;\n    data () &#123;\n      return &#123;\n        name: &#39;jack&#39;\n      &#125;\n    &#125;\n  &#125;\n</code></pre>\n<h5 id=\"反例：-4\"><a href=\"#反例：-4\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  export default &#123;\n    data: &#123;\n      name: &#39;jack&#39;\n    &#125;\n  &#125;\n</code></pre>\n<h4 id=\"Prop-定义应该尽量详细\"><a href=\"#Prop-定义应该尽量详细\" class=\"headerlink\" title=\"Prop 定义应该尽量详细\"></a>Prop 定义应该尽量详细</h4><ul>\n<li>必须使用 camelCase 驼峰命名</li>\n<li>必须指定类型</li>\n<li>必须加上注释，表明其含义</li>\n<li>必须加上 required 或者 default，两者二选其一</li>\n<li>如果有业务需要，必须加上 validator 验证</li>\n</ul>\n<h5 id=\"正例：-6\"><a href=\"#正例：-6\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  props: &#123;\n    // 组件状态，用于控制组件的颜色\n    status: &#123;\n      type: String,\n      required: true,\n      validator: function (value) &#123;\n        return [\n          &#39;succ&#39;,\n          &#39;info&#39;,\n          &#39;error&#39;\n        ].indexOf(value) !== -1\n      &#125;\n    &#125;,\n      // 用户级别，用于显示皇冠个数\n    userLevel：&#123;\n        type: String,\n        required: true\n    &#125;\n  &#125;\n</code></pre>\n<h4 id=\"为组件样式设置作用域\"><a href=\"#为组件样式设置作用域\" class=\"headerlink\" title=\"为组件样式设置作用域\"></a>为组件样式设置作用域</h4><h5 id=\"正例：-7\"><a href=\"#正例：-7\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  &lt;template&gt;\n    &lt;button class=&quot;btn btn-close&quot;&gt;X&lt;/button&gt;\n  &lt;/template&gt;\n  &lt;!-- 使用 `scoped` 特性 --&gt;\n  &lt;style scoped&gt;\n    .btn-close &#123;\n      background-color: red;\n    &#125;\n  &lt;/style&gt;\n</code></pre>\n<h5 id=\"反例：-5\"><a href=\"#反例：-5\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  &lt;template&gt;\n    &lt;button class=&quot;btn btn-close&quot;&gt;X&lt;/button&gt;\n  &lt;/template&gt;\n  &lt;!-- 没有使用 `scoped` 特性 --&gt;\n  &lt;style&gt;\n    .btn-close &#123;\n      background-color: red;\n    &#125;\n  &lt;/style&gt;\n</code></pre>\n<h4 id=\"如果特性元素较多，应该主动换行。\"><a href=\"#如果特性元素较多，应该主动换行。\" class=\"headerlink\" title=\"如果特性元素较多，应该主动换行。\"></a>如果特性元素较多，应该主动换行。</h4><h5 id=\"正例：-8\"><a href=\"#正例：-8\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  &lt;MyComponent foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot;\n      foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot;\n      foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot;\n  /&gt;\n</code></pre>\n<h5 id=\"反例：-6\"><a href=\"#反例：-6\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  &lt;MyComponent foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot; foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot; foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot; foo=&quot;a&quot; bar=&quot;b&quot; baz=&quot;c&quot;/&gt;\n</code></pre>\n<h3 id=\"模板中使用简单的表达式\"><a href=\"#模板中使用简单的表达式\" class=\"headerlink\" title=\"模板中使用简单的表达式\"></a>模板中使用简单的表达式</h3><blockquote>\n<p>组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。复杂表达式会让你的模板变得不那么声明式。我们应该尽量描述应该出现的是什么，而非如何计算那个值。而且计算属性和方法使得代码可以重用。</p>\n</blockquote>\n<h5 id=\"正例：-9\"><a href=\"#正例：-9\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;p&gt;&#123;&#123; normalizedFullName &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">// 复杂表达式已经移入一个计算属性</span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  normalizedFullName: function () &#123;</span><br><span class=\"line\">    return this.fullName.split(&#x27; &#x27;).map(function (word) &#123;</span><br><span class=\"line\">      return word[0].toUpperCase() + word.slice(1)</span><br><span class=\"line\">    &#125;).join(&#x27; &#x27;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"反例：-7\"><a href=\"#反例：-7\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;p&gt;</span><br><span class=\"line\">      &#123;&#123;</span><br><span class=\"line\">          fullName.split(&#x27; &#x27;).map(function (word) &#123;</span><br><span class=\"line\">            return word[0].toUpperCase() + word.slice(1)</span><br><span class=\"line\">          &#125;).join(&#x27; &#x27;)</span><br><span class=\"line\">        &#125;&#125;</span><br><span class=\"line\">  &lt;/p&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"指令都使用缩写形式\"><a href=\"#指令都使用缩写形式\" class=\"headerlink\" title=\"指令都使用缩写形式\"></a>指令都使用缩写形式</h4><blockquote>\n<p>指令推荐都使用缩写形式，(用 : 表示 v-bind: 、用 @ 表示 v-on: 和用 # 表示 v-slot:)</p>\n</blockquote>\n<h5 id=\"正例：-10\"><a href=\"#正例：-10\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>&lt;input\n  @input=&quot;onInput&quot;\n  @focus=&quot;onFocus&quot;\n&gt;\n</code></pre>\n<h5 id=\"反例：-8\"><a href=\"#反例：-8\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  &lt;input\n    v-on:input=&quot;onInput&quot;\n    @focus=&quot;onFocus&quot;\n  &gt;\n</code></pre>\n<h4 id=\"标签顺序保持一致\"><a href=\"#标签顺序保持一致\" class=\"headerlink\" title=\"标签顺序保持一致\"></a>标签顺序保持一致</h4><blockquote>\n<p>单文件组件应该总是让标签顺序保持为</p>\n</blockquote>\n<h5 id=\"正例：-11\"><a href=\"#正例：-11\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  &lt;template&gt;...&lt;/template&gt;\n  &lt;script&gt;...&lt;/script&gt;\n  &lt;style&gt;...&lt;/style&gt;\n</code></pre>\n<h5 id=\"反例：-9\"><a href=\"#反例：-9\" class=\"headerlink\" title=\"反例：\"></a>反例：</h5><pre><code>  &lt;template&gt;...&lt;/template&gt;\n  &lt;style&gt;...&lt;/style&gt;\n  &lt;script&gt;...&lt;/script&gt;\n</code></pre>\n<h4 id=\"必须为-v-for-设置键值-key\"><a href=\"#必须为-v-for-设置键值-key\" class=\"headerlink\" title=\"必须为 v-for 设置键值 key\"></a>必须为 v-for 设置键值 key</h4><h4 id=\"v-show-与-v-if-选择\"><a href=\"#v-show-与-v-if-选择\" class=\"headerlink\" title=\"v-show 与 v-if 选择\"></a>v-show 与 v-if 选择</h4><blockquote>\n<p>如果运行时，需要非常频繁地切换，使用 v-show ；如果在运行时，条件很少改变，使用 v-if。</p>\n</blockquote>\n<h4 id=\"script-标签内部结构顺序\"><a href=\"#script-标签内部结构顺序\" class=\"headerlink\" title=\"script 标签内部结构顺序\"></a>script 标签内部结构顺序</h4><blockquote>\n<p>components &gt; props &gt; data &gt; computed &gt; watch &gt; filter &gt; 钩子函数（钩子函数按其执行顺序） &gt; methods</p>\n</blockquote>\n<h3 id=\"Vue-Router-规范\"><a href=\"#Vue-Router-规范\" class=\"headerlink\" title=\"Vue Router 规范\"></a>Vue Router 规范</h3><h4 id=\"页面跳转数据传递使用路由参数\"><a href=\"#页面跳转数据传递使用路由参数\" class=\"headerlink\" title=\"页面跳转数据传递使用路由参数\"></a>页面跳转数据传递使用路由参数</h4><blockquote>\n<p>页面跳转，例如 A 页面跳转到 B 页面，需要将 A 页面的数据传递到 B 页面，推荐使用 路由参数进行传参，而不是将需要传递的数据保存 vuex，然后在 B 页面取出 vuex 的数据，因为如果在 B 页面刷新会导致 vuex 数据丢失，导致 B 页面无法正常显示数据。</p>\n</blockquote>\n<h5 id=\"正例：-12\"><a href=\"#正例：-12\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  let id = &#39; 123&#39;;\n  this.$router.push(&#123; name: &#39;userCenter&#39;, query: &#123; id: id &#125; &#125;);\n</code></pre>\n<h6 id=\"使用路由懒加载（延迟加载）机制\"><a href=\"#使用路由懒加载（延迟加载）机制\" class=\"headerlink\" title=\"使用路由懒加载（延迟加载）机制\"></a>使用路由懒加载（延迟加载）机制</h6><pre><code>  &#123;\n      path: &#39;/uploadAttachment&#39;,\n      name: &#39;uploadAttachment&#39;,\n      meta: &#123;\n        title: &#39;上传附件&#39;\n      &#125;,\n      component: () =&gt; import(&#39;@/view/components/uploadAttachment/index.vue&#39;)\n    &#125;,\n</code></pre>\n<h4 id=\"router-中的命名规范\"><a href=\"#router-中的命名规范\" class=\"headerlink\" title=\"router 中的命名规范\"></a>router 中的命名规范</h4><ul>\n<li><p>path、childrenPoints 命名规范采用kebab-case命名规范（尽量vue文件的目录结构保持一致，因为目录、文件名都是kebab-case，这样很方便找到对应的文件）</p>\n</li>\n<li><p>name 命名规范采用KebabCase命名规范且和component组件名保持一致！（因为要保持keep-alive特性，keep-alive按照component的name进行缓存，所以两者必须高度保持一致）</p>\n<pre><code>   // 动态加载\n   export const reload = [\n     &#123;\n       path: &#39;/reload&#39;,\n       name: &#39;reload&#39;,\n       component: Main,\n       meta: &#123;\n         title: &#39;动态加载&#39;,\n         icon: &#39;icon iconfont&#39;\n       &#125;,\n       children: [\n         &#123;\n           path: &#39;/reload/smart-reload-list&#39;,\n           name: &#39;SmartReloadList&#39;,\n           meta: &#123;\n             title: &#39;SmartReload&#39;,\n             childrenPoints: [\n               &#123;\n                 title: &#39;查询&#39;,\n                 name: &#39;smart-reload-search&#39;\n               &#125;,\n               &#123;\n                 title: &#39;执行reload&#39;,\n                 name: &#39;smart-reload-update&#39;\n               &#125;,\n               &#123;\n                 title: &#39;查看执行结果&#39;,\n                 name: &#39;smart-reload-result&#39;\n               &#125;\n             ]\n           &#125;,\n           component: () =&gt;\n             import(&#39;@/views/reload/smart-reload/smart-reload-list.vue&#39;)\n         &#125;\n       ]\n     &#125;\n   ];\n</code></pre>\n</li>\n</ul>\n<h3 id=\"router-中的-path-命名规范\"><a href=\"#router-中的-path-命名规范\" class=\"headerlink\" title=\"router 中的 path 命名规范\"></a>router 中的 path 命名规范</h3><blockquote>\n<p>path除了采用kebab-case命名规范以外，必须以 &#x2F; 开头，即使是children里的path也要以 &#x2F; 开头。如下示例</p>\n</blockquote>\n<h4 id=\"目的：\"><a href=\"#目的：\" class=\"headerlink\" title=\"目的：\"></a>目的：</h4><blockquote>\n<p>经常有这样的场景：某个页面有问题，要立刻找到这个vue文件，如果不用以&#x2F;开头，path为parent和children组成的，可能经常需要在router文件里搜索多次才能找到，而如果以&#x2F;开头，则能立刻搜索到对应的组件</p>\n</blockquote>\n<pre><code>  &#123;\n      path: &#39;/file&#39;,\n      name: &#39;File&#39;,\n      component: Main,\n      meta: &#123;\n        title: &#39;文件服务&#39;,\n        icon: &#39;ios-cloud-upload&#39;\n      &#125;,\n      children: [\n        &#123;\n          path: &#39;/file/file-list&#39;,\n          name: &#39;FileList&#39;,\n          component: () =&gt; import(&#39;@/views/file/file-list.vue&#39;)\n        &#125;,\n        &#123;\n          path: &#39;/file/file-add&#39;,\n          name: &#39;FileAdd&#39;,\n          component: () =&gt; import(&#39;@/views/file/file-add.vue&#39;)\n        &#125;,\n        &#123;\n          path: &#39;/file/file-update&#39;,\n          name: &#39;FileUpdate&#39;,\n          component: () =&gt; import(&#39;@/views/file/file-update.vue&#39;)\n        &#125;\n      ]\n    &#125;\n</code></pre>\n<h2 id=\"Vue-项目目录规范\"><a href=\"#Vue-项目目录规范\" class=\"headerlink\" title=\"Vue 项目目录规范\"></a>Vue 项目目录规范</h2><h3 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h3><h4 id=\"vue-项目中的所有命名一定要与后端命名统一。\"><a href=\"#vue-项目中的所有命名一定要与后端命名统一。\" class=\"headerlink\" title=\"vue 项目中的所有命名一定要与后端命名统一。\"></a>vue 项目中的所有命名一定要与后端命名统一。</h4><blockquote>\n<p>比如权限：后端 privilege, 前端无论 router , store, api 等都必须使用 privielege 单词！</p>\n</blockquote>\n<h4 id=\"使用-Vue-cli-脚手架\"><a href=\"#使用-Vue-cli-脚手架\" class=\"headerlink\" title=\"使用 Vue-cli 脚手架\"></a>使用 Vue-cli 脚手架</h4><blockquote>\n<p>使用 vue-cli3 来初始化项目，项目名按照上面的命名规范。</p>\n</blockquote>\n<h4 id=\"目录说明\"><a href=\"#目录说明\" class=\"headerlink\" title=\"目录说明\"></a>目录说明</h4><blockquote>\n<p>目录名按照上面的命名规范，其中 components 组件用大写驼峰，其余除 components 组件目录外的所有目录均使用 kebab-case 命名。</p>\n</blockquote>\n<pre><code>  src                                  源码目录\n  |-- api                              所有api接口\n  |-- assets                           静态资源，images, icons, styles等\n  |-- components                       公用组件\n  |-- config                           配置信息\n  |-- constants                        常量信息，项目所有Enum, 全局常量等\n  |-- directives                       自定义指令\n  |-- filters                          过滤器，全局工具\n  |-- datas                            模拟数据，临时存放\n  |-- lib                              外部引用的插件存放及修改文件\n  |-- mock                             模拟接口，临时存放\n  |-- plugins                          插件，全局使用\n  |-- router                           路由，统一管理\n  |-- store                            vuex, 统一管理\n  |-- themes                           自定义样式主题\n  |-- views                            视图目录\n  |   |-- role                                 role模块名\n  |   |-- |-- role-list.vue                    role列表页面\n  |   |-- |-- role-add.vue                     role新建页面\n  |   |-- |-- role-update.vue                  role更新页面\n  |   |-- |-- index.less                       role模块样式\n  |   |-- |-- components                       role模块通用组件文件夹\n  |   |-- employee                             employee模块\n</code></pre>\n<h3 id=\"api-目录\"><a href=\"#api-目录\" class=\"headerlink\" title=\"api 目录\"></a>api 目录</h3><h4 id=\"文件、变量命名要与后端保持一致。\"><a href=\"#文件、变量命名要与后端保持一致。\" class=\"headerlink\" title=\"文件、变量命名要与后端保持一致。\"></a>文件、变量命名要与后端保持一致。</h4><blockquote>\n<p>此目录对应后端 API 接口，按照后端一个 controller 一个 api js 文件。若项目较大时，可以按照业务划分子目录，并与后端保持一致。<br>api 中的方法名字要与后端 api url 尽量保持语义高度一致性。<br>对于 api 中的每个方法要添加注释，注释与后端 swagger 文档保持一致。</p>\n</blockquote>\n<h5 id=\"正例：-13\"><a href=\"#正例：-13\" class=\"headerlink\" title=\"正例：\"></a>正例：</h5><pre><code>  后端 url： EmployeeController.java\n  /employee/add\n  /employee/delete/&#123;id&#125;\n  /employee/update\n\n  前端： employee.js\n    // 添加员工\n    addEmployee: (data) =&gt; &#123;\n      return postAxios(&#39;/employee/add&#39;, data)\n    &#125;,\n    // 更新员工信息\n    updateEmployee: (data) =&gt; &#123;\n      return postAxios(&#39;/employee/update&#39;, data)\n    &#125;,\n      // 删除员工\n    deleteEmployee: (employeeId) =&gt; &#123;\n      return postAxios(&#39;/employee/delete/&#39; + employeeId)\n    &#125;,\n</code></pre>\n<h3 id=\"assets-目录\"><a href=\"#assets-目录\" class=\"headerlink\" title=\"assets 目录\"></a>assets 目录</h3><blockquote>\n<p>assets 为静态资源，里面存放 images, styles, icons 等静态资源，静态资源命名格式为 kebab-case</p>\n</blockquote>\n<blockquote>\n<p>如果图片过多，可以新增文件夹来区分</p>\n</blockquote>\n<pre><code>  |assets\n  |-- icons\n  |-- images\n  |   |-- background-color.png\n  |   |-- upload-header.png\n  |-- styles\n\n  |assets\n  |-- icons\n  |-- images\n  |-- |-- login\n  |   |   |-- background-color.png\n  |   |-- upload-header.png\n  |-- styles\n</code></pre>\n<h3 id=\"components-目录\"><a href=\"#components-目录\" class=\"headerlink\" title=\"components 目录\"></a>components 目录</h3><blockquote>\n<p>此目录应按照组件进行目录划分，目录命名为 KebabCase，组件命名规则也为 KebabCase</p>\n</blockquote>\n<pre><code>  |components\n  |-- error-log\n  |   |-- index.vue\n  |   |-- index.less\n  |-- markdown-editor\n  |   |-- index.vue\n  |   |-- index.js\n  |-- kebab-case\n</code></pre>\n<h3 id=\"constants-目录\"><a href=\"#constants-目录\" class=\"headerlink\" title=\"constants 目录\"></a>constants 目录</h3><blockquote>\n<p>此目录存放项目所有常量，如果常量在 vue 中使用，请使用 <a href=\"https://www.npmjs.com/package/vue-enum\">vue-enum 插件</a></p>\n</blockquote>\n<h4 id=\"目录结构：\"><a href=\"#目录结构：\" class=\"headerlink\" title=\"目录结构：\"></a>目录结构：</h4><pre><code>  |constants\n  |-- index.js\n  |-- role.js\n  |-- employee.js\n</code></pre>\n<h5 id=\"例子：-employee-js\"><a href=\"#例子：-employee-js\" class=\"headerlink\" title=\"例子： employee.js\"></a>例子： employee.js</h5><pre><code>  export const EMPLOYEE_STATUS = &#123;\n    NORMAL: &#123;\n      value: 1,\n      desc: &#39;正常&#39;\n    &#125;,\n    DISABLED: &#123;\n      value: 1,\n      desc: &#39;禁用&#39;\n    &#125;,\n    DELETED: &#123;\n      value: 2,\n      desc: &#39;已删除&#39;\n    &#125;\n  &#125;;\n  export const EMPLOYEE_ACCOUNT_TYPE = &#123;\n    QQ: &#123;\n      value: 1,\n      desc: &#39;QQ登录&#39;\n    &#125;,\n    WECHAT: &#123;\n      value: 2,\n      desc: &#39;微信登录&#39;\n    &#125;,\n    DINGDING: &#123;\n      value: 3,\n      desc: &#39;钉钉登录&#39;\n    &#125;,\n    USERNAME: &#123;\n      value: 4,\n      desc: &#39;用户名密码登录&#39;\n    &#125;\n  &#125;;\n  export default &#123;\n    EMPLOYEE_STATUS,\n    EMPLOYEE_ACCOUNT_TYPE\n  &#125;;\n</code></pre>\n<h3 id=\"router-与-store-目录\"><a href=\"#router-与-store-目录\" class=\"headerlink\" title=\"router 与 store 目录\"></a>router 与 store 目录</h3><blockquote>\n<p>这两个目录一定要将业务进行拆分，不能放到一个 js 文件里。</p>\n</blockquote>\n<blockquote>\n<p>router 尽量按照 views 中的结构保持一致</p>\n</blockquote>\n<blockquote>\n<p>store 按照业务进行拆分不同的 js 文件</p>\n</blockquote>\n<h3 id=\"views-目录\"><a href=\"#views-目录\" class=\"headerlink\" title=\"views 目录\"></a>views 目录</h3><blockquote>\n<p>命名要与后端、router、api 等保持一致</p>\n</blockquote>\n<blockquote>\n<p>components 中组件要使用 PascalCase 规则</p>\n</blockquote>\n<pre><code>  |-- views                                    视图目录\n  |   |-- role                                 role模块名\n  |   |   |-- role-list.vue                    role列表页面\n  |   |   |-- role-add.vue                     role新建页面\n  |   |   |-- role-update.vue                  role更新页面\n  |   |   |-- index.less                      role模块样式\n  |   |   |-- components                      role模块通用组件文件夹\n  |   |   |   |-- role-header.vue             role头部组件\n  |   |   |   |-- role-modal.vue              role弹出框组件\n  |   |-- employee                            employee模块\n  |   |-- behavior-log                        行为日志log模块\n  |   |-- code-generator                      代码生成器模块\n</code></pre>\n<h3 id=\"注释说明\"><a href=\"#注释说明\" class=\"headerlink\" title=\"注释说明\"></a>注释说明</h3><ul>\n<li>整理必须加注释的地方</li>\n<li>公共组件使用说明</li>\n<li>api 目录的接口 js 文件必须加注释</li>\n<li>store 中的 state, mutation, action 等必须加注释</li>\n<li>vue 文件中的 template 必须加注释，若文件较大添加 start end 注释</li>\n<li>vue 文件的 methods，每个 method 必须添加注释</li>\n<li>vue 文件的 data, 非常见单词要加注释</li>\n</ul>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><h4 id=\"尽量不要手动操作-DOM\"><a href=\"#尽量不要手动操作-DOM\" class=\"headerlink\" title=\"尽量不要手动操作 DOM\"></a>尽量不要手动操作 DOM</h4><blockquote>\n<p>因使用 vue 框架，所以在项目开发中尽量使用 vue 的数据驱动更新 DOM，尽量（不到万不得已）不要手动操作 DOM，包括：增删改 dom 元素、以及更改样式、添加事件等。</p>\n</blockquote>\n<h4 id=\"删除无用代码\"><a href=\"#删除无用代码\" class=\"headerlink\" title=\"删除无用代码\"></a>删除无用代码</h4><blockquote>\n<p>因使用了 git&#x2F;svn 等代码版本工具，对于无用代码必须及时删除，例如：一些调试的 console 语句、无用的弃用功能代码。</p>\n</blockquote>\n"},{"title":"css 规范","date":"2022-10-15T10:49:36.000Z","_content":"\n# css 规范\n\ncss 规范文档\n\n## 命名\n\n  - 样式类名使用小写字母，以半角连接符(-)分割；\n  \n  - id 采用驼峰式命名；\n  \n  - scss / less 中的变量、函数、混合、placeholder 采用驼峰式命名  \n\n#### 不推荐：\n      .fw-800 {\n        font-weight: 800;\n      }\n      .red {\n        color: red; \n      }\n\n#### 推荐:\n      .heavy {\n        font-weight: 800;\n      }\n      .important { \n        color: red; \n      }\n\n## 选择器\n  - css 选择器中避免使用标签名\n    \n    > 从结构，表现，行为分离的原则来看，应改尽量避免css 中出现HTML 标签，并且在css 选择器种出现标签名会存在潜在的问题。\n\n  - 使用直接子选择器\n\n    > 很多前端开发人员写选择器链的时候不使用直接子选择器（注：直接子选择器和后代选择器的区别）。有时，这可能会导致疼痛的设计问题并且有时候会很消耗性能。然而，在任何情况下，这是一个非常不好的做法。如果米不屑很通用的，需要匹配到DOM 末端的选择器，你应该总是考虑直接子选择器。\n\n#### 不推荐：\n      .content .title {\n        font-size: 2rem;\n      }\n\n#### 推荐:\n     .content > .title {\n        font-size: 2rem;\n      }\n\n## 尽量使用缩写属性\n\n#### 不推荐：\n      border-top-style: none; \n      font-family: palatino, georgia, serif; \n      font-size: 100%; line-height: 1.6; \n      padding-bottom: 2em; \n      padding-left: 1em;\n      padding-right: 1em; \n      padding-top: 0;\n\n#### 推荐:\n      border-top: 0; \n      font: 100%/1.6 palatino, georgia, serif; \n      padding: 0 1em 2em;\n       \n  \n### 省略 0 后面的单位\n\n#### 不推荐：\n      div {\n        padding-bottom: 0px; \n        margin: 0em;\n      }\n\n#### 推荐:\n      div {\n        padding-bottom: 0; \n        margin: 0; \n      }\n\n## 避免使用 ID 选择器及全局标签选择器防止污染全局样式\n\n#### 不推荐：\n      #header {\n        padding-bottom: 0px; \n        margin: 0em;\n      }\n\n#### 推荐:\n      .header { \n        padding-bottom: 0px; \n        margin: 0em; \n      }\n\n\n## 墙裂推荐 [BEM](https://getbem.com/) 命名\n\n### 为什么需要BEM\n\n  如果编写项目的 CSS 代码只有你一个人，或者项目的 CSS 代码量很小，你可以用你喜欢，习惯的方式去组织你的 CSS 代码。但是项目更大，更复杂，有多人编写项目的 CSS 代码（每个人有自己的风格），代码量大的时候，就需要一种统一形式去组织 CSS 代码，这时候 BEM 就派上用场了。\n\n### 什么是BEM\n\n  BEM(Block Element Modifier) 是一种命名CSS class的模式，使用这种模式可以让 CSS 代码更加利于维护。标准的 BEM 写法是 .block-name__element-name--modifier-name。\n\n### Block\n\n> 页面上逻辑和功能独立的，可复用的组件，可以嵌套并相互交互，但在语义上它们保持平等，可以存在页面上不同的位置或不同项目中，保持样式不变。\n\n  可以使用字母，数字，连字符进行命名，任何html元素都可以成为一个block，不依赖于页面上的其他block或者element。\n\n      <header class=\"header\"></header>\n\n      .header {\n        color: #333;\n        background: #f5f5f5;\n      }\n\n### Element\n\n> 组成块的一部分，内部的任何元素都与块有关联，不能在块的外部使用。\n\n        <article class=\"article\">\n          <h2 class=\"article__title\"></h2>\n          <p class=\"article__content\"></p>\n        </article>\n\n        .article {\n          padding: 12px;\n        }\n\n        .article__title {\n          font-size: 1rem;\n        }\n\n        .article__content {\n          font-size: .9rem;\n        }\n\n\n### Modifier\n\n> 用来表示块或者元素的状态，外观或者行为，不必须，可以选择使用。\n\n        <button class=\"btn btn--disabled\"></button>\n\n        .btn {\n          color:  #333;\n          background-color: #fff;\n        }\n\n        .btn--disabled {\n          color: #fff;\n          background-color: #6c757d;\n        }\n\n### 示例\n\n![示例](./img/css-bem-demo.jpg)\n\n这样的卡片是一个单独的块\n\n      <div class=\"list-card\">\n        <img class=\"list-card__img\" />\n        <div class=\"list-card__content\">\n          <a class=\"list-card__link\"></a>\n          <p class=\"list-card__desc\"></p>\n          <div class=\"list-card__stats\">\n            <span class=\"list-card__stat\"><i class=\"list-card__icon\"></i></span>\n            <span class=\"list-card__stat\"><i class=\"list-card__icon\"></i></span>\n            <span class=\"list-card__stat\"><i class=\"list-card__icon\"></i></span>\n            <span class=\"list-card__date\"></span>\n          </div>\n        </div>\n      </div>\n\n\n### 常用CSS class名\n\n  #### 包裹类\n\n          container,  wrapper,    outer,    inner,    box,\n          header,     footer,     main,     content,  aside,\n          page,       section,    block\n\n\n  #### 状态类\n\n          primary,    secondary,  success,  danger,   warning,\n          info,       error,      Link,     light,    dark,\n          disabled,   active,     checked,  loading\n\n  #### 尺寸类\n\n          large,      middle,     small,    bigger,    smaller\n\n  #### 组件类\n\n          card,       list,       picture,  carousel,   swiper,\n          menu,       navs,       badge,    hint,       modal,\n          dialog\n\n  #### 位置类\n\n          first,      last,       current,  prev,       next,\n          forward,    back\n\n  #### 文本类\n\n          title,      desc,       content,  date,        author,\n          category，  label，      tag\n\n\n  #### 人物类\n\n          avatar,     name,       age,      post,         intro\n\n\n### 推荐学习 [scss](https://www.sasscss.com/documentation)","source":"_posts/css-standard.md","raw":"---\ntitle: css 规范\ndate: 2022-10-15 18:49:36\ntags:\n  - css规范\ncategories:\n  - 规范\n# cover: https://cover.png\n# feature: true\n---\n\n# css 规范\n\ncss 规范文档\n\n## 命名\n\n  - 样式类名使用小写字母，以半角连接符(-)分割；\n  \n  - id 采用驼峰式命名；\n  \n  - scss / less 中的变量、函数、混合、placeholder 采用驼峰式命名  \n\n#### 不推荐：\n      .fw-800 {\n        font-weight: 800;\n      }\n      .red {\n        color: red; \n      }\n\n#### 推荐:\n      .heavy {\n        font-weight: 800;\n      }\n      .important { \n        color: red; \n      }\n\n## 选择器\n  - css 选择器中避免使用标签名\n    \n    > 从结构，表现，行为分离的原则来看，应改尽量避免css 中出现HTML 标签，并且在css 选择器种出现标签名会存在潜在的问题。\n\n  - 使用直接子选择器\n\n    > 很多前端开发人员写选择器链的时候不使用直接子选择器（注：直接子选择器和后代选择器的区别）。有时，这可能会导致疼痛的设计问题并且有时候会很消耗性能。然而，在任何情况下，这是一个非常不好的做法。如果米不屑很通用的，需要匹配到DOM 末端的选择器，你应该总是考虑直接子选择器。\n\n#### 不推荐：\n      .content .title {\n        font-size: 2rem;\n      }\n\n#### 推荐:\n     .content > .title {\n        font-size: 2rem;\n      }\n\n## 尽量使用缩写属性\n\n#### 不推荐：\n      border-top-style: none; \n      font-family: palatino, georgia, serif; \n      font-size: 100%; line-height: 1.6; \n      padding-bottom: 2em; \n      padding-left: 1em;\n      padding-right: 1em; \n      padding-top: 0;\n\n#### 推荐:\n      border-top: 0; \n      font: 100%/1.6 palatino, georgia, serif; \n      padding: 0 1em 2em;\n       \n  \n### 省略 0 后面的单位\n\n#### 不推荐：\n      div {\n        padding-bottom: 0px; \n        margin: 0em;\n      }\n\n#### 推荐:\n      div {\n        padding-bottom: 0; \n        margin: 0; \n      }\n\n## 避免使用 ID 选择器及全局标签选择器防止污染全局样式\n\n#### 不推荐：\n      #header {\n        padding-bottom: 0px; \n        margin: 0em;\n      }\n\n#### 推荐:\n      .header { \n        padding-bottom: 0px; \n        margin: 0em; \n      }\n\n\n## 墙裂推荐 [BEM](https://getbem.com/) 命名\n\n### 为什么需要BEM\n\n  如果编写项目的 CSS 代码只有你一个人，或者项目的 CSS 代码量很小，你可以用你喜欢，习惯的方式去组织你的 CSS 代码。但是项目更大，更复杂，有多人编写项目的 CSS 代码（每个人有自己的风格），代码量大的时候，就需要一种统一形式去组织 CSS 代码，这时候 BEM 就派上用场了。\n\n### 什么是BEM\n\n  BEM(Block Element Modifier) 是一种命名CSS class的模式，使用这种模式可以让 CSS 代码更加利于维护。标准的 BEM 写法是 .block-name__element-name--modifier-name。\n\n### Block\n\n> 页面上逻辑和功能独立的，可复用的组件，可以嵌套并相互交互，但在语义上它们保持平等，可以存在页面上不同的位置或不同项目中，保持样式不变。\n\n  可以使用字母，数字，连字符进行命名，任何html元素都可以成为一个block，不依赖于页面上的其他block或者element。\n\n      <header class=\"header\"></header>\n\n      .header {\n        color: #333;\n        background: #f5f5f5;\n      }\n\n### Element\n\n> 组成块的一部分，内部的任何元素都与块有关联，不能在块的外部使用。\n\n        <article class=\"article\">\n          <h2 class=\"article__title\"></h2>\n          <p class=\"article__content\"></p>\n        </article>\n\n        .article {\n          padding: 12px;\n        }\n\n        .article__title {\n          font-size: 1rem;\n        }\n\n        .article__content {\n          font-size: .9rem;\n        }\n\n\n### Modifier\n\n> 用来表示块或者元素的状态，外观或者行为，不必须，可以选择使用。\n\n        <button class=\"btn btn--disabled\"></button>\n\n        .btn {\n          color:  #333;\n          background-color: #fff;\n        }\n\n        .btn--disabled {\n          color: #fff;\n          background-color: #6c757d;\n        }\n\n### 示例\n\n![示例](./img/css-bem-demo.jpg)\n\n这样的卡片是一个单独的块\n\n      <div class=\"list-card\">\n        <img class=\"list-card__img\" />\n        <div class=\"list-card__content\">\n          <a class=\"list-card__link\"></a>\n          <p class=\"list-card__desc\"></p>\n          <div class=\"list-card__stats\">\n            <span class=\"list-card__stat\"><i class=\"list-card__icon\"></i></span>\n            <span class=\"list-card__stat\"><i class=\"list-card__icon\"></i></span>\n            <span class=\"list-card__stat\"><i class=\"list-card__icon\"></i></span>\n            <span class=\"list-card__date\"></span>\n          </div>\n        </div>\n      </div>\n\n\n### 常用CSS class名\n\n  #### 包裹类\n\n          container,  wrapper,    outer,    inner,    box,\n          header,     footer,     main,     content,  aside,\n          page,       section,    block\n\n\n  #### 状态类\n\n          primary,    secondary,  success,  danger,   warning,\n          info,       error,      Link,     light,    dark,\n          disabled,   active,     checked,  loading\n\n  #### 尺寸类\n\n          large,      middle,     small,    bigger,    smaller\n\n  #### 组件类\n\n          card,       list,       picture,  carousel,   swiper,\n          menu,       navs,       badge,    hint,       modal,\n          dialog\n\n  #### 位置类\n\n          first,      last,       current,  prev,       next,\n          forward,    back\n\n  #### 文本类\n\n          title,      desc,       content,  date,        author,\n          category，  label，      tag\n\n\n  #### 人物类\n\n          avatar,     name,       age,      post,         intro\n\n\n### 推荐学习 [scss](https://www.sasscss.com/documentation)","slug":"css-standard","published":1,"updated":"2023-06-05T10:46:14.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"climfiox00002ol9ra8w36wsu","content":"<h1 id=\"css-规范\"><a href=\"#css-规范\" class=\"headerlink\" title=\"css 规范\"></a>css 规范</h1><p>css 规范文档</p>\n<h2 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h2><ul>\n<li><p>样式类名使用小写字母，以半角连接符(-)分割；</p>\n</li>\n<li><p>id 采用驼峰式命名；</p>\n</li>\n<li><p>scss &#x2F; less 中的变量、函数、混合、placeholder 采用驼峰式命名</p>\n</li>\n</ul>\n<h4 id=\"不推荐：\"><a href=\"#不推荐：\" class=\"headerlink\" title=\"不推荐：\"></a>不推荐：</h4><pre><code>  .fw-800 &#123;\n    font-weight: 800;\n  &#125;\n  .red &#123;\n    color: red; \n  &#125;\n</code></pre>\n<h4 id=\"推荐\"><a href=\"#推荐\" class=\"headerlink\" title=\"推荐:\"></a>推荐:</h4><pre><code>  .heavy &#123;\n    font-weight: 800;\n  &#125;\n  .important &#123; \n    color: red; \n  &#125;\n</code></pre>\n<h2 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h2><ul>\n<li><p>css 选择器中避免使用标签名</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>从结构，表现，行为分离的原则来看，应改尽量避免css 中出现HTML 标签，并且在css 选择器种出现标签名会存在潜在的问题。</p></blockquote>\n</li>\n<li><p>使用直接子选择器</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>很多前端开发人员写选择器链的时候不使用直接子选择器（注：直接子选择器和后代选择器的区别）。有时，这可能会导致疼痛的设计问题并且有时候会很消耗性能。然而，在任何情况下，这是一个非常不好的做法。如果米不屑很通用的，需要匹配到DOM 末端的选择器，你应该总是考虑直接子选择器。</p></blockquote>\n</li>\n</ul>\n<h4 id=\"不推荐：-1\"><a href=\"#不推荐：-1\" class=\"headerlink\" title=\"不推荐：\"></a>不推荐：</h4><pre><code>  .content .title &#123;\n    font-size: 2rem;\n  &#125;\n</code></pre>\n<h4 id=\"推荐-1\"><a href=\"#推荐-1\" class=\"headerlink\" title=\"推荐:\"></a>推荐:</h4><pre><code> .content &gt; .title &#123;\n    font-size: 2rem;\n  &#125;\n</code></pre>\n<h2 id=\"尽量使用缩写属性\"><a href=\"#尽量使用缩写属性\" class=\"headerlink\" title=\"尽量使用缩写属性\"></a>尽量使用缩写属性</h2><h4 id=\"不推荐：-2\"><a href=\"#不推荐：-2\" class=\"headerlink\" title=\"不推荐：\"></a>不推荐：</h4><pre><code>  border-top-style: none; \n  font-family: palatino, georgia, serif; \n  font-size: 100%; line-height: 1.6; \n  padding-bottom: 2em; \n  padding-left: 1em;\n  padding-right: 1em; \n  padding-top: 0;\n</code></pre>\n<h4 id=\"推荐-2\"><a href=\"#推荐-2\" class=\"headerlink\" title=\"推荐:\"></a>推荐:</h4><pre><code>  border-top: 0; \n  font: 100%/1.6 palatino, georgia, serif; \n  padding: 0 1em 2em;\n   \n</code></pre>\n<h3 id=\"省略-0-后面的单位\"><a href=\"#省略-0-后面的单位\" class=\"headerlink\" title=\"省略 0 后面的单位\"></a>省略 0 后面的单位</h3><h4 id=\"不推荐：-3\"><a href=\"#不推荐：-3\" class=\"headerlink\" title=\"不推荐：\"></a>不推荐：</h4><pre><code>  div &#123;\n    padding-bottom: 0px; \n    margin: 0em;\n  &#125;\n</code></pre>\n<h4 id=\"推荐-3\"><a href=\"#推荐-3\" class=\"headerlink\" title=\"推荐:\"></a>推荐:</h4><pre><code>  div &#123;\n    padding-bottom: 0; \n    margin: 0; \n  &#125;\n</code></pre>\n<h2 id=\"避免使用-ID-选择器及全局标签选择器防止污染全局样式\"><a href=\"#避免使用-ID-选择器及全局标签选择器防止污染全局样式\" class=\"headerlink\" title=\"避免使用 ID 选择器及全局标签选择器防止污染全局样式\"></a>避免使用 ID 选择器及全局标签选择器防止污染全局样式</h2><h4 id=\"不推荐：-4\"><a href=\"#不推荐：-4\" class=\"headerlink\" title=\"不推荐：\"></a>不推荐：</h4><pre><code>  #header &#123;\n    padding-bottom: 0px; \n    margin: 0em;\n  &#125;\n</code></pre>\n<h4 id=\"推荐-4\"><a href=\"#推荐-4\" class=\"headerlink\" title=\"推荐:\"></a>推荐:</h4><pre><code>  .header &#123; \n    padding-bottom: 0px; \n    margin: 0em; \n  &#125;\n</code></pre>\n<h2 id=\"墙裂推荐-BEM-命名\"><a href=\"#墙裂推荐-BEM-命名\" class=\"headerlink\" title=\"墙裂推荐 BEM 命名\"></a>墙裂推荐 <a href=\"https://getbem.com/\">BEM</a> 命名</h2><h3 id=\"为什么需要BEM\"><a href=\"#为什么需要BEM\" class=\"headerlink\" title=\"为什么需要BEM\"></a>为什么需要BEM</h3><p>  如果编写项目的 CSS 代码只有你一个人，或者项目的 CSS 代码量很小，你可以用你喜欢，习惯的方式去组织你的 CSS 代码。但是项目更大，更复杂，有多人编写项目的 CSS 代码（每个人有自己的风格），代码量大的时候，就需要一种统一形式去组织 CSS 代码，这时候 BEM 就派上用场了。</p>\n<h3 id=\"什么是BEM\"><a href=\"#什么是BEM\" class=\"headerlink\" title=\"什么是BEM\"></a>什么是BEM</h3><p>  BEM(Block Element Modifier) 是一种命名CSS class的模式，使用这种模式可以让 CSS 代码更加利于维护。标准的 BEM 写法是 .block-name__element-name–modifier-name。</p>\n<h3 id=\"Block\"><a href=\"#Block\" class=\"headerlink\" title=\"Block\"></a>Block</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>页面上逻辑和功能独立的，可复用的组件，可以嵌套并相互交互，但在语义上它们保持平等，可以存在页面上不同的位置或不同项目中，保持样式不变。</p></blockquote>\n<p>  可以使用字母，数字，连字符进行命名，任何html元素都可以成为一个block，不依赖于页面上的其他block或者element。</p>\n<pre><code>  &lt;header class=&quot;header&quot;&gt;&lt;/header&gt;\n\n  .header &#123;\n    color: #333;\n    background: #f5f5f5;\n  &#125;\n</code></pre>\n<h3 id=\"Element\"><a href=\"#Element\" class=\"headerlink\" title=\"Element\"></a>Element</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>组成块的一部分，内部的任何元素都与块有关联，不能在块的外部使用。</p></blockquote>\n<pre><code>    &lt;article class=&quot;article&quot;&gt;\n      &lt;h2 class=&quot;article__title&quot;&gt;&lt;/h2&gt;\n      &lt;p class=&quot;article__content&quot;&gt;&lt;/p&gt;\n    &lt;/article&gt;\n\n    .article &#123;\n      padding: 12px;\n    &#125;\n\n    .article__title &#123;\n      font-size: 1rem;\n    &#125;\n\n    .article__content &#123;\n      font-size: .9rem;\n    &#125;\n</code></pre>\n<h3 id=\"Modifier\"><a href=\"#Modifier\" class=\"headerlink\" title=\"Modifier\"></a>Modifier</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>用来表示块或者元素的状态，外观或者行为，不必须，可以选择使用。</p></blockquote>\n<pre><code>    &lt;button class=&quot;btn btn--disabled&quot;&gt;&lt;/button&gt;\n\n    .btn &#123;\n      color:  #333;\n      background-color: #fff;\n    &#125;\n\n    .btn--disabled &#123;\n      color: #fff;\n      background-color: #6c757d;\n    &#125;\n</code></pre>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p><img src=\"./img/css-bem-demo.jpg\" alt=\"示例\"></p>\n<p>这样的卡片是一个单独的块</p>\n<pre><code>  &lt;div class=&quot;list-card&quot;&gt;\n    &lt;img class=&quot;list-card__img&quot; /&gt;\n    &lt;div class=&quot;list-card__content&quot;&gt;\n      &lt;a class=&quot;list-card__link&quot;&gt;&lt;/a&gt;\n      &lt;p class=&quot;list-card__desc&quot;&gt;&lt;/p&gt;\n      &lt;div class=&quot;list-card__stats&quot;&gt;\n        &lt;span class=&quot;list-card__stat&quot;&gt;&lt;i class=&quot;list-card__icon&quot;&gt;&lt;/i&gt;&lt;/span&gt;\n        &lt;span class=&quot;list-card__stat&quot;&gt;&lt;i class=&quot;list-card__icon&quot;&gt;&lt;/i&gt;&lt;/span&gt;\n        &lt;span class=&quot;list-card__stat&quot;&gt;&lt;i class=&quot;list-card__icon&quot;&gt;&lt;/i&gt;&lt;/span&gt;\n        &lt;span class=&quot;list-card__date&quot;&gt;&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n</code></pre>\n<h3 id=\"常用CSS-class名\"><a href=\"#常用CSS-class名\" class=\"headerlink\" title=\"常用CSS class名\"></a>常用CSS class名</h3><h4 id=\"包裹类\"><a href=\"#包裹类\" class=\"headerlink\" title=\"包裹类\"></a>包裹类</h4><pre><code>      container,  wrapper,    outer,    inner,    box,\n      header,     footer,     main,     content,  aside,\n      page,       section,    block\n</code></pre>\n<h4 id=\"状态类\"><a href=\"#状态类\" class=\"headerlink\" title=\"状态类\"></a>状态类</h4><pre><code>      primary,    secondary,  success,  danger,   warning,\n      info,       error,      Link,     light,    dark,\n      disabled,   active,     checked,  loading\n</code></pre>\n<h4 id=\"尺寸类\"><a href=\"#尺寸类\" class=\"headerlink\" title=\"尺寸类\"></a>尺寸类</h4><pre><code>      large,      middle,     small,    bigger,    smaller\n</code></pre>\n<h4 id=\"组件类\"><a href=\"#组件类\" class=\"headerlink\" title=\"组件类\"></a>组件类</h4><pre><code>      card,       list,       picture,  carousel,   swiper,\n      menu,       navs,       badge,    hint,       modal,\n      dialog\n</code></pre>\n<h4 id=\"位置类\"><a href=\"#位置类\" class=\"headerlink\" title=\"位置类\"></a>位置类</h4><pre><code>      first,      last,       current,  prev,       next,\n      forward,    back\n</code></pre>\n<h4 id=\"文本类\"><a href=\"#文本类\" class=\"headerlink\" title=\"文本类\"></a>文本类</h4><pre><code>      title,      desc,       content,  date,        author,\n      category，  label，      tag\n</code></pre>\n<h4 id=\"人物类\"><a href=\"#人物类\" class=\"headerlink\" title=\"人物类\"></a>人物类</h4><pre><code>      avatar,     name,       age,      post,         intro\n</code></pre>\n<h3 id=\"推荐学习-scss\"><a href=\"#推荐学习-scss\" class=\"headerlink\" title=\"推荐学习 scss\"></a>推荐学习 <a href=\"https://www.sasscss.com/documentation\">scss</a></h3>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"css-规范\"><a href=\"#css-规范\" class=\"headerlink\" title=\"css 规范\"></a>css 规范</h1><p>css 规范文档</p>\n<h2 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h2><ul>\n<li><p>样式类名使用小写字母，以半角连接符(-)分割；</p>\n</li>\n<li><p>id 采用驼峰式命名；</p>\n</li>\n<li><p>scss &#x2F; less 中的变量、函数、混合、placeholder 采用驼峰式命名</p>\n</li>\n</ul>\n<h4 id=\"不推荐：\"><a href=\"#不推荐：\" class=\"headerlink\" title=\"不推荐：\"></a>不推荐：</h4><pre><code>  .fw-800 &#123;\n    font-weight: 800;\n  &#125;\n  .red &#123;\n    color: red; \n  &#125;\n</code></pre>\n<h4 id=\"推荐\"><a href=\"#推荐\" class=\"headerlink\" title=\"推荐:\"></a>推荐:</h4><pre><code>  .heavy &#123;\n    font-weight: 800;\n  &#125;\n  .important &#123; \n    color: red; \n  &#125;\n</code></pre>\n<h2 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h2><ul>\n<li><p>css 选择器中避免使用标签名</p>\n<blockquote>\n<p>从结构，表现，行为分离的原则来看，应改尽量避免css 中出现HTML 标签，并且在css 选择器种出现标签名会存在潜在的问题。</p>\n</blockquote>\n</li>\n<li><p>使用直接子选择器</p>\n<blockquote>\n<p>很多前端开发人员写选择器链的时候不使用直接子选择器（注：直接子选择器和后代选择器的区别）。有时，这可能会导致疼痛的设计问题并且有时候会很消耗性能。然而，在任何情况下，这是一个非常不好的做法。如果米不屑很通用的，需要匹配到DOM 末端的选择器，你应该总是考虑直接子选择器。</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"不推荐：-1\"><a href=\"#不推荐：-1\" class=\"headerlink\" title=\"不推荐：\"></a>不推荐：</h4><pre><code>  .content .title &#123;\n    font-size: 2rem;\n  &#125;\n</code></pre>\n<h4 id=\"推荐-1\"><a href=\"#推荐-1\" class=\"headerlink\" title=\"推荐:\"></a>推荐:</h4><pre><code> .content &gt; .title &#123;\n    font-size: 2rem;\n  &#125;\n</code></pre>\n<h2 id=\"尽量使用缩写属性\"><a href=\"#尽量使用缩写属性\" class=\"headerlink\" title=\"尽量使用缩写属性\"></a>尽量使用缩写属性</h2><h4 id=\"不推荐：-2\"><a href=\"#不推荐：-2\" class=\"headerlink\" title=\"不推荐：\"></a>不推荐：</h4><pre><code>  border-top-style: none; \n  font-family: palatino, georgia, serif; \n  font-size: 100%; line-height: 1.6; \n  padding-bottom: 2em; \n  padding-left: 1em;\n  padding-right: 1em; \n  padding-top: 0;\n</code></pre>\n<h4 id=\"推荐-2\"><a href=\"#推荐-2\" class=\"headerlink\" title=\"推荐:\"></a>推荐:</h4><pre><code>  border-top: 0; \n  font: 100%/1.6 palatino, georgia, serif; \n  padding: 0 1em 2em;\n   \n</code></pre>\n<h3 id=\"省略-0-后面的单位\"><a href=\"#省略-0-后面的单位\" class=\"headerlink\" title=\"省略 0 后面的单位\"></a>省略 0 后面的单位</h3><h4 id=\"不推荐：-3\"><a href=\"#不推荐：-3\" class=\"headerlink\" title=\"不推荐：\"></a>不推荐：</h4><pre><code>  div &#123;\n    padding-bottom: 0px; \n    margin: 0em;\n  &#125;\n</code></pre>\n<h4 id=\"推荐-3\"><a href=\"#推荐-3\" class=\"headerlink\" title=\"推荐:\"></a>推荐:</h4><pre><code>  div &#123;\n    padding-bottom: 0; \n    margin: 0; \n  &#125;\n</code></pre>\n<h2 id=\"避免使用-ID-选择器及全局标签选择器防止污染全局样式\"><a href=\"#避免使用-ID-选择器及全局标签选择器防止污染全局样式\" class=\"headerlink\" title=\"避免使用 ID 选择器及全局标签选择器防止污染全局样式\"></a>避免使用 ID 选择器及全局标签选择器防止污染全局样式</h2><h4 id=\"不推荐：-4\"><a href=\"#不推荐：-4\" class=\"headerlink\" title=\"不推荐：\"></a>不推荐：</h4><pre><code>  #header &#123;\n    padding-bottom: 0px; \n    margin: 0em;\n  &#125;\n</code></pre>\n<h4 id=\"推荐-4\"><a href=\"#推荐-4\" class=\"headerlink\" title=\"推荐:\"></a>推荐:</h4><pre><code>  .header &#123; \n    padding-bottom: 0px; \n    margin: 0em; \n  &#125;\n</code></pre>\n<h2 id=\"墙裂推荐-BEM-命名\"><a href=\"#墙裂推荐-BEM-命名\" class=\"headerlink\" title=\"墙裂推荐 BEM 命名\"></a>墙裂推荐 <a href=\"https://getbem.com/\">BEM</a> 命名</h2><h3 id=\"为什么需要BEM\"><a href=\"#为什么需要BEM\" class=\"headerlink\" title=\"为什么需要BEM\"></a>为什么需要BEM</h3><p>  如果编写项目的 CSS 代码只有你一个人，或者项目的 CSS 代码量很小，你可以用你喜欢，习惯的方式去组织你的 CSS 代码。但是项目更大，更复杂，有多人编写项目的 CSS 代码（每个人有自己的风格），代码量大的时候，就需要一种统一形式去组织 CSS 代码，这时候 BEM 就派上用场了。</p>\n<h3 id=\"什么是BEM\"><a href=\"#什么是BEM\" class=\"headerlink\" title=\"什么是BEM\"></a>什么是BEM</h3><p>  BEM(Block Element Modifier) 是一种命名CSS class的模式，使用这种模式可以让 CSS 代码更加利于维护。标准的 BEM 写法是 .block-name__element-name–modifier-name。</p>\n<h3 id=\"Block\"><a href=\"#Block\" class=\"headerlink\" title=\"Block\"></a>Block</h3><blockquote>\n<p>页面上逻辑和功能独立的，可复用的组件，可以嵌套并相互交互，但在语义上它们保持平等，可以存在页面上不同的位置或不同项目中，保持样式不变。</p>\n</blockquote>\n<p>  可以使用字母，数字，连字符进行命名，任何html元素都可以成为一个block，不依赖于页面上的其他block或者element。</p>\n<pre><code>  &lt;header class=&quot;header&quot;&gt;&lt;/header&gt;\n\n  .header &#123;\n    color: #333;\n    background: #f5f5f5;\n  &#125;\n</code></pre>\n<h3 id=\"Element\"><a href=\"#Element\" class=\"headerlink\" title=\"Element\"></a>Element</h3><blockquote>\n<p>组成块的一部分，内部的任何元素都与块有关联，不能在块的外部使用。</p>\n</blockquote>\n<pre><code>    &lt;article class=&quot;article&quot;&gt;\n      &lt;h2 class=&quot;article__title&quot;&gt;&lt;/h2&gt;\n      &lt;p class=&quot;article__content&quot;&gt;&lt;/p&gt;\n    &lt;/article&gt;\n\n    .article &#123;\n      padding: 12px;\n    &#125;\n\n    .article__title &#123;\n      font-size: 1rem;\n    &#125;\n\n    .article__content &#123;\n      font-size: .9rem;\n    &#125;\n</code></pre>\n<h3 id=\"Modifier\"><a href=\"#Modifier\" class=\"headerlink\" title=\"Modifier\"></a>Modifier</h3><blockquote>\n<p>用来表示块或者元素的状态，外观或者行为，不必须，可以选择使用。</p>\n</blockquote>\n<pre><code>    &lt;button class=&quot;btn btn--disabled&quot;&gt;&lt;/button&gt;\n\n    .btn &#123;\n      color:  #333;\n      background-color: #fff;\n    &#125;\n\n    .btn--disabled &#123;\n      color: #fff;\n      background-color: #6c757d;\n    &#125;\n</code></pre>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p><img src=\"./img/css-bem-demo.jpg\" alt=\"示例\"></p>\n<p>这样的卡片是一个单独的块</p>\n<pre><code>  &lt;div class=&quot;list-card&quot;&gt;\n    &lt;img class=&quot;list-card__img&quot; /&gt;\n    &lt;div class=&quot;list-card__content&quot;&gt;\n      &lt;a class=&quot;list-card__link&quot;&gt;&lt;/a&gt;\n      &lt;p class=&quot;list-card__desc&quot;&gt;&lt;/p&gt;\n      &lt;div class=&quot;list-card__stats&quot;&gt;\n        &lt;span class=&quot;list-card__stat&quot;&gt;&lt;i class=&quot;list-card__icon&quot;&gt;&lt;/i&gt;&lt;/span&gt;\n        &lt;span class=&quot;list-card__stat&quot;&gt;&lt;i class=&quot;list-card__icon&quot;&gt;&lt;/i&gt;&lt;/span&gt;\n        &lt;span class=&quot;list-card__stat&quot;&gt;&lt;i class=&quot;list-card__icon&quot;&gt;&lt;/i&gt;&lt;/span&gt;\n        &lt;span class=&quot;list-card__date&quot;&gt;&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n</code></pre>\n<h3 id=\"常用CSS-class名\"><a href=\"#常用CSS-class名\" class=\"headerlink\" title=\"常用CSS class名\"></a>常用CSS class名</h3><h4 id=\"包裹类\"><a href=\"#包裹类\" class=\"headerlink\" title=\"包裹类\"></a>包裹类</h4><pre><code>      container,  wrapper,    outer,    inner,    box,\n      header,     footer,     main,     content,  aside,\n      page,       section,    block\n</code></pre>\n<h4 id=\"状态类\"><a href=\"#状态类\" class=\"headerlink\" title=\"状态类\"></a>状态类</h4><pre><code>      primary,    secondary,  success,  danger,   warning,\n      info,       error,      Link,     light,    dark,\n      disabled,   active,     checked,  loading\n</code></pre>\n<h4 id=\"尺寸类\"><a href=\"#尺寸类\" class=\"headerlink\" title=\"尺寸类\"></a>尺寸类</h4><pre><code>      large,      middle,     small,    bigger,    smaller\n</code></pre>\n<h4 id=\"组件类\"><a href=\"#组件类\" class=\"headerlink\" title=\"组件类\"></a>组件类</h4><pre><code>      card,       list,       picture,  carousel,   swiper,\n      menu,       navs,       badge,    hint,       modal,\n      dialog\n</code></pre>\n<h4 id=\"位置类\"><a href=\"#位置类\" class=\"headerlink\" title=\"位置类\"></a>位置类</h4><pre><code>      first,      last,       current,  prev,       next,\n      forward,    back\n</code></pre>\n<h4 id=\"文本类\"><a href=\"#文本类\" class=\"headerlink\" title=\"文本类\"></a>文本类</h4><pre><code>      title,      desc,       content,  date,        author,\n      category，  label，      tag\n</code></pre>\n<h4 id=\"人物类\"><a href=\"#人物类\" class=\"headerlink\" title=\"人物类\"></a>人物类</h4><pre><code>      avatar,     name,       age,      post,         intro\n</code></pre>\n<h3 id=\"推荐学习-scss\"><a href=\"#推荐学习-scss\" class=\"headerlink\" title=\"推荐学习 scss\"></a>推荐学习 <a href=\"https://www.sasscss.com/documentation\">scss</a></h3>"},{"title":"table 列表","date":"2022-10-15T10:49:36.000Z","_content":"# table 列表\n\n封装table列表并将分页封装其中 目的实现配置话开发。\n\n## 演示案例\n::: demo 对el-table 的二次封装，内置了分页pagination，数据配置化，也可通过插槽实现自定义样式。\n```vue\n<template>\n  <div>\n   <BaseTablePageData\n      :dataSource=\"datalist\"\n      :pagination=\"page\"\n      :height=\"tableHeight\"\n      :columns=\"columns\"\n      @handleSelectionChange=\"handleSelectionChange\"\n      @handleSizeChange=\"handleSizeChange\"\n      @handleCurrentChange=\"handleCurrentChange\"\n    >\n      <template slot=\"left\">\n        <el-table-column\n          type=\"selection\"\n          width=\"50\"\n          align=\"center\"\n          headerAlign=\"center\"\n          fixed=\"left\"\n          :selectable=\"checkSelect\"\n        ></el-table-column>\n        <el-table-column\n          type=\"index\"\n          width=\"50\"\n          align=\"center\"\n          headerAlign=\"center\"\n          label=\"序号\"\n          fixed=\"left\"\n        ></el-table-column>\n      </template>\n      <template slot=\"action\" slot-scope=\"scope\">\n        <el-button\n          type=\"primary\"\n          size=\"mini\"\n          plain\n          icon=\"el-icon-edit\"\n        >\n          编辑\n        </el-button>\n        <el-button\n          type=\"primary\"\n          size=\"mini\"\n          plain\n          icon=\"el-icon-view\"\n        >\n          查看\n        </el-button>\n      </template>\n    </BaseTablePageData>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return { \n        tableHeight: \"400px\",\n        selectSessionList: [],\n         page: { //分页字段\n          current: 1,\n          size: 20,\n          total: 0\n        },\n\n        columns: [\n          {\n            title: \"科目名称\",\n            dataIndex: \"kmmc\",\n            key: \"kmmc\",\n            width: 100,\n          },\n          {\n            title: \"考试批次\",\n            dataIndex: \"pcmc\",\n            key: \"pcmc\",\n            showOverflowTooltip: true\n          },\n          {\n            title: \"场次名称\",\n            dataIndex: \"cc\",\n            key: \"cc\",\n            width: 100,\n          },\n          {\n            title: \"考试日期\",\n            dataIndex: 'ksrq',\n            key: 'ksrq',\n            width: 100,\n            showOverflowTooltip: true\n          },\n          {\n            title: \"场次开始时间\",\n            dataIndex: \"cckssj\",\n            key: 'cckssj',\n            width: 120,\n          },\n          {\n            title: \"场次结束时间\",\n            dataIndex: \"ccjssj\",\n            key: 'ccjssj',\n            width: 120,\n          },\n          {\n            title: \"排序\",\n            dataIndex: \"px\",\n            key: 'px',\n            width: 60,\n          },\n          {\n            title: \"创建时间\",\n            dataIndex: \"ctstamp\",\n            key: \"ctstamp\",\n            width: 150,\n            showOverflowTooltip: true\n          },\n          {\n            title: \"操作\",\n            key: \"action\",\n            width: 200,\n            fixed: \"right\",\n          }\n        ],\n        datalist: [\n          {\n            uuid:\"41705292c18f4c4a8e2eee36e19c2e91\",\n            pcUuid:\"f453e14f-9e89-11ec-a315-2x2x1a666\",\n            pcmc:\"2022年福建省高职院校分类考试招生职业技能测试\",\n            kmUuid:\"a3f18353275745c9891c30e7e17cf5c5\",\n            kmmc:\"英语\",\n            ksrq:\"2022-09-22\",\n            cc:\"第一场\",\n            cckssj:\"11:00\",\n            ccjssj:\"12:00\",\n            cssj:null,\n            ctstamp:\"2022-12-02 15:18:11\",\n            px:1\n          },\n          {\n            \"uuid\":\"afa5007aa4674992aa114b281f87cdaa\",\n            \"pcUuid\":\"f453e14f-9e89-11ec-a315-2x2x1a666\",\n            \"pcmc\":\"2022年福建省高职院校分类考试招生职业技能测试\",\n            \"kmUuid\":\"a3f18353275745c9891c30e7e17cf5c5\",\n            \"kmmc\":\"英语\",\"ksrq\":\"2022-11-01\",\n            \"cc\":\"第二场\",\n            \"cckssj\":\"07:00\",\n            \"ccjssj\":\"08:00\",\n            \"cssj\":null,\n            \"ctstamp\":\"2022-12-02 14:52:37\",\n            \"px\":2\n          },\n          {\n            \"uuid\":\"f7e31c8211c3428ba3bfcac2863fffa7\",\n            \"pcUuid\":\"f453e14f-9e89-11ec-a315-2x2x1a666\",\n            \"pcmc\":\"2022年福建省高职院校分类考试招生职业技能测试\",\n            \"kmUuid\":\"a3f18353275745c9891c30e7e17cf5c5\",\n            \"kmmc\":\"英语\",\n            \"ksrq\":\"2022-11-01\",\n            \"cc\":\"第三场\",\n            \"cckssj\":\"09:00\",\n            \"ccjssj\":\"11:00\",\n            \"cssj\":null,\n            \"ctstamp\":\"2022-12-02 14:52:37\",\n            \"px\":3\n          },\n          {\n            \"uuid\":\"7a9f426bbbf84fd6a15f0f2bf8227444\",\n            \"pcUuid\":\"f453e14f-9e89-11ec-a315-2x2x1a666\",\n            \"pcmc\":\"2022年福建省高职院校分类考试招生职业技能测试\",\n            \"kmUuid\":\"a3f18353275745c9891c30e7e17cf5c5\",\n            \"kmmc\":\"英语\",\n            \"ksrq\":\"2022-12-29\",\n            \"cc\":\"第四场\",\n            \"cckssj\":\"09:00\",\n            \"ccjssj\":\"12:00\",\n            \"cssj\":null,\n            \"ctstamp\":\"2022-11-29 16:34:35\",\n            \"px\":4\n          }\n        ],\n      }\n    },\n\n    methods: {\n      // 搜索回调方法\n      search(data = {}) {\n        console.log(\"data==>\", data)\n      },\n\n      checkSelect() {\n        return true\n      },\n\n      // 列表已勾选的场次\n      handleSelectionChange(val) {\n        this.selectSessionList = val\n      },\n\n      // 分页操作--修改每页展示条数\n      async handleSizeChange(val) {\n        this.page.size = val;\n        this.page.current = 1;\n        // 重新获取数据\n        this.getSessionList(this.page)\n      },\n\n      // 分页操作--修改页数\n      async handleCurrentChange(val) {\n        this.page.current = val;\n        this.getSessionList(this.page)\n      }\n    }\n  }\n</script>\n\n```\n:::\n\n\n### 参数描述\n总的参数描述\n\n| 参数 |    说明 |    类型 | 可选值 | 默认值 |\n| ----- | ------ | ----- | :-----: |  :---:  |\n| dataSource | 显示的数据 | Array | - | - |\n| height | Table 的高度，默认为自动高度。如果 height 为 number 类型，单位 px；如果 height 为 string 类型，则这个高度会设置为 Table 的 style.height 的值，Table 的高度会受控于外部样式。 | String/Number | - | - |\n| pagination | 分页数据(详情查看下方) | Object | - | - |\n| columns | 表格列的配置描述，具体项见下表 | Array | - | - |\n\n\n> pagination 配置\n\n| 参数 |    说明 |    类型 | 可选值 | 默认值 |\n| ----- | ------ | ----- | :-----: |  :---:  |\n| current | 显示的页码 | Number | - | 1 |\n| size | 每页显示条数 | Number | - | 20 |\n| total | 总条数 | Number | - | 0 |\n\n\n> columns 配置\n\n| 参数 |    说明 |    类型 | 可选值 | 默认值 |\n| ----- | ------ | ----- | :-----: |  :---:  |\n| title | 列头显示文字 | String | - | - |\n| width | 每列宽度 | Number | - | - |\n| key | 插槽识别标识，可自定义设置列表数据样式,唯一不可重复 | String | - | - |\n| dataIndex | 数据字段标识 | String | - | - |\n| showOverflowTooltip | 默认情况下若内容过多会折行显示, 为true时多余的内容会在 hover 时以 tooltip 的形式显示出来。| Boolean | - | false |\n| fixed | 列是否固定在左侧或者右侧，true 表示固定在左侧 ｜ String/Boolean | true, left, right | - |\n| align | 对齐方式 | String | left/center/right | left |\n| headerAlign | 表头对齐方式，若不设置该项，则使用表格的对齐方式 | String | left/center/right | - |\n\n\n### slot\n\n列表默认设置了插槽 方便自定义\n\n| 参数 |    说明 |    类型 | 可选值 | 默认值 |\n| ----- | ------ | ----- | :-----: |  :---:  |\n| left | 列表左侧插槽，查看上方例子 | String | - | - |\n| right | 列表右侧插槽，同上 | String | - | - |\n| columns.key | columns列表数据插槽，查看上方例子，操作栏数据 | String | - | - |\n\n\n### 事件\n\ntable 的操作事件\n\n| 事件 |    说明 |    参数 | \n| ----- | ------ | ----- | \n| handleSelectionChange | 当列表有多选框时，勾选触发的事件,多选框的table-column 比较特殊，案例是已slot形式添加的。 | Array|\n| handleSizeChange | 当用户修改页面显示条数时触发 | val |\n| handleCurrentChange | 当用户修改页码时触发 | val |","source":"_posts/base-table.md","raw":"---\ntitle: table 列表\ndate: 2022-10-15 18:49:36\ntags:\n  - 组件封装\ncategories:\n  - 组件\n# cover: https://cover.png\n# feature: true\n---\n# table 列表\n\n封装table列表并将分页封装其中 目的实现配置话开发。\n\n## 演示案例\n::: demo 对el-table 的二次封装，内置了分页pagination，数据配置化，也可通过插槽实现自定义样式。\n```vue\n<template>\n  <div>\n   <BaseTablePageData\n      :dataSource=\"datalist\"\n      :pagination=\"page\"\n      :height=\"tableHeight\"\n      :columns=\"columns\"\n      @handleSelectionChange=\"handleSelectionChange\"\n      @handleSizeChange=\"handleSizeChange\"\n      @handleCurrentChange=\"handleCurrentChange\"\n    >\n      <template slot=\"left\">\n        <el-table-column\n          type=\"selection\"\n          width=\"50\"\n          align=\"center\"\n          headerAlign=\"center\"\n          fixed=\"left\"\n          :selectable=\"checkSelect\"\n        ></el-table-column>\n        <el-table-column\n          type=\"index\"\n          width=\"50\"\n          align=\"center\"\n          headerAlign=\"center\"\n          label=\"序号\"\n          fixed=\"left\"\n        ></el-table-column>\n      </template>\n      <template slot=\"action\" slot-scope=\"scope\">\n        <el-button\n          type=\"primary\"\n          size=\"mini\"\n          plain\n          icon=\"el-icon-edit\"\n        >\n          编辑\n        </el-button>\n        <el-button\n          type=\"primary\"\n          size=\"mini\"\n          plain\n          icon=\"el-icon-view\"\n        >\n          查看\n        </el-button>\n      </template>\n    </BaseTablePageData>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return { \n        tableHeight: \"400px\",\n        selectSessionList: [],\n         page: { //分页字段\n          current: 1,\n          size: 20,\n          total: 0\n        },\n\n        columns: [\n          {\n            title: \"科目名称\",\n            dataIndex: \"kmmc\",\n            key: \"kmmc\",\n            width: 100,\n          },\n          {\n            title: \"考试批次\",\n            dataIndex: \"pcmc\",\n            key: \"pcmc\",\n            showOverflowTooltip: true\n          },\n          {\n            title: \"场次名称\",\n            dataIndex: \"cc\",\n            key: \"cc\",\n            width: 100,\n          },\n          {\n            title: \"考试日期\",\n            dataIndex: 'ksrq',\n            key: 'ksrq',\n            width: 100,\n            showOverflowTooltip: true\n          },\n          {\n            title: \"场次开始时间\",\n            dataIndex: \"cckssj\",\n            key: 'cckssj',\n            width: 120,\n          },\n          {\n            title: \"场次结束时间\",\n            dataIndex: \"ccjssj\",\n            key: 'ccjssj',\n            width: 120,\n          },\n          {\n            title: \"排序\",\n            dataIndex: \"px\",\n            key: 'px',\n            width: 60,\n          },\n          {\n            title: \"创建时间\",\n            dataIndex: \"ctstamp\",\n            key: \"ctstamp\",\n            width: 150,\n            showOverflowTooltip: true\n          },\n          {\n            title: \"操作\",\n            key: \"action\",\n            width: 200,\n            fixed: \"right\",\n          }\n        ],\n        datalist: [\n          {\n            uuid:\"41705292c18f4c4a8e2eee36e19c2e91\",\n            pcUuid:\"f453e14f-9e89-11ec-a315-2x2x1a666\",\n            pcmc:\"2022年福建省高职院校分类考试招生职业技能测试\",\n            kmUuid:\"a3f18353275745c9891c30e7e17cf5c5\",\n            kmmc:\"英语\",\n            ksrq:\"2022-09-22\",\n            cc:\"第一场\",\n            cckssj:\"11:00\",\n            ccjssj:\"12:00\",\n            cssj:null,\n            ctstamp:\"2022-12-02 15:18:11\",\n            px:1\n          },\n          {\n            \"uuid\":\"afa5007aa4674992aa114b281f87cdaa\",\n            \"pcUuid\":\"f453e14f-9e89-11ec-a315-2x2x1a666\",\n            \"pcmc\":\"2022年福建省高职院校分类考试招生职业技能测试\",\n            \"kmUuid\":\"a3f18353275745c9891c30e7e17cf5c5\",\n            \"kmmc\":\"英语\",\"ksrq\":\"2022-11-01\",\n            \"cc\":\"第二场\",\n            \"cckssj\":\"07:00\",\n            \"ccjssj\":\"08:00\",\n            \"cssj\":null,\n            \"ctstamp\":\"2022-12-02 14:52:37\",\n            \"px\":2\n          },\n          {\n            \"uuid\":\"f7e31c8211c3428ba3bfcac2863fffa7\",\n            \"pcUuid\":\"f453e14f-9e89-11ec-a315-2x2x1a666\",\n            \"pcmc\":\"2022年福建省高职院校分类考试招生职业技能测试\",\n            \"kmUuid\":\"a3f18353275745c9891c30e7e17cf5c5\",\n            \"kmmc\":\"英语\",\n            \"ksrq\":\"2022-11-01\",\n            \"cc\":\"第三场\",\n            \"cckssj\":\"09:00\",\n            \"ccjssj\":\"11:00\",\n            \"cssj\":null,\n            \"ctstamp\":\"2022-12-02 14:52:37\",\n            \"px\":3\n          },\n          {\n            \"uuid\":\"7a9f426bbbf84fd6a15f0f2bf8227444\",\n            \"pcUuid\":\"f453e14f-9e89-11ec-a315-2x2x1a666\",\n            \"pcmc\":\"2022年福建省高职院校分类考试招生职业技能测试\",\n            \"kmUuid\":\"a3f18353275745c9891c30e7e17cf5c5\",\n            \"kmmc\":\"英语\",\n            \"ksrq\":\"2022-12-29\",\n            \"cc\":\"第四场\",\n            \"cckssj\":\"09:00\",\n            \"ccjssj\":\"12:00\",\n            \"cssj\":null,\n            \"ctstamp\":\"2022-11-29 16:34:35\",\n            \"px\":4\n          }\n        ],\n      }\n    },\n\n    methods: {\n      // 搜索回调方法\n      search(data = {}) {\n        console.log(\"data==>\", data)\n      },\n\n      checkSelect() {\n        return true\n      },\n\n      // 列表已勾选的场次\n      handleSelectionChange(val) {\n        this.selectSessionList = val\n      },\n\n      // 分页操作--修改每页展示条数\n      async handleSizeChange(val) {\n        this.page.size = val;\n        this.page.current = 1;\n        // 重新获取数据\n        this.getSessionList(this.page)\n      },\n\n      // 分页操作--修改页数\n      async handleCurrentChange(val) {\n        this.page.current = val;\n        this.getSessionList(this.page)\n      }\n    }\n  }\n</script>\n\n```\n:::\n\n\n### 参数描述\n总的参数描述\n\n| 参数 |    说明 |    类型 | 可选值 | 默认值 |\n| ----- | ------ | ----- | :-----: |  :---:  |\n| dataSource | 显示的数据 | Array | - | - |\n| height | Table 的高度，默认为自动高度。如果 height 为 number 类型，单位 px；如果 height 为 string 类型，则这个高度会设置为 Table 的 style.height 的值，Table 的高度会受控于外部样式。 | String/Number | - | - |\n| pagination | 分页数据(详情查看下方) | Object | - | - |\n| columns | 表格列的配置描述，具体项见下表 | Array | - | - |\n\n\n> pagination 配置\n\n| 参数 |    说明 |    类型 | 可选值 | 默认值 |\n| ----- | ------ | ----- | :-----: |  :---:  |\n| current | 显示的页码 | Number | - | 1 |\n| size | 每页显示条数 | Number | - | 20 |\n| total | 总条数 | Number | - | 0 |\n\n\n> columns 配置\n\n| 参数 |    说明 |    类型 | 可选值 | 默认值 |\n| ----- | ------ | ----- | :-----: |  :---:  |\n| title | 列头显示文字 | String | - | - |\n| width | 每列宽度 | Number | - | - |\n| key | 插槽识别标识，可自定义设置列表数据样式,唯一不可重复 | String | - | - |\n| dataIndex | 数据字段标识 | String | - | - |\n| showOverflowTooltip | 默认情况下若内容过多会折行显示, 为true时多余的内容会在 hover 时以 tooltip 的形式显示出来。| Boolean | - | false |\n| fixed | 列是否固定在左侧或者右侧，true 表示固定在左侧 ｜ String/Boolean | true, left, right | - |\n| align | 对齐方式 | String | left/center/right | left |\n| headerAlign | 表头对齐方式，若不设置该项，则使用表格的对齐方式 | String | left/center/right | - |\n\n\n### slot\n\n列表默认设置了插槽 方便自定义\n\n| 参数 |    说明 |    类型 | 可选值 | 默认值 |\n| ----- | ------ | ----- | :-----: |  :---:  |\n| left | 列表左侧插槽，查看上方例子 | String | - | - |\n| right | 列表右侧插槽，同上 | String | - | - |\n| columns.key | columns列表数据插槽，查看上方例子，操作栏数据 | String | - | - |\n\n\n### 事件\n\ntable 的操作事件\n\n| 事件 |    说明 |    参数 | \n| ----- | ------ | ----- | \n| handleSelectionChange | 当列表有多选框时，勾选触发的事件,多选框的table-column 比较特殊，案例是已slot形式添加的。 | Array|\n| handleSizeChange | 当用户修改页面显示条数时触发 | val |\n| handleCurrentChange | 当用户修改页码时触发 | val |","slug":"base-table","published":1,"updated":"2023-06-05T10:46:14.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"climfiox30005ol9reb10g7ms","content":"<h1 id=\"table-列表\"><a href=\"#table-列表\" class=\"headerlink\" title=\"table 列表\"></a>table 列表</h1><p>封装table列表并将分页封装其中 目的实现配置话开发。</p>\n<h2 id=\"演示案例\"><a href=\"#演示案例\" class=\"headerlink\" title=\"演示案例\"></a>演示案例</h2><p>::: demo 对el-table 的二次封装，内置了分页pagination，数据配置化，也可通过插槽实现自定义样式。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">   &lt;BaseTablePageData</span><br><span class=\"line\">      :dataSource=&quot;datalist&quot;</span><br><span class=\"line\">      :pagination=&quot;page&quot;</span><br><span class=\"line\">      :height=&quot;tableHeight&quot;</span><br><span class=\"line\">      :columns=&quot;columns&quot;</span><br><span class=\"line\">      @handleSelectionChange=&quot;handleSelectionChange&quot;</span><br><span class=\"line\">      @handleSizeChange=&quot;handleSizeChange&quot;</span><br><span class=\"line\">      @handleCurrentChange=&quot;handleCurrentChange&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">      &lt;template slot=&quot;left&quot;&gt;</span><br><span class=\"line\">        &lt;el-table-column</span><br><span class=\"line\">          type=&quot;selection&quot;</span><br><span class=\"line\">          width=&quot;50&quot;</span><br><span class=\"line\">          align=&quot;center&quot;</span><br><span class=\"line\">          headerAlign=&quot;center&quot;</span><br><span class=\"line\">          fixed=&quot;left&quot;</span><br><span class=\"line\">          :selectable=&quot;checkSelect&quot;</span><br><span class=\"line\">        &gt;&lt;/el-table-column&gt;</span><br><span class=\"line\">        &lt;el-table-column</span><br><span class=\"line\">          type=&quot;index&quot;</span><br><span class=\"line\">          width=&quot;50&quot;</span><br><span class=\"line\">          align=&quot;center&quot;</span><br><span class=\"line\">          headerAlign=&quot;center&quot;</span><br><span class=\"line\">          label=&quot;序号&quot;</span><br><span class=\"line\">          fixed=&quot;left&quot;</span><br><span class=\"line\">        &gt;&lt;/el-table-column&gt;</span><br><span class=\"line\">      &lt;/template&gt;</span><br><span class=\"line\">      &lt;template slot=&quot;action&quot; slot-scope=&quot;scope&quot;&gt;</span><br><span class=\"line\">        &lt;el-button</span><br><span class=\"line\">          type=&quot;primary&quot;</span><br><span class=\"line\">          size=&quot;mini&quot;</span><br><span class=\"line\">          plain</span><br><span class=\"line\">          icon=&quot;el-icon-edit&quot;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          编辑</span><br><span class=\"line\">        &lt;/el-button&gt;</span><br><span class=\"line\">        &lt;el-button</span><br><span class=\"line\">          type=&quot;primary&quot;</span><br><span class=\"line\">          size=&quot;mini&quot;</span><br><span class=\"line\">          plain</span><br><span class=\"line\">          icon=&quot;el-icon-view&quot;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          查看</span><br><span class=\"line\">        &lt;/el-button&gt;</span><br><span class=\"line\">      &lt;/template&gt;</span><br><span class=\"line\">    &lt;/BaseTablePageData&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      return &#123; </span><br><span class=\"line\">        tableHeight: &quot;400px&quot;,</span><br><span class=\"line\">        selectSessionList: [],</span><br><span class=\"line\">         page: &#123; //分页字段</span><br><span class=\"line\">          current: 1,</span><br><span class=\"line\">          size: 20,</span><br><span class=\"line\">          total: 0</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        columns: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;科目名称&quot;,</span><br><span class=\"line\">            dataIndex: &quot;kmmc&quot;,</span><br><span class=\"line\">            key: &quot;kmmc&quot;,</span><br><span class=\"line\">            width: 100,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;考试批次&quot;,</span><br><span class=\"line\">            dataIndex: &quot;pcmc&quot;,</span><br><span class=\"line\">            key: &quot;pcmc&quot;,</span><br><span class=\"line\">            showOverflowTooltip: true</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;场次名称&quot;,</span><br><span class=\"line\">            dataIndex: &quot;cc&quot;,</span><br><span class=\"line\">            key: &quot;cc&quot;,</span><br><span class=\"line\">            width: 100,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;考试日期&quot;,</span><br><span class=\"line\">            dataIndex: &#x27;ksrq&#x27;,</span><br><span class=\"line\">            key: &#x27;ksrq&#x27;,</span><br><span class=\"line\">            width: 100,</span><br><span class=\"line\">            showOverflowTooltip: true</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;场次开始时间&quot;,</span><br><span class=\"line\">            dataIndex: &quot;cckssj&quot;,</span><br><span class=\"line\">            key: &#x27;cckssj&#x27;,</span><br><span class=\"line\">            width: 120,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;场次结束时间&quot;,</span><br><span class=\"line\">            dataIndex: &quot;ccjssj&quot;,</span><br><span class=\"line\">            key: &#x27;ccjssj&#x27;,</span><br><span class=\"line\">            width: 120,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;排序&quot;,</span><br><span class=\"line\">            dataIndex: &quot;px&quot;,</span><br><span class=\"line\">            key: &#x27;px&#x27;,</span><br><span class=\"line\">            width: 60,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;创建时间&quot;,</span><br><span class=\"line\">            dataIndex: &quot;ctstamp&quot;,</span><br><span class=\"line\">            key: &quot;ctstamp&quot;,</span><br><span class=\"line\">            width: 150,</span><br><span class=\"line\">            showOverflowTooltip: true</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;操作&quot;,</span><br><span class=\"line\">            key: &quot;action&quot;,</span><br><span class=\"line\">            width: 200,</span><br><span class=\"line\">            fixed: &quot;right&quot;,</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        datalist: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            uuid:&quot;41705292c18f4c4a8e2eee36e19c2e91&quot;,</span><br><span class=\"line\">            pcUuid:&quot;f453e14f-9e89-11ec-a315-2x2x1a666&quot;,</span><br><span class=\"line\">            pcmc:&quot;2022年福建省高职院校分类考试招生职业技能测试&quot;,</span><br><span class=\"line\">            kmUuid:&quot;a3f18353275745c9891c30e7e17cf5c5&quot;,</span><br><span class=\"line\">            kmmc:&quot;英语&quot;,</span><br><span class=\"line\">            ksrq:&quot;2022-09-22&quot;,</span><br><span class=\"line\">            cc:&quot;第一场&quot;,</span><br><span class=\"line\">            cckssj:&quot;11:00&quot;,</span><br><span class=\"line\">            ccjssj:&quot;12:00&quot;,</span><br><span class=\"line\">            cssj:null,</span><br><span class=\"line\">            ctstamp:&quot;2022-12-02 15:18:11&quot;,</span><br><span class=\"line\">            px:1</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            &quot;uuid&quot;:&quot;afa5007aa4674992aa114b281f87cdaa&quot;,</span><br><span class=\"line\">            &quot;pcUuid&quot;:&quot;f453e14f-9e89-11ec-a315-2x2x1a666&quot;,</span><br><span class=\"line\">            &quot;pcmc&quot;:&quot;2022年福建省高职院校分类考试招生职业技能测试&quot;,</span><br><span class=\"line\">            &quot;kmUuid&quot;:&quot;a3f18353275745c9891c30e7e17cf5c5&quot;,</span><br><span class=\"line\">            &quot;kmmc&quot;:&quot;英语&quot;,&quot;ksrq&quot;:&quot;2022-11-01&quot;,</span><br><span class=\"line\">            &quot;cc&quot;:&quot;第二场&quot;,</span><br><span class=\"line\">            &quot;cckssj&quot;:&quot;07:00&quot;,</span><br><span class=\"line\">            &quot;ccjssj&quot;:&quot;08:00&quot;,</span><br><span class=\"line\">            &quot;cssj&quot;:null,</span><br><span class=\"line\">            &quot;ctstamp&quot;:&quot;2022-12-02 14:52:37&quot;,</span><br><span class=\"line\">            &quot;px&quot;:2</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            &quot;uuid&quot;:&quot;f7e31c8211c3428ba3bfcac2863fffa7&quot;,</span><br><span class=\"line\">            &quot;pcUuid&quot;:&quot;f453e14f-9e89-11ec-a315-2x2x1a666&quot;,</span><br><span class=\"line\">            &quot;pcmc&quot;:&quot;2022年福建省高职院校分类考试招生职业技能测试&quot;,</span><br><span class=\"line\">            &quot;kmUuid&quot;:&quot;a3f18353275745c9891c30e7e17cf5c5&quot;,</span><br><span class=\"line\">            &quot;kmmc&quot;:&quot;英语&quot;,</span><br><span class=\"line\">            &quot;ksrq&quot;:&quot;2022-11-01&quot;,</span><br><span class=\"line\">            &quot;cc&quot;:&quot;第三场&quot;,</span><br><span class=\"line\">            &quot;cckssj&quot;:&quot;09:00&quot;,</span><br><span class=\"line\">            &quot;ccjssj&quot;:&quot;11:00&quot;,</span><br><span class=\"line\">            &quot;cssj&quot;:null,</span><br><span class=\"line\">            &quot;ctstamp&quot;:&quot;2022-12-02 14:52:37&quot;,</span><br><span class=\"line\">            &quot;px&quot;:3</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            &quot;uuid&quot;:&quot;7a9f426bbbf84fd6a15f0f2bf8227444&quot;,</span><br><span class=\"line\">            &quot;pcUuid&quot;:&quot;f453e14f-9e89-11ec-a315-2x2x1a666&quot;,</span><br><span class=\"line\">            &quot;pcmc&quot;:&quot;2022年福建省高职院校分类考试招生职业技能测试&quot;,</span><br><span class=\"line\">            &quot;kmUuid&quot;:&quot;a3f18353275745c9891c30e7e17cf5c5&quot;,</span><br><span class=\"line\">            &quot;kmmc&quot;:&quot;英语&quot;,</span><br><span class=\"line\">            &quot;ksrq&quot;:&quot;2022-12-29&quot;,</span><br><span class=\"line\">            &quot;cc&quot;:&quot;第四场&quot;,</span><br><span class=\"line\">            &quot;cckssj&quot;:&quot;09:00&quot;,</span><br><span class=\"line\">            &quot;ccjssj&quot;:&quot;12:00&quot;,</span><br><span class=\"line\">            &quot;cssj&quot;:null,</span><br><span class=\"line\">            &quot;ctstamp&quot;:&quot;2022-11-29 16:34:35&quot;,</span><br><span class=\"line\">            &quot;px&quot;:4</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      // 搜索回调方法</span><br><span class=\"line\">      search(data = &#123;&#125;) &#123;</span><br><span class=\"line\">        console.log(&quot;data==&gt;&quot;, data)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">      checkSelect() &#123;</span><br><span class=\"line\">        return true</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">      // 列表已勾选的场次</span><br><span class=\"line\">      handleSelectionChange(val) &#123;</span><br><span class=\"line\">        this.selectSessionList = val</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">      // 分页操作--修改每页展示条数</span><br><span class=\"line\">      async handleSizeChange(val) &#123;</span><br><span class=\"line\">        this.page.size = val;</span><br><span class=\"line\">        this.page.current = 1;</span><br><span class=\"line\">        // 重新获取数据</span><br><span class=\"line\">        this.getSessionList(this.page)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">      // 分页操作--修改页数</span><br><span class=\"line\">      async handleCurrentChange(val) &#123;</span><br><span class=\"line\">        this.page.current = val;</span><br><span class=\"line\">        this.getSessionList(this.page)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>:::</p>\n<h3 id=\"参数描述\"><a href=\"#参数描述\" class=\"headerlink\" title=\"参数描述\"></a>参数描述</h3><p>总的参数描述</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th align=\"center\">可选值</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>dataSource</td>\n<td>显示的数据</td>\n<td>Array</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>height</td>\n<td>Table 的高度，默认为自动高度。如果 height 为 number 类型，单位 px；如果 height 为 string 类型，则这个高度会设置为 Table 的 style.height 的值，Table 的高度会受控于外部样式。</td>\n<td>String&#x2F;Number</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>pagination</td>\n<td>分页数据(详情查看下方)</td>\n<td>Object</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>columns</td>\n<td>表格列的配置描述，具体项见下表</td>\n<td>Array</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>pagination 配置</p></blockquote>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th align=\"center\">可选值</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>current</td>\n<td>显示的页码</td>\n<td>Number</td>\n<td align=\"center\">-</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>size</td>\n<td>每页显示条数</td>\n<td>Number</td>\n<td align=\"center\">-</td>\n<td align=\"center\">20</td>\n</tr>\n<tr>\n<td>total</td>\n<td>总条数</td>\n<td>Number</td>\n<td align=\"center\">-</td>\n<td align=\"center\">0</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>columns 配置</p></blockquote>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th align=\"center\">可选值</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td>列头显示文字</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>width</td>\n<td>每列宽度</td>\n<td>Number</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>key</td>\n<td>插槽识别标识，可自定义设置列表数据样式,唯一不可重复</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>dataIndex</td>\n<td>数据字段标识</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>showOverflowTooltip</td>\n<td>默认情况下若内容过多会折行显示, 为true时多余的内容会在 hover 时以 tooltip 的形式显示出来。</td>\n<td>Boolean</td>\n<td align=\"center\">-</td>\n<td align=\"center\">false</td>\n</tr>\n<tr>\n<td>fixed</td>\n<td>列是否固定在左侧或者右侧，true 表示固定在左侧 ｜ String&#x2F;Boolean</td>\n<td>true, left, right</td>\n<td align=\"center\">-</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td>align</td>\n<td>对齐方式</td>\n<td>String</td>\n<td align=\"center\">left&#x2F;center&#x2F;right</td>\n<td align=\"center\">left</td>\n</tr>\n<tr>\n<td>headerAlign</td>\n<td>表头对齐方式，若不设置该项，则使用表格的对齐方式</td>\n<td>String</td>\n<td align=\"center\">left&#x2F;center&#x2F;right</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody></table>\n<h3 id=\"slot\"><a href=\"#slot\" class=\"headerlink\" title=\"slot\"></a>slot</h3><p>列表默认设置了插槽 方便自定义</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th align=\"center\">可选值</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>left</td>\n<td>列表左侧插槽，查看上方例子</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>right</td>\n<td>列表右侧插槽，同上</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>columns.key</td>\n<td>columns列表数据插槽，查看上方例子，操作栏数据</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody></table>\n<h3 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h3><p>table 的操作事件</p>\n<table>\n<thead>\n<tr>\n<th>事件</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>handleSelectionChange</td>\n<td>当列表有多选框时，勾选触发的事件,多选框的table-column 比较特殊，案例是已slot形式添加的。</td>\n<td>Array</td>\n</tr>\n<tr>\n<td>handleSizeChange</td>\n<td>当用户修改页面显示条数时触发</td>\n<td>val</td>\n</tr>\n<tr>\n<td>handleCurrentChange</td>\n<td>当用户修改页码时触发</td>\n<td>val</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"table-列表\"><a href=\"#table-列表\" class=\"headerlink\" title=\"table 列表\"></a>table 列表</h1><p>封装table列表并将分页封装其中 目的实现配置话开发。</p>\n<h2 id=\"演示案例\"><a href=\"#演示案例\" class=\"headerlink\" title=\"演示案例\"></a>演示案例</h2><p>::: demo 对el-table 的二次封装，内置了分页pagination，数据配置化，也可通过插槽实现自定义样式。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">   &lt;BaseTablePageData</span><br><span class=\"line\">      :dataSource=&quot;datalist&quot;</span><br><span class=\"line\">      :pagination=&quot;page&quot;</span><br><span class=\"line\">      :height=&quot;tableHeight&quot;</span><br><span class=\"line\">      :columns=&quot;columns&quot;</span><br><span class=\"line\">      @handleSelectionChange=&quot;handleSelectionChange&quot;</span><br><span class=\"line\">      @handleSizeChange=&quot;handleSizeChange&quot;</span><br><span class=\"line\">      @handleCurrentChange=&quot;handleCurrentChange&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">      &lt;template slot=&quot;left&quot;&gt;</span><br><span class=\"line\">        &lt;el-table-column</span><br><span class=\"line\">          type=&quot;selection&quot;</span><br><span class=\"line\">          width=&quot;50&quot;</span><br><span class=\"line\">          align=&quot;center&quot;</span><br><span class=\"line\">          headerAlign=&quot;center&quot;</span><br><span class=\"line\">          fixed=&quot;left&quot;</span><br><span class=\"line\">          :selectable=&quot;checkSelect&quot;</span><br><span class=\"line\">        &gt;&lt;/el-table-column&gt;</span><br><span class=\"line\">        &lt;el-table-column</span><br><span class=\"line\">          type=&quot;index&quot;</span><br><span class=\"line\">          width=&quot;50&quot;</span><br><span class=\"line\">          align=&quot;center&quot;</span><br><span class=\"line\">          headerAlign=&quot;center&quot;</span><br><span class=\"line\">          label=&quot;序号&quot;</span><br><span class=\"line\">          fixed=&quot;left&quot;</span><br><span class=\"line\">        &gt;&lt;/el-table-column&gt;</span><br><span class=\"line\">      &lt;/template&gt;</span><br><span class=\"line\">      &lt;template slot=&quot;action&quot; slot-scope=&quot;scope&quot;&gt;</span><br><span class=\"line\">        &lt;el-button</span><br><span class=\"line\">          type=&quot;primary&quot;</span><br><span class=\"line\">          size=&quot;mini&quot;</span><br><span class=\"line\">          plain</span><br><span class=\"line\">          icon=&quot;el-icon-edit&quot;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          编辑</span><br><span class=\"line\">        &lt;/el-button&gt;</span><br><span class=\"line\">        &lt;el-button</span><br><span class=\"line\">          type=&quot;primary&quot;</span><br><span class=\"line\">          size=&quot;mini&quot;</span><br><span class=\"line\">          plain</span><br><span class=\"line\">          icon=&quot;el-icon-view&quot;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          查看</span><br><span class=\"line\">        &lt;/el-button&gt;</span><br><span class=\"line\">      &lt;/template&gt;</span><br><span class=\"line\">    &lt;/BaseTablePageData&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      return &#123; </span><br><span class=\"line\">        tableHeight: &quot;400px&quot;,</span><br><span class=\"line\">        selectSessionList: [],</span><br><span class=\"line\">         page: &#123; //分页字段</span><br><span class=\"line\">          current: 1,</span><br><span class=\"line\">          size: 20,</span><br><span class=\"line\">          total: 0</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        columns: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;科目名称&quot;,</span><br><span class=\"line\">            dataIndex: &quot;kmmc&quot;,</span><br><span class=\"line\">            key: &quot;kmmc&quot;,</span><br><span class=\"line\">            width: 100,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;考试批次&quot;,</span><br><span class=\"line\">            dataIndex: &quot;pcmc&quot;,</span><br><span class=\"line\">            key: &quot;pcmc&quot;,</span><br><span class=\"line\">            showOverflowTooltip: true</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;场次名称&quot;,</span><br><span class=\"line\">            dataIndex: &quot;cc&quot;,</span><br><span class=\"line\">            key: &quot;cc&quot;,</span><br><span class=\"line\">            width: 100,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;考试日期&quot;,</span><br><span class=\"line\">            dataIndex: &#x27;ksrq&#x27;,</span><br><span class=\"line\">            key: &#x27;ksrq&#x27;,</span><br><span class=\"line\">            width: 100,</span><br><span class=\"line\">            showOverflowTooltip: true</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;场次开始时间&quot;,</span><br><span class=\"line\">            dataIndex: &quot;cckssj&quot;,</span><br><span class=\"line\">            key: &#x27;cckssj&#x27;,</span><br><span class=\"line\">            width: 120,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;场次结束时间&quot;,</span><br><span class=\"line\">            dataIndex: &quot;ccjssj&quot;,</span><br><span class=\"line\">            key: &#x27;ccjssj&#x27;,</span><br><span class=\"line\">            width: 120,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;排序&quot;,</span><br><span class=\"line\">            dataIndex: &quot;px&quot;,</span><br><span class=\"line\">            key: &#x27;px&#x27;,</span><br><span class=\"line\">            width: 60,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;创建时间&quot;,</span><br><span class=\"line\">            dataIndex: &quot;ctstamp&quot;,</span><br><span class=\"line\">            key: &quot;ctstamp&quot;,</span><br><span class=\"line\">            width: 150,</span><br><span class=\"line\">            showOverflowTooltip: true</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            title: &quot;操作&quot;,</span><br><span class=\"line\">            key: &quot;action&quot;,</span><br><span class=\"line\">            width: 200,</span><br><span class=\"line\">            fixed: &quot;right&quot;,</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        datalist: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            uuid:&quot;41705292c18f4c4a8e2eee36e19c2e91&quot;,</span><br><span class=\"line\">            pcUuid:&quot;f453e14f-9e89-11ec-a315-2x2x1a666&quot;,</span><br><span class=\"line\">            pcmc:&quot;2022年福建省高职院校分类考试招生职业技能测试&quot;,</span><br><span class=\"line\">            kmUuid:&quot;a3f18353275745c9891c30e7e17cf5c5&quot;,</span><br><span class=\"line\">            kmmc:&quot;英语&quot;,</span><br><span class=\"line\">            ksrq:&quot;2022-09-22&quot;,</span><br><span class=\"line\">            cc:&quot;第一场&quot;,</span><br><span class=\"line\">            cckssj:&quot;11:00&quot;,</span><br><span class=\"line\">            ccjssj:&quot;12:00&quot;,</span><br><span class=\"line\">            cssj:null,</span><br><span class=\"line\">            ctstamp:&quot;2022-12-02 15:18:11&quot;,</span><br><span class=\"line\">            px:1</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            &quot;uuid&quot;:&quot;afa5007aa4674992aa114b281f87cdaa&quot;,</span><br><span class=\"line\">            &quot;pcUuid&quot;:&quot;f453e14f-9e89-11ec-a315-2x2x1a666&quot;,</span><br><span class=\"line\">            &quot;pcmc&quot;:&quot;2022年福建省高职院校分类考试招生职业技能测试&quot;,</span><br><span class=\"line\">            &quot;kmUuid&quot;:&quot;a3f18353275745c9891c30e7e17cf5c5&quot;,</span><br><span class=\"line\">            &quot;kmmc&quot;:&quot;英语&quot;,&quot;ksrq&quot;:&quot;2022-11-01&quot;,</span><br><span class=\"line\">            &quot;cc&quot;:&quot;第二场&quot;,</span><br><span class=\"line\">            &quot;cckssj&quot;:&quot;07:00&quot;,</span><br><span class=\"line\">            &quot;ccjssj&quot;:&quot;08:00&quot;,</span><br><span class=\"line\">            &quot;cssj&quot;:null,</span><br><span class=\"line\">            &quot;ctstamp&quot;:&quot;2022-12-02 14:52:37&quot;,</span><br><span class=\"line\">            &quot;px&quot;:2</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            &quot;uuid&quot;:&quot;f7e31c8211c3428ba3bfcac2863fffa7&quot;,</span><br><span class=\"line\">            &quot;pcUuid&quot;:&quot;f453e14f-9e89-11ec-a315-2x2x1a666&quot;,</span><br><span class=\"line\">            &quot;pcmc&quot;:&quot;2022年福建省高职院校分类考试招生职业技能测试&quot;,</span><br><span class=\"line\">            &quot;kmUuid&quot;:&quot;a3f18353275745c9891c30e7e17cf5c5&quot;,</span><br><span class=\"line\">            &quot;kmmc&quot;:&quot;英语&quot;,</span><br><span class=\"line\">            &quot;ksrq&quot;:&quot;2022-11-01&quot;,</span><br><span class=\"line\">            &quot;cc&quot;:&quot;第三场&quot;,</span><br><span class=\"line\">            &quot;cckssj&quot;:&quot;09:00&quot;,</span><br><span class=\"line\">            &quot;ccjssj&quot;:&quot;11:00&quot;,</span><br><span class=\"line\">            &quot;cssj&quot;:null,</span><br><span class=\"line\">            &quot;ctstamp&quot;:&quot;2022-12-02 14:52:37&quot;,</span><br><span class=\"line\">            &quot;px&quot;:3</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            &quot;uuid&quot;:&quot;7a9f426bbbf84fd6a15f0f2bf8227444&quot;,</span><br><span class=\"line\">            &quot;pcUuid&quot;:&quot;f453e14f-9e89-11ec-a315-2x2x1a666&quot;,</span><br><span class=\"line\">            &quot;pcmc&quot;:&quot;2022年福建省高职院校分类考试招生职业技能测试&quot;,</span><br><span class=\"line\">            &quot;kmUuid&quot;:&quot;a3f18353275745c9891c30e7e17cf5c5&quot;,</span><br><span class=\"line\">            &quot;kmmc&quot;:&quot;英语&quot;,</span><br><span class=\"line\">            &quot;ksrq&quot;:&quot;2022-12-29&quot;,</span><br><span class=\"line\">            &quot;cc&quot;:&quot;第四场&quot;,</span><br><span class=\"line\">            &quot;cckssj&quot;:&quot;09:00&quot;,</span><br><span class=\"line\">            &quot;ccjssj&quot;:&quot;12:00&quot;,</span><br><span class=\"line\">            &quot;cssj&quot;:null,</span><br><span class=\"line\">            &quot;ctstamp&quot;:&quot;2022-11-29 16:34:35&quot;,</span><br><span class=\"line\">            &quot;px&quot;:4</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      // 搜索回调方法</span><br><span class=\"line\">      search(data = &#123;&#125;) &#123;</span><br><span class=\"line\">        console.log(&quot;data==&gt;&quot;, data)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">      checkSelect() &#123;</span><br><span class=\"line\">        return true</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">      // 列表已勾选的场次</span><br><span class=\"line\">      handleSelectionChange(val) &#123;</span><br><span class=\"line\">        this.selectSessionList = val</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">      // 分页操作--修改每页展示条数</span><br><span class=\"line\">      async handleSizeChange(val) &#123;</span><br><span class=\"line\">        this.page.size = val;</span><br><span class=\"line\">        this.page.current = 1;</span><br><span class=\"line\">        // 重新获取数据</span><br><span class=\"line\">        this.getSessionList(this.page)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">      // 分页操作--修改页数</span><br><span class=\"line\">      async handleCurrentChange(val) &#123;</span><br><span class=\"line\">        this.page.current = val;</span><br><span class=\"line\">        this.getSessionList(this.page)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>:::</p>\n<h3 id=\"参数描述\"><a href=\"#参数描述\" class=\"headerlink\" title=\"参数描述\"></a>参数描述</h3><p>总的参数描述</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th align=\"center\">可选值</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>dataSource</td>\n<td>显示的数据</td>\n<td>Array</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>height</td>\n<td>Table 的高度，默认为自动高度。如果 height 为 number 类型，单位 px；如果 height 为 string 类型，则这个高度会设置为 Table 的 style.height 的值，Table 的高度会受控于外部样式。</td>\n<td>String&#x2F;Number</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>pagination</td>\n<td>分页数据(详情查看下方)</td>\n<td>Object</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>columns</td>\n<td>表格列的配置描述，具体项见下表</td>\n<td>Array</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>pagination 配置</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th align=\"center\">可选值</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>current</td>\n<td>显示的页码</td>\n<td>Number</td>\n<td align=\"center\">-</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>size</td>\n<td>每页显示条数</td>\n<td>Number</td>\n<td align=\"center\">-</td>\n<td align=\"center\">20</td>\n</tr>\n<tr>\n<td>total</td>\n<td>总条数</td>\n<td>Number</td>\n<td align=\"center\">-</td>\n<td align=\"center\">0</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>columns 配置</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th align=\"center\">可选值</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td>列头显示文字</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>width</td>\n<td>每列宽度</td>\n<td>Number</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>key</td>\n<td>插槽识别标识，可自定义设置列表数据样式,唯一不可重复</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>dataIndex</td>\n<td>数据字段标识</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>showOverflowTooltip</td>\n<td>默认情况下若内容过多会折行显示, 为true时多余的内容会在 hover 时以 tooltip 的形式显示出来。</td>\n<td>Boolean</td>\n<td align=\"center\">-</td>\n<td align=\"center\">false</td>\n</tr>\n<tr>\n<td>fixed</td>\n<td>列是否固定在左侧或者右侧，true 表示固定在左侧 ｜ String&#x2F;Boolean</td>\n<td>true, left, right</td>\n<td align=\"center\">-</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td>align</td>\n<td>对齐方式</td>\n<td>String</td>\n<td align=\"center\">left&#x2F;center&#x2F;right</td>\n<td align=\"center\">left</td>\n</tr>\n<tr>\n<td>headerAlign</td>\n<td>表头对齐方式，若不设置该项，则使用表格的对齐方式</td>\n<td>String</td>\n<td align=\"center\">left&#x2F;center&#x2F;right</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody></table>\n<h3 id=\"slot\"><a href=\"#slot\" class=\"headerlink\" title=\"slot\"></a>slot</h3><p>列表默认设置了插槽 方便自定义</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th align=\"center\">可选值</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>left</td>\n<td>列表左侧插槽，查看上方例子</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>right</td>\n<td>列表右侧插槽，同上</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>columns.key</td>\n<td>columns列表数据插槽，查看上方例子，操作栏数据</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody></table>\n<h3 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h3><p>table 的操作事件</p>\n<table>\n<thead>\n<tr>\n<th>事件</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>handleSelectionChange</td>\n<td>当列表有多选框时，勾选触发的事件,多选框的table-column 比较特殊，案例是已slot形式添加的。</td>\n<td>Array</td>\n</tr>\n<tr>\n<td>handleSizeChange</td>\n<td>当用户修改页面显示条数时触发</td>\n<td>val</td>\n</tr>\n<tr>\n<td>handleCurrentChange</td>\n<td>当用户修改页码时触发</td>\n<td>val</td>\n</tr>\n</tbody></table>\n"},{"title":"前端命名规范","date":"2022-10-15T10:49:36.000Z","_content":"\n# 前端命名规范\n## 引入 Eslint、Prettier 规范\n\n一个不好的命名，可能就会引起别人的错误理解；\n\n遵循一套严格的命名规范，无论是对自己还是接手的他人，都会大大降低代码的维护成本，所以想要成为一名合格的前端开发，命名规范是必须的；\n\n## 一些常见的不规则命名：\n\n- 单词拼写错误：到底是 form 还是 from ？\n\n- 中英文混用：到底用 dzTable 还是 addressList 呢？\n\n- 以 1-9，a-z 命名：不同类型直接用 type1、type2、type3？\n\n- 混用命名格式：一会 addressList 一会 addresslist 一会 addresses，这样不太好吧？\n\n- 单复数不分: 到底 address 还是 addresses 啊？到底是 photoes 还是 photos ？\n\n- 正反义词错用：到底用 showDialog 还是 isDialog 还是 visibleDialog ？\n\n## 一些常见好的命名：\n\n1. 驼峰式命名法介绍：\n\n    - Pascal Case 大驼峰式命名法：首字母大写；\n\n      - StudentInfo、UserInfo、ProductInfoCamel\n\n    -  Case 小驼峰式命名法：首字母小写；\n\n      - studentInfo、userInfo、productInfo\n\n2. 文件资源命名：\n    - 文件名不得含有空格；\n\n      - 文件名建议只使用小写字母，不使用大写字母；\n\n    - 名称较长时采用半角连接符(-)分隔；\n\n            usr/dev/document/front-end/project-vue3\n\n3. 变量命名\n    - 命名方式：采用小驼峰式命名方法；\n\n    - 命名规范：\n\n      - 普通变量(number, string, date)；\n\n      - 布尔类型：需要一个标识变量含义的前缀，比如has, is, wether, can, should等；\n\n      - 数组/集合等复数形式：最好以s或list等能够标识复数形式的后缀结尾，标识当前变量是复数形式，提高可读性；\n\n    - 常量全部大写，且用下划线来分割单词，eg：MAX_LENGTH = 1\n\n4. 函数\n\n    - 命名方式 : 小驼峰方式 lowerCamelCase ( 构造函数使用大驼峰命名法 )\n\n    - 命名规则 : 前缀为动词，动词 \n      \n      eg：add / update / delete / detail / get\n\n          // 更新数据\n          function updateData(){\n            return {};\n          }\n\n          // 获取用户信息\n          function getUserInfo{\n            return {}\n          }\n\n    - 附： 函数方法常用的动词: \n\n          get 获取 set 设置\n\n          add 增加 remove 删除\n\n          create 创建 destory 销毁\n\n          start 启动 stop 停止\n\n          open 打开 close 关闭\n\n          read 读取 write 写入\n\n          load 载入 save 保存\n\n          begin 开始 end 结束\n\n          backup 备份 restore 恢复\n\n          import 导入 export 导出\n\n          split 分割 merge 合并\n\n          inject 注入 extract 提取\n\n          attach 附着 detach 脱离\n\n          bind 绑定 separate 分离\n\n          view 查看 browse 浏览\n\n          edit 编辑 modify 修改\n\n          select 选取 mark 标记\n\n          copy 复制 paste 粘贴\n\n          undo 撤销 redo 重做\n\n          insert 插入 delete 移除\n\n          add 加入 append 添加\n\n          clean 清理 clear 清除\n\n          index 索引 sort 排序\n\n          find 查找 search 搜索\n\n          increase 增加 decrease 减少\n\n          play 播放  pause 暂停\n\n          launch 启动  run 运行\n\n          compile 编译  execute 执行\n\n          debug 调试  trace 跟踪\n\n          observe 观察  listen 监听\n\n          build 构建  publish 发布\n\n          input 输入  output 输出\n\n          encode 编码  decode 解码\n\n          encrypt 加密  decrypt 解密\n\n          compress 压缩  decompress 解压缩\n\n          pack 打包  unpack 解包\n\n          parse 解析  emit 生成\n\n          connect 连接  disconnect 断开\n\n          send 发送   receive 接收\n\n          download 下载  upload 上传\n\n          refresh 刷新  synchronize 同步\n\n          update 更新  revert 复原\n\n          lock 锁定  unlock 解锁\n\n          check out 签出  check in 签入\n\n          submit 提交  commit 交付\n\n          push 推  pull 拉\n\n          expand 展开  collapse 折叠\n\n          enter 进入  exit 退出\n\n          abort 放弃  quit 离开\n\n          obsolete 废弃  depreciate 废旧\n\n          collect 收集  aggregate 聚集\n\n5. 常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚， 不要嫌名字长\n\n        正例： MAX_STOCK_COUNT\n\n        反例： MAX_COUNT\n\n\n6. css 命名：\n\n    - 样式类名使用小写字母，以半角连接符(-)分割；\n    \n    - id 采用驼峰式命名；\n    \n    - scss / less 中的变量、函数、混合、placeholder 采用驼峰式命名  ","source":"_posts/fore-end-standard.md","raw":"---\ntitle: 前端命名规范\ndate: 2022-10-15 18:49:36\ntags:\n  - 命名规范\ncategories:\n  - 规范\n# cover: https://cover.png\n# feature: true\n---\n\n# 前端命名规范\n## 引入 Eslint、Prettier 规范\n\n一个不好的命名，可能就会引起别人的错误理解；\n\n遵循一套严格的命名规范，无论是对自己还是接手的他人，都会大大降低代码的维护成本，所以想要成为一名合格的前端开发，命名规范是必须的；\n\n## 一些常见的不规则命名：\n\n- 单词拼写错误：到底是 form 还是 from ？\n\n- 中英文混用：到底用 dzTable 还是 addressList 呢？\n\n- 以 1-9，a-z 命名：不同类型直接用 type1、type2、type3？\n\n- 混用命名格式：一会 addressList 一会 addresslist 一会 addresses，这样不太好吧？\n\n- 单复数不分: 到底 address 还是 addresses 啊？到底是 photoes 还是 photos ？\n\n- 正反义词错用：到底用 showDialog 还是 isDialog 还是 visibleDialog ？\n\n## 一些常见好的命名：\n\n1. 驼峰式命名法介绍：\n\n    - Pascal Case 大驼峰式命名法：首字母大写；\n\n      - StudentInfo、UserInfo、ProductInfoCamel\n\n    -  Case 小驼峰式命名法：首字母小写；\n\n      - studentInfo、userInfo、productInfo\n\n2. 文件资源命名：\n    - 文件名不得含有空格；\n\n      - 文件名建议只使用小写字母，不使用大写字母；\n\n    - 名称较长时采用半角连接符(-)分隔；\n\n            usr/dev/document/front-end/project-vue3\n\n3. 变量命名\n    - 命名方式：采用小驼峰式命名方法；\n\n    - 命名规范：\n\n      - 普通变量(number, string, date)；\n\n      - 布尔类型：需要一个标识变量含义的前缀，比如has, is, wether, can, should等；\n\n      - 数组/集合等复数形式：最好以s或list等能够标识复数形式的后缀结尾，标识当前变量是复数形式，提高可读性；\n\n    - 常量全部大写，且用下划线来分割单词，eg：MAX_LENGTH = 1\n\n4. 函数\n\n    - 命名方式 : 小驼峰方式 lowerCamelCase ( 构造函数使用大驼峰命名法 )\n\n    - 命名规则 : 前缀为动词，动词 \n      \n      eg：add / update / delete / detail / get\n\n          // 更新数据\n          function updateData(){\n            return {};\n          }\n\n          // 获取用户信息\n          function getUserInfo{\n            return {}\n          }\n\n    - 附： 函数方法常用的动词: \n\n          get 获取 set 设置\n\n          add 增加 remove 删除\n\n          create 创建 destory 销毁\n\n          start 启动 stop 停止\n\n          open 打开 close 关闭\n\n          read 读取 write 写入\n\n          load 载入 save 保存\n\n          begin 开始 end 结束\n\n          backup 备份 restore 恢复\n\n          import 导入 export 导出\n\n          split 分割 merge 合并\n\n          inject 注入 extract 提取\n\n          attach 附着 detach 脱离\n\n          bind 绑定 separate 分离\n\n          view 查看 browse 浏览\n\n          edit 编辑 modify 修改\n\n          select 选取 mark 标记\n\n          copy 复制 paste 粘贴\n\n          undo 撤销 redo 重做\n\n          insert 插入 delete 移除\n\n          add 加入 append 添加\n\n          clean 清理 clear 清除\n\n          index 索引 sort 排序\n\n          find 查找 search 搜索\n\n          increase 增加 decrease 减少\n\n          play 播放  pause 暂停\n\n          launch 启动  run 运行\n\n          compile 编译  execute 执行\n\n          debug 调试  trace 跟踪\n\n          observe 观察  listen 监听\n\n          build 构建  publish 发布\n\n          input 输入  output 输出\n\n          encode 编码  decode 解码\n\n          encrypt 加密  decrypt 解密\n\n          compress 压缩  decompress 解压缩\n\n          pack 打包  unpack 解包\n\n          parse 解析  emit 生成\n\n          connect 连接  disconnect 断开\n\n          send 发送   receive 接收\n\n          download 下载  upload 上传\n\n          refresh 刷新  synchronize 同步\n\n          update 更新  revert 复原\n\n          lock 锁定  unlock 解锁\n\n          check out 签出  check in 签入\n\n          submit 提交  commit 交付\n\n          push 推  pull 拉\n\n          expand 展开  collapse 折叠\n\n          enter 进入  exit 退出\n\n          abort 放弃  quit 离开\n\n          obsolete 废弃  depreciate 废旧\n\n          collect 收集  aggregate 聚集\n\n5. 常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚， 不要嫌名字长\n\n        正例： MAX_STOCK_COUNT\n\n        反例： MAX_COUNT\n\n\n6. css 命名：\n\n    - 样式类名使用小写字母，以半角连接符(-)分割；\n    \n    - id 采用驼峰式命名；\n    \n    - scss / less 中的变量、函数、混合、placeholder 采用驼峰式命名  ","slug":"fore-end-standard","published":1,"updated":"2023-06-05T10:46:14.533Z","comments":1,"layout":"post","photos":[],"link":"","_id":"climfiox50006ol9rafia4990","content":"<h1 id=\"前端命名规范\"><a href=\"#前端命名规范\" class=\"headerlink\" title=\"前端命名规范\"></a>前端命名规范</h1><h2 id=\"引入-Eslint、Prettier-规范\"><a href=\"#引入-Eslint、Prettier-规范\" class=\"headerlink\" title=\"引入 Eslint、Prettier 规范\"></a>引入 Eslint、Prettier 规范</h2><p>一个不好的命名，可能就会引起别人的错误理解；</p>\n<p>遵循一套严格的命名规范，无论是对自己还是接手的他人，都会大大降低代码的维护成本，所以想要成为一名合格的前端开发，命名规范是必须的；</p>\n<h2 id=\"一些常见的不规则命名：\"><a href=\"#一些常见的不规则命名：\" class=\"headerlink\" title=\"一些常见的不规则命名：\"></a>一些常见的不规则命名：</h2><ul>\n<li><p>单词拼写错误：到底是 form 还是 from ？</p>\n</li>\n<li><p>中英文混用：到底用 dzTable 还是 addressList 呢？</p>\n</li>\n<li><p>以 1-9，a-z 命名：不同类型直接用 type1、type2、type3？</p>\n</li>\n<li><p>混用命名格式：一会 addressList 一会 addresslist 一会 addresses，这样不太好吧？</p>\n</li>\n<li><p>单复数不分: 到底 address 还是 addresses 啊？到底是 photoes 还是 photos ？</p>\n</li>\n<li><p>正反义词错用：到底用 showDialog 还是 isDialog 还是 visibleDialog ？</p>\n</li>\n</ul>\n<h2 id=\"一些常见好的命名：\"><a href=\"#一些常见好的命名：\" class=\"headerlink\" title=\"一些常见好的命名：\"></a>一些常见好的命名：</h2><ol>\n<li><p>驼峰式命名法介绍：</p>\n<ul>\n<li><p>Pascal Case 大驼峰式命名法：首字母大写；</p>\n<ul>\n<li>StudentInfo、UserInfo、ProductInfoCamel</li>\n</ul>\n</li>\n<li><p>Case 小驼峰式命名法：首字母小写；</p>\n</li>\n<li><p>studentInfo、userInfo、productInfo</p>\n</li>\n</ul>\n</li>\n<li><p>文件资源命名：</p>\n<ul>\n<li><p>文件名不得含有空格；</p>\n<ul>\n<li>文件名建议只使用小写字母，不使用大写字母；</li>\n</ul>\n</li>\n<li><p>名称较长时采用半角连接符(-)分隔；</p>\n<pre><code>  usr/dev/document/front-end/project-vue3\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p>变量命名</p>\n<ul>\n<li><p>命名方式：采用小驼峰式命名方法；</p>\n</li>\n<li><p>命名规范：</p>\n<ul>\n<li><p>普通变量(number, string, date)；</p>\n</li>\n<li><p>布尔类型：需要一个标识变量含义的前缀，比如has, is, wether, can, should等；</p>\n</li>\n<li><p>数组&#x2F;集合等复数形式：最好以s或list等能够标识复数形式的后缀结尾，标识当前变量是复数形式，提高可读性；</p>\n</li>\n</ul>\n</li>\n<li><p>常量全部大写，且用下划线来分割单词，eg：MAX_LENGTH &#x3D; 1</p>\n</li>\n</ul>\n</li>\n<li><p>函数</p>\n<ul>\n<li><p>命名方式 : 小驼峰方式 lowerCamelCase ( 构造函数使用大驼峰命名法 )</p>\n</li>\n<li><p>命名规则 : 前缀为动词，动词 </p>\n<p>eg：add &#x2F; update &#x2F; delete &#x2F; detail &#x2F; get</p>\n<pre><code>// 更新数据\nfunction updateData()&#123;\n  return &#123;&#125;;\n&#125;\n\n// 获取用户信息\nfunction getUserInfo&#123;\n  return &#123;&#125;\n&#125;\n</code></pre>\n</li>\n<li><p>附： 函数方法常用的动词: </p>\n<pre><code>get 获取 set 设置\n\nadd 增加 remove 删除\n\ncreate 创建 destory 销毁\n\nstart 启动 stop 停止\n\nopen 打开 close 关闭\n\nread 读取 write 写入\n\nload 载入 save 保存\n\nbegin 开始 end 结束\n\nbackup 备份 restore 恢复\n\nimport 导入 export 导出\n\nsplit 分割 merge 合并\n\ninject 注入 extract 提取\n\nattach 附着 detach 脱离\n\nbind 绑定 separate 分离\n\nview 查看 browse 浏览\n\nedit 编辑 modify 修改\n\nselect 选取 mark 标记\n\ncopy 复制 paste 粘贴\n\nundo 撤销 redo 重做\n\ninsert 插入 delete 移除\n\nadd 加入 append 添加\n\nclean 清理 clear 清除\n\nindex 索引 sort 排序\n\nfind 查找 search 搜索\n\nincrease 增加 decrease 减少\n\nplay 播放  pause 暂停\n\nlaunch 启动  run 运行\n\ncompile 编译  execute 执行\n\ndebug 调试  trace 跟踪\n\nobserve 观察  listen 监听\n\nbuild 构建  publish 发布\n\ninput 输入  output 输出\n\nencode 编码  decode 解码\n\nencrypt 加密  decrypt 解密\n\ncompress 压缩  decompress 解压缩\n\npack 打包  unpack 解包\n\nparse 解析  emit 生成\n\nconnect 连接  disconnect 断开\n\nsend 发送   receive 接收\n\ndownload 下载  upload 上传\n\nrefresh 刷新  synchronize 同步\n\nupdate 更新  revert 复原\n\nlock 锁定  unlock 解锁\n\ncheck out 签出  check in 签入\n\nsubmit 提交  commit 交付\n\npush 推  pull 拉\n\nexpand 展开  collapse 折叠\n\nenter 进入  exit 退出\n\nabort 放弃  quit 离开\n\nobsolete 废弃  depreciate 废旧\n\ncollect 收集  aggregate 聚集\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p>常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚， 不要嫌名字长</p>\n<pre><code> 正例： MAX_STOCK_COUNT\n\n 反例： MAX_COUNT\n</code></pre>\n</li>\n<li><p>css 命名：</p>\n<ul>\n<li><p>样式类名使用小写字母，以半角连接符(-)分割；</p>\n</li>\n<li><p>id 采用驼峰式命名；</p>\n</li>\n<li><p>scss &#x2F; less 中的变量、函数、混合、placeholder 采用驼峰式命名</p>\n</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前端命名规范\"><a href=\"#前端命名规范\" class=\"headerlink\" title=\"前端命名规范\"></a>前端命名规范</h1><h2 id=\"引入-Eslint、Prettier-规范\"><a href=\"#引入-Eslint、Prettier-规范\" class=\"headerlink\" title=\"引入 Eslint、Prettier 规范\"></a>引入 Eslint、Prettier 规范</h2><p>一个不好的命名，可能就会引起别人的错误理解；</p>\n<p>遵循一套严格的命名规范，无论是对自己还是接手的他人，都会大大降低代码的维护成本，所以想要成为一名合格的前端开发，命名规范是必须的；</p>\n<h2 id=\"一些常见的不规则命名：\"><a href=\"#一些常见的不规则命名：\" class=\"headerlink\" title=\"一些常见的不规则命名：\"></a>一些常见的不规则命名：</h2><ul>\n<li><p>单词拼写错误：到底是 form 还是 from ？</p>\n</li>\n<li><p>中英文混用：到底用 dzTable 还是 addressList 呢？</p>\n</li>\n<li><p>以 1-9，a-z 命名：不同类型直接用 type1、type2、type3？</p>\n</li>\n<li><p>混用命名格式：一会 addressList 一会 addresslist 一会 addresses，这样不太好吧？</p>\n</li>\n<li><p>单复数不分: 到底 address 还是 addresses 啊？到底是 photoes 还是 photos ？</p>\n</li>\n<li><p>正反义词错用：到底用 showDialog 还是 isDialog 还是 visibleDialog ？</p>\n</li>\n</ul>\n<h2 id=\"一些常见好的命名：\"><a href=\"#一些常见好的命名：\" class=\"headerlink\" title=\"一些常见好的命名：\"></a>一些常见好的命名：</h2><ol>\n<li><p>驼峰式命名法介绍：</p>\n<ul>\n<li><p>Pascal Case 大驼峰式命名法：首字母大写；</p>\n<ul>\n<li>StudentInfo、UserInfo、ProductInfoCamel</li>\n</ul>\n</li>\n<li><p>Case 小驼峰式命名法：首字母小写；</p>\n</li>\n<li><p>studentInfo、userInfo、productInfo</p>\n</li>\n</ul>\n</li>\n<li><p>文件资源命名：</p>\n<ul>\n<li><p>文件名不得含有空格；</p>\n<ul>\n<li>文件名建议只使用小写字母，不使用大写字母；</li>\n</ul>\n</li>\n<li><p>名称较长时采用半角连接符(-)分隔；</p>\n<pre><code>  usr/dev/document/front-end/project-vue3\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p>变量命名</p>\n<ul>\n<li><p>命名方式：采用小驼峰式命名方法；</p>\n</li>\n<li><p>命名规范：</p>\n<ul>\n<li><p>普通变量(number, string, date)；</p>\n</li>\n<li><p>布尔类型：需要一个标识变量含义的前缀，比如has, is, wether, can, should等；</p>\n</li>\n<li><p>数组&#x2F;集合等复数形式：最好以s或list等能够标识复数形式的后缀结尾，标识当前变量是复数形式，提高可读性；</p>\n</li>\n</ul>\n</li>\n<li><p>常量全部大写，且用下划线来分割单词，eg：MAX_LENGTH &#x3D; 1</p>\n</li>\n</ul>\n</li>\n<li><p>函数</p>\n<ul>\n<li><p>命名方式 : 小驼峰方式 lowerCamelCase ( 构造函数使用大驼峰命名法 )</p>\n</li>\n<li><p>命名规则 : 前缀为动词，动词 </p>\n<p>eg：add &#x2F; update &#x2F; delete &#x2F; detail &#x2F; get</p>\n<pre><code>// 更新数据\nfunction updateData()&#123;\n  return &#123;&#125;;\n&#125;\n\n// 获取用户信息\nfunction getUserInfo&#123;\n  return &#123;&#125;\n&#125;\n</code></pre>\n</li>\n<li><p>附： 函数方法常用的动词: </p>\n<pre><code>get 获取 set 设置\n\nadd 增加 remove 删除\n\ncreate 创建 destory 销毁\n\nstart 启动 stop 停止\n\nopen 打开 close 关闭\n\nread 读取 write 写入\n\nload 载入 save 保存\n\nbegin 开始 end 结束\n\nbackup 备份 restore 恢复\n\nimport 导入 export 导出\n\nsplit 分割 merge 合并\n\ninject 注入 extract 提取\n\nattach 附着 detach 脱离\n\nbind 绑定 separate 分离\n\nview 查看 browse 浏览\n\nedit 编辑 modify 修改\n\nselect 选取 mark 标记\n\ncopy 复制 paste 粘贴\n\nundo 撤销 redo 重做\n\ninsert 插入 delete 移除\n\nadd 加入 append 添加\n\nclean 清理 clear 清除\n\nindex 索引 sort 排序\n\nfind 查找 search 搜索\n\nincrease 增加 decrease 减少\n\nplay 播放  pause 暂停\n\nlaunch 启动  run 运行\n\ncompile 编译  execute 执行\n\ndebug 调试  trace 跟踪\n\nobserve 观察  listen 监听\n\nbuild 构建  publish 发布\n\ninput 输入  output 输出\n\nencode 编码  decode 解码\n\nencrypt 加密  decrypt 解密\n\ncompress 压缩  decompress 解压缩\n\npack 打包  unpack 解包\n\nparse 解析  emit 生成\n\nconnect 连接  disconnect 断开\n\nsend 发送   receive 接收\n\ndownload 下载  upload 上传\n\nrefresh 刷新  synchronize 同步\n\nupdate 更新  revert 复原\n\nlock 锁定  unlock 解锁\n\ncheck out 签出  check in 签入\n\nsubmit 提交  commit 交付\n\npush 推  pull 拉\n\nexpand 展开  collapse 折叠\n\nenter 进入  exit 退出\n\nabort 放弃  quit 离开\n\nobsolete 废弃  depreciate 废旧\n\ncollect 收集  aggregate 聚集\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p>常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚， 不要嫌名字长</p>\n<pre><code> 正例： MAX_STOCK_COUNT\n\n 反例： MAX_COUNT\n</code></pre>\n</li>\n<li><p>css 命名：</p>\n<ul>\n<li><p>样式类名使用小写字母，以半角连接符(-)分割；</p>\n</li>\n<li><p>id 采用驼峰式命名；</p>\n</li>\n<li><p>scss &#x2F; less 中的变量、函数、混合、placeholder 采用驼峰式命名</p>\n</li>\n</ul>\n</li>\n</ol>\n"},{"title":"Git操作规范","date":"2022-10-15T10:49:36.000Z","_content":"\n# Git规范\n\n### 写好git commit提交有什么好处呢？\n\n\n  - 查看提交的log也非常的优雅，这个就不多提了\n\n\n  - 方便查找日志记录，通过简单的过滤便能定位到具体想要查找的log\n\n\n  - 方便问题回溯，通过git log就能查找到当时提交的代码文件，以及修改的代码\n\n\n  - 其实如果使用过github的release, 可以直接根据feat和fix来过滤提取日志发布版本\n\n\n### 如何提交git commit\n\n  1. 创建自己分支 (Yjh/{type}/xxx) 头部为提交人缩写 type为提交类型 xxx为模块描述\n\n  2. 编写 commit 内容，内容应该尽量精简描述\n\n  type 值一般有以下几种：\n\n    - feat：新功能 feature\n    - bug：测试反馈 bug 列表中的 bug 号\n    - fix： 修复 bug\n    - ui：更新UI；\n    - docs： 文档注释变更\n    - style： 代码格式(不影响代码运行的变动)；\n    - refactor： 重构、优化(既不增加新功能，也不是修复bug)；\n    - perf： 性能优化；\n    - release：发布；\n    - deploy：部署；\n    - test： 增加测试\n    - chore： 构建过程或辅助工具的变动\n    - revert： 回退\n    - build： 打包\n\n\n\n## GIT 常用操作\n\n### 创建存储库\n\n      创建一个新的本地存储库\n      $ git init [项目名称]\n\n      克隆存储库(代码仓库)\n      $ git clone <git_url>\n\n      将存储库克隆到指定目录\n      $ git clone <git_url> 指定目录\n\n      将存储库克隆到指定目录，并指定分支\n      $ git clone <git_url> -b <分支名称> 指定目录\n\n### 使用分支\n\n      列出所有本地分支\n      $ git branch\n\n      列出所有分支，本地和远程\n      $ git branch -av\n\n      切换到 my_branch，并更新工作目录\n      $ git checkout my_branch\n\n      创建一个名为 new_branch 的新分支\n      $ git checkout -b new_branch\n\n      删除名为 my_branch 的分支\n      $ git branch -d my_branch\n\n      将分支 A 合并到分支 B\n      $ git checkout branchB\n      $ git merge branchA\n\n      标记当前提交\n      $ git tag my_tag\n\n      从远程分支中创建并切换到本地分支\n      $ git checkout -b <branch-name> origin/<branch-name>\n\n### 做出改变\n\n      在工作目录中显示修改后的文件，为您的下一次提交暂存\n      $ git status\n\n      暂存文件，准备提交\n      $ git add [file]\n\n      暂存所有更改的文件，准备提交\n      $ git add .\n\n      将所有暂存文件提交到版本化历史记录\n      $ git commit -m \"commit message\"\n\n      将所有跟踪的文件提交到版本化历史记录\n      $ git commit -am \"commit message\"\n\n      取消暂存文件，保留文件更改\n      $ git reset [file]\n\n      将所有内容恢复到最后一次提交\n      $ git reset --hard\n\n      已更改但未暂存内容的差异\n      $ git diff\n\n      已 commited 但尚未提交的内容的差异\n      $ git diff --staged\n\n      在指定分支之前应用当前分支的任何提交\n      $ git rebase [branch]\n\n### 配置\n\n      设置将附加到您的提交和标签的名称\n      $ git config --global user.name \"name\"\n\n      设置将附加到您的提交和标签 tags 的电子邮件地址\n      $ git config --global user.email \"email\"\n\n      启用 Git 输出的一些着色\n      $ git config --global color.ui auto\n\n      在文本编辑器中编辑全局配置文件\n      $ git config --global --edit\n\n      显示本地 repo 配置设置\n      $ git config --list\n\n      删除全局设置\n      $ git config --global --unset <entry-name>\n\n\n### 重构文件名\n\n      # 从工作目录中删除文件并暂存删除\n      git rm <filename>\n\n      # 从版本控制中删除文件但在本地保留文件\n      git rm --cached <filename>\n\n      # 更改文件名并准备提交\n      git mv <filename-orig> <filename-renamed>\n\n\n### 同步\n\n      从该 Git 远程获取所有分支\n      $ git fetch [alias]\n\n      将远程分支合并到当前分支以使其保持最新状态\n      $ git merge [alias]/[branch]\n\n      # 没有快进\n      $ git merge --no-ff [alias]/[branch]\n\n      # 仅快进\n      $ git merge --ff-only [alias]/[branch]\n\n      将本地分支提交传输到远程存储库分支\n      $ git push [alias] [branch]\n\n      从跟踪远程分支获取并合并任何提交\n      $ git pull\n\n      将另一个分支的一个特定提交合并到当前分支\n      $ git cherry-pick [commit_id]\n\n\n### 临时提交\n\n      # 保存已修改和分阶段的更改\n      $ git stash\n\n      # 列出隐藏文件更改的堆栈顺序\n      $ git stash list\n\n      # 从存储堆栈顶部编写工作\n      $ git stash pop\n\n      # 丢弃存储堆栈顶部的更改\n      $ git stash drop\n\n      # 回到某个 stash 的状态\n      $ git stash apply <stash@{n}>\n\n      # 删除所有的 stash\n      $ git stash clear\n\n\n### 观察你的存储库\n\n      显示当前活动分支的提交历史\n      $ git log\n\n      显示 branchA 上不在 branchB 上的提交\n      $ git log branchB..branchA\n\n      显示更改文件的提交，即使跨重命名\n      $ git log --follow [file]\n\n      显示 branchA 中的内容与 branchB 中的内容的差异\n      $ git diff branchB...branchA\n\n      以人类可读的格式显示 Git 中的任何对象\n      $ git show [SHA]\n\n\n### 忽略文件\n\n\n      文件 .gitignore 指定了 Git 应该忽略的 未跟踪的 文件\n\n      行首 #\t全行注释，不支持行尾类注释 (转义 \\#)\n      行首 !\t否定模式 (转义 \\!)\n      **\t匹配任意路径\n      *\t匹配任意多个字符\n      ?\t匹配任意一个字符\n      doc/**\t匹配 doc 文件夹下的全部内容\n      doc/**/a\t匹配任意深度路径下的 a 文件或文件夹\n      /\t表示路径分隔符，不区分操作系统\n      / 结尾\t仅会匹配文件夹，否则会匹配文件和文件夹\n      空行\t不匹配任何文件\n      行尾空格\t默认被忽略，可使用\\进行转义\n      行首空格\t被正常处理，不会被忽略\n      当前 .gitignore 文件定义规则的优先级高于上级路径 .gitignore 定义规则的优先级；后定义的规则优先级高于前面定义规则的优先级\n\n#### 忽略当前目录logs文件夹下的全部内容\n\n      /logs/\n      /logs/*\n      /logs/**\n#### 上述几条规则等效\n\n#### 忽略 Mac 系统文件，包括任意子路径下的同名文件（夹）\n      \n      .DS_store\n\n#### 忽略 node_modules 文件夹，包括任意子路径下的同名文件夹\n      \n      node_modules/\n\n#### 忽略任意子路径下build、target文件夹，\n#### 但不忽略src/main、src/test下的build、target文件夹\n\n      build/\n      !**/src/main/**/build/\n      !**/src/test/**/build/\n      target/\n      !**/src/main/**/target/\n      !**/src/test/**/target/\n\n#### 使用 ! 重新包含指定文件（夹）\n\n      !logs/.gitkeep\n\n\n### 远程\n\n      添加一个 git URL 作为别名\n      $ git remote add [alias] [url]\n\n      显示您设置的远程存储库的名称\n      $ git remote\n\n      显示远程存储库的名称和 URL\n      $ git remote -v\n\n      删除远程存储库\n      $ git remote rm [remote repo name]\n      更改 git repo 的 URL\n\n      $ git remote set-url origin [git_url]\n\n\n### 跟踪路径更改\n\n      从项目中删除文件并暂存删除以进行提交\n      $ git rm [file]\n\n      更改现有文件路径并暂存移动\n      $ git mv [existing-path] [new-path]\n\n      显示所有提交日志，并指示任何移动的路径\n      $ git log --stat -M\n\n\n### git 配置 ssh 代理\n\n      $ cat ~/.ssh/config\n      Host gitlab.com\n#### 直接使用 shadowsocks 提供的 socks5 代理端口\n\n      ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p \n\n      Host github.com\n      ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p\n\n\n## Git 技巧\n\n### 重命名分支\n\n#### 重命名为new\n\n      $ git branch -m <new>\n      $ git branch -m <old> <new> #重命名分支\n#### 推送并重置\n\n      $ git push origin -u <new>\n#### 删除远程分支\n\n      $ git push origin --delete <old> #方法1\n      $ git push origin :oldBranchName #方法2\n\n### Log\n\n#### 按内容搜索更改\n\n      $ git log -S'<a term in the source>'\n#### 显示特定文件随时间的变化\n\n      $ git log -p <file_name>\n#### 打印出很酷的日志可视化\n\n      $ git log --pretty=oneline --graph --decorate --all\n### Commit\n\n      $ git commit -v --amend\n      重写最后的提交信息\n\n### 忽略文件的权限变化\n\n      git config core.fileMode false\n      不再将文件的权限变化视作改动\n\n\n### 分支\n\n#### 列出所有分支及其上游\n\n      $ git branch -vv\n\n#### 快速切换到上一个分支\n\n      $ git checkout -\n\n#### 只获取所有远程分支\n\n      $ git branch -r\n\n#### 从另一个分支签出单个文件\n\n      $ git checkout <branch> -- <file>\n#### 删除本地存在远程不存在的分支\n\n      git remote prune origin\n\n\n### Git 别名\n\n      $ git config --global alias.co checkout\n\n      $ git config --global alias.br branch\n      \n      $ git config --global alias.ci commit\n      \n      $ git config --global alias.st status\n\n\n### 设置大小写敏感\n\n#### 查看git 的设置\n\n      $ git config --get core.ignorecase\n#### 设置大小写敏感\n\n      $ git config core.ignorecase false\n#### 远程有俩相同目录，通过这种方式清除掉，然后提交记录\n      \n      $ git rm -r --cached <目录/文件>\n\n\n### 撤销远程记录\n#### 撤销一条记录   \n    \n      $ git reset --hard HEAD~1\n#### 强制同步到远程仓库  \n\n      $ git push -f origin HEAD:master\n\n\n### 放弃本地修改内容\n\n#### 如果有的修改以及加入暂存区的话\n\n      $ git reset --hard \n#### 还原所有修改，不会删除新增的文件\n\n      $ git checkout . \n#### 下面命令会删除新增的文件\n\n      $ git clean -xdf\n\n\n### 获取最近一次提交的 Hash\n\n      $ git rev-parse HEAD # e10721cb8859b2c\n      获取短 hash\n      $ git rev-parse --short HEAD # e10721c\n\n\n### 删除已经合并到 master 的分支\n\n      $ git branch --merged master | grep -v '^\\*\\|  master' | xargs -n 1 git branch -d\n\n\n### 把 A 分支的某一个 commit，放到 B 分支上\n\n      # 切换到 B 分支\n      $ git checkout <B>\n      # 将 A 分支 <hash-id> 的内容 pick 到 B 分支\n      $ git cherry-pick <hash-id>\n\n\n#### 回到远程仓库的状态\n\n      $ git fetch --all && git reset --hard origin/master\n\n\n### 修改远程 Commit 记录\n\n#### 表示要修改当前版本的倒数第三次状态\n\n      $ git rebase -i HEAD~3\n#### 将要更改的记录行首单词 pick 改为 edit\n\n      pick 96dc3f9 提交 commit 描述内容 1\n      pick f1cce8a 提交 commit 描述内容 2\n      pick 6293516 提交 commit 描述内容 3\n      # Rebase eeb03a4..6293516 onto eeb03a4 \n      #                     (3 commands)\n      #\n      # Commands:\n      # p, pick = 使用提交\n      # r, reword = 使用提交，但编辑提交消息\n      # e, edit = 使用提交，但停止修改\n      # s, squash = 使用提交，但融合到先前的提交中\n      # f, fixup = 像 squash，但丢弃此提交的日志消息\n      # x, exec = 使用 shell 运行命令(该行的其余部分)\n      # d, drop = 删除提交\n\n      保存并退出，会弹出下面提示\n\n      # 您现在可以修改提交，使用\n      # \n      #   git commit --amend\n      # \n      # 对更改感到满意后，运行\n      # \n      #   git rebase --continue\n      #\n      # 1. 通过这条命令进入编辑更改 commit，保存退出\n      $ git commit --amend\n      # 2. 保存退出确认修改，继续执行下面命令, \n      $ git rebase --continue\n      # 如果修改多条记录反复执行上面两条命令直到完成所有修改\n\n      # 最后，确保没有人提交进行推送，最好不要加 -f 强制推送\n      $ git push -f origin master\n\n\n### 查看冲突文件列表\n\n      $ git diff --name-only --diff-filter=U\n\n### 关联远程分支\n\n      $ git branch -u origin/mybranch\n      或者在 push 时加上 -u 参数\n\n      git push origin/mybranch -u\n      关联之后，git branch -vv 就可以展示关联的远程分支名了, 同时推送到远程仓库直接：git push，不需要指定远程仓库\n\n\n### 展示任意分支某一文件的内容\n\n      $ git show <branch-name>:<file-name>","source":"_posts/git-standard.md","raw":"---\ntitle: Git操作规范\ndate: 2022-10-15 18:49:36\ntags:\n  - Git 规范\ncategories:\n  - 规范\n# cover: https://cover.png\n# feature: true\n---\n\n# Git规范\n\n### 写好git commit提交有什么好处呢？\n\n\n  - 查看提交的log也非常的优雅，这个就不多提了\n\n\n  - 方便查找日志记录，通过简单的过滤便能定位到具体想要查找的log\n\n\n  - 方便问题回溯，通过git log就能查找到当时提交的代码文件，以及修改的代码\n\n\n  - 其实如果使用过github的release, 可以直接根据feat和fix来过滤提取日志发布版本\n\n\n### 如何提交git commit\n\n  1. 创建自己分支 (Yjh/{type}/xxx) 头部为提交人缩写 type为提交类型 xxx为模块描述\n\n  2. 编写 commit 内容，内容应该尽量精简描述\n\n  type 值一般有以下几种：\n\n    - feat：新功能 feature\n    - bug：测试反馈 bug 列表中的 bug 号\n    - fix： 修复 bug\n    - ui：更新UI；\n    - docs： 文档注释变更\n    - style： 代码格式(不影响代码运行的变动)；\n    - refactor： 重构、优化(既不增加新功能，也不是修复bug)；\n    - perf： 性能优化；\n    - release：发布；\n    - deploy：部署；\n    - test： 增加测试\n    - chore： 构建过程或辅助工具的变动\n    - revert： 回退\n    - build： 打包\n\n\n\n## GIT 常用操作\n\n### 创建存储库\n\n      创建一个新的本地存储库\n      $ git init [项目名称]\n\n      克隆存储库(代码仓库)\n      $ git clone <git_url>\n\n      将存储库克隆到指定目录\n      $ git clone <git_url> 指定目录\n\n      将存储库克隆到指定目录，并指定分支\n      $ git clone <git_url> -b <分支名称> 指定目录\n\n### 使用分支\n\n      列出所有本地分支\n      $ git branch\n\n      列出所有分支，本地和远程\n      $ git branch -av\n\n      切换到 my_branch，并更新工作目录\n      $ git checkout my_branch\n\n      创建一个名为 new_branch 的新分支\n      $ git checkout -b new_branch\n\n      删除名为 my_branch 的分支\n      $ git branch -d my_branch\n\n      将分支 A 合并到分支 B\n      $ git checkout branchB\n      $ git merge branchA\n\n      标记当前提交\n      $ git tag my_tag\n\n      从远程分支中创建并切换到本地分支\n      $ git checkout -b <branch-name> origin/<branch-name>\n\n### 做出改变\n\n      在工作目录中显示修改后的文件，为您的下一次提交暂存\n      $ git status\n\n      暂存文件，准备提交\n      $ git add [file]\n\n      暂存所有更改的文件，准备提交\n      $ git add .\n\n      将所有暂存文件提交到版本化历史记录\n      $ git commit -m \"commit message\"\n\n      将所有跟踪的文件提交到版本化历史记录\n      $ git commit -am \"commit message\"\n\n      取消暂存文件，保留文件更改\n      $ git reset [file]\n\n      将所有内容恢复到最后一次提交\n      $ git reset --hard\n\n      已更改但未暂存内容的差异\n      $ git diff\n\n      已 commited 但尚未提交的内容的差异\n      $ git diff --staged\n\n      在指定分支之前应用当前分支的任何提交\n      $ git rebase [branch]\n\n### 配置\n\n      设置将附加到您的提交和标签的名称\n      $ git config --global user.name \"name\"\n\n      设置将附加到您的提交和标签 tags 的电子邮件地址\n      $ git config --global user.email \"email\"\n\n      启用 Git 输出的一些着色\n      $ git config --global color.ui auto\n\n      在文本编辑器中编辑全局配置文件\n      $ git config --global --edit\n\n      显示本地 repo 配置设置\n      $ git config --list\n\n      删除全局设置\n      $ git config --global --unset <entry-name>\n\n\n### 重构文件名\n\n      # 从工作目录中删除文件并暂存删除\n      git rm <filename>\n\n      # 从版本控制中删除文件但在本地保留文件\n      git rm --cached <filename>\n\n      # 更改文件名并准备提交\n      git mv <filename-orig> <filename-renamed>\n\n\n### 同步\n\n      从该 Git 远程获取所有分支\n      $ git fetch [alias]\n\n      将远程分支合并到当前分支以使其保持最新状态\n      $ git merge [alias]/[branch]\n\n      # 没有快进\n      $ git merge --no-ff [alias]/[branch]\n\n      # 仅快进\n      $ git merge --ff-only [alias]/[branch]\n\n      将本地分支提交传输到远程存储库分支\n      $ git push [alias] [branch]\n\n      从跟踪远程分支获取并合并任何提交\n      $ git pull\n\n      将另一个分支的一个特定提交合并到当前分支\n      $ git cherry-pick [commit_id]\n\n\n### 临时提交\n\n      # 保存已修改和分阶段的更改\n      $ git stash\n\n      # 列出隐藏文件更改的堆栈顺序\n      $ git stash list\n\n      # 从存储堆栈顶部编写工作\n      $ git stash pop\n\n      # 丢弃存储堆栈顶部的更改\n      $ git stash drop\n\n      # 回到某个 stash 的状态\n      $ git stash apply <stash@{n}>\n\n      # 删除所有的 stash\n      $ git stash clear\n\n\n### 观察你的存储库\n\n      显示当前活动分支的提交历史\n      $ git log\n\n      显示 branchA 上不在 branchB 上的提交\n      $ git log branchB..branchA\n\n      显示更改文件的提交，即使跨重命名\n      $ git log --follow [file]\n\n      显示 branchA 中的内容与 branchB 中的内容的差异\n      $ git diff branchB...branchA\n\n      以人类可读的格式显示 Git 中的任何对象\n      $ git show [SHA]\n\n\n### 忽略文件\n\n\n      文件 .gitignore 指定了 Git 应该忽略的 未跟踪的 文件\n\n      行首 #\t全行注释，不支持行尾类注释 (转义 \\#)\n      行首 !\t否定模式 (转义 \\!)\n      **\t匹配任意路径\n      *\t匹配任意多个字符\n      ?\t匹配任意一个字符\n      doc/**\t匹配 doc 文件夹下的全部内容\n      doc/**/a\t匹配任意深度路径下的 a 文件或文件夹\n      /\t表示路径分隔符，不区分操作系统\n      / 结尾\t仅会匹配文件夹，否则会匹配文件和文件夹\n      空行\t不匹配任何文件\n      行尾空格\t默认被忽略，可使用\\进行转义\n      行首空格\t被正常处理，不会被忽略\n      当前 .gitignore 文件定义规则的优先级高于上级路径 .gitignore 定义规则的优先级；后定义的规则优先级高于前面定义规则的优先级\n\n#### 忽略当前目录logs文件夹下的全部内容\n\n      /logs/\n      /logs/*\n      /logs/**\n#### 上述几条规则等效\n\n#### 忽略 Mac 系统文件，包括任意子路径下的同名文件（夹）\n      \n      .DS_store\n\n#### 忽略 node_modules 文件夹，包括任意子路径下的同名文件夹\n      \n      node_modules/\n\n#### 忽略任意子路径下build、target文件夹，\n#### 但不忽略src/main、src/test下的build、target文件夹\n\n      build/\n      !**/src/main/**/build/\n      !**/src/test/**/build/\n      target/\n      !**/src/main/**/target/\n      !**/src/test/**/target/\n\n#### 使用 ! 重新包含指定文件（夹）\n\n      !logs/.gitkeep\n\n\n### 远程\n\n      添加一个 git URL 作为别名\n      $ git remote add [alias] [url]\n\n      显示您设置的远程存储库的名称\n      $ git remote\n\n      显示远程存储库的名称和 URL\n      $ git remote -v\n\n      删除远程存储库\n      $ git remote rm [remote repo name]\n      更改 git repo 的 URL\n\n      $ git remote set-url origin [git_url]\n\n\n### 跟踪路径更改\n\n      从项目中删除文件并暂存删除以进行提交\n      $ git rm [file]\n\n      更改现有文件路径并暂存移动\n      $ git mv [existing-path] [new-path]\n\n      显示所有提交日志，并指示任何移动的路径\n      $ git log --stat -M\n\n\n### git 配置 ssh 代理\n\n      $ cat ~/.ssh/config\n      Host gitlab.com\n#### 直接使用 shadowsocks 提供的 socks5 代理端口\n\n      ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p \n\n      Host github.com\n      ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p\n\n\n## Git 技巧\n\n### 重命名分支\n\n#### 重命名为new\n\n      $ git branch -m <new>\n      $ git branch -m <old> <new> #重命名分支\n#### 推送并重置\n\n      $ git push origin -u <new>\n#### 删除远程分支\n\n      $ git push origin --delete <old> #方法1\n      $ git push origin :oldBranchName #方法2\n\n### Log\n\n#### 按内容搜索更改\n\n      $ git log -S'<a term in the source>'\n#### 显示特定文件随时间的变化\n\n      $ git log -p <file_name>\n#### 打印出很酷的日志可视化\n\n      $ git log --pretty=oneline --graph --decorate --all\n### Commit\n\n      $ git commit -v --amend\n      重写最后的提交信息\n\n### 忽略文件的权限变化\n\n      git config core.fileMode false\n      不再将文件的权限变化视作改动\n\n\n### 分支\n\n#### 列出所有分支及其上游\n\n      $ git branch -vv\n\n#### 快速切换到上一个分支\n\n      $ git checkout -\n\n#### 只获取所有远程分支\n\n      $ git branch -r\n\n#### 从另一个分支签出单个文件\n\n      $ git checkout <branch> -- <file>\n#### 删除本地存在远程不存在的分支\n\n      git remote prune origin\n\n\n### Git 别名\n\n      $ git config --global alias.co checkout\n\n      $ git config --global alias.br branch\n      \n      $ git config --global alias.ci commit\n      \n      $ git config --global alias.st status\n\n\n### 设置大小写敏感\n\n#### 查看git 的设置\n\n      $ git config --get core.ignorecase\n#### 设置大小写敏感\n\n      $ git config core.ignorecase false\n#### 远程有俩相同目录，通过这种方式清除掉，然后提交记录\n      \n      $ git rm -r --cached <目录/文件>\n\n\n### 撤销远程记录\n#### 撤销一条记录   \n    \n      $ git reset --hard HEAD~1\n#### 强制同步到远程仓库  \n\n      $ git push -f origin HEAD:master\n\n\n### 放弃本地修改内容\n\n#### 如果有的修改以及加入暂存区的话\n\n      $ git reset --hard \n#### 还原所有修改，不会删除新增的文件\n\n      $ git checkout . \n#### 下面命令会删除新增的文件\n\n      $ git clean -xdf\n\n\n### 获取最近一次提交的 Hash\n\n      $ git rev-parse HEAD # e10721cb8859b2c\n      获取短 hash\n      $ git rev-parse --short HEAD # e10721c\n\n\n### 删除已经合并到 master 的分支\n\n      $ git branch --merged master | grep -v '^\\*\\|  master' | xargs -n 1 git branch -d\n\n\n### 把 A 分支的某一个 commit，放到 B 分支上\n\n      # 切换到 B 分支\n      $ git checkout <B>\n      # 将 A 分支 <hash-id> 的内容 pick 到 B 分支\n      $ git cherry-pick <hash-id>\n\n\n#### 回到远程仓库的状态\n\n      $ git fetch --all && git reset --hard origin/master\n\n\n### 修改远程 Commit 记录\n\n#### 表示要修改当前版本的倒数第三次状态\n\n      $ git rebase -i HEAD~3\n#### 将要更改的记录行首单词 pick 改为 edit\n\n      pick 96dc3f9 提交 commit 描述内容 1\n      pick f1cce8a 提交 commit 描述内容 2\n      pick 6293516 提交 commit 描述内容 3\n      # Rebase eeb03a4..6293516 onto eeb03a4 \n      #                     (3 commands)\n      #\n      # Commands:\n      # p, pick = 使用提交\n      # r, reword = 使用提交，但编辑提交消息\n      # e, edit = 使用提交，但停止修改\n      # s, squash = 使用提交，但融合到先前的提交中\n      # f, fixup = 像 squash，但丢弃此提交的日志消息\n      # x, exec = 使用 shell 运行命令(该行的其余部分)\n      # d, drop = 删除提交\n\n      保存并退出，会弹出下面提示\n\n      # 您现在可以修改提交，使用\n      # \n      #   git commit --amend\n      # \n      # 对更改感到满意后，运行\n      # \n      #   git rebase --continue\n      #\n      # 1. 通过这条命令进入编辑更改 commit，保存退出\n      $ git commit --amend\n      # 2. 保存退出确认修改，继续执行下面命令, \n      $ git rebase --continue\n      # 如果修改多条记录反复执行上面两条命令直到完成所有修改\n\n      # 最后，确保没有人提交进行推送，最好不要加 -f 强制推送\n      $ git push -f origin master\n\n\n### 查看冲突文件列表\n\n      $ git diff --name-only --diff-filter=U\n\n### 关联远程分支\n\n      $ git branch -u origin/mybranch\n      或者在 push 时加上 -u 参数\n\n      git push origin/mybranch -u\n      关联之后，git branch -vv 就可以展示关联的远程分支名了, 同时推送到远程仓库直接：git push，不需要指定远程仓库\n\n\n### 展示任意分支某一文件的内容\n\n      $ git show <branch-name>:<file-name>","slug":"git-standard","published":1,"updated":"2023-06-05T10:46:14.534Z","comments":1,"layout":"post","photos":[],"link":"","_id":"climfiox60007ol9r7luda0vl","content":"<h1 id=\"Git规范\"><a href=\"#Git规范\" class=\"headerlink\" title=\"Git规范\"></a>Git规范</h1><h3 id=\"写好git-commit提交有什么好处呢？\"><a href=\"#写好git-commit提交有什么好处呢？\" class=\"headerlink\" title=\"写好git commit提交有什么好处呢？\"></a>写好git commit提交有什么好处呢？</h3><ul>\n<li><p>查看提交的log也非常的优雅，这个就不多提了</p>\n</li>\n<li><p>方便查找日志记录，通过简单的过滤便能定位到具体想要查找的log</p>\n</li>\n<li><p>方便问题回溯，通过git log就能查找到当时提交的代码文件，以及修改的代码</p>\n</li>\n<li><p>其实如果使用过github的release, 可以直接根据feat和fix来过滤提取日志发布版本</p>\n</li>\n</ul>\n<h3 id=\"如何提交git-commit\"><a href=\"#如何提交git-commit\" class=\"headerlink\" title=\"如何提交git commit\"></a>如何提交git commit</h3><ol>\n<li><p>创建自己分支 (Yjh&#x2F;{type}&#x2F;xxx) 头部为提交人缩写 type为提交类型 xxx为模块描述</p>\n</li>\n<li><p>编写 commit 内容，内容应该尽量精简描述</p>\n</li>\n</ol>\n<p>  type 值一般有以下几种：</p>\n<pre><code>- feat：新功能 feature\n- bug：测试反馈 bug 列表中的 bug 号\n- fix： 修复 bug\n- ui：更新UI；\n- docs： 文档注释变更\n- style： 代码格式(不影响代码运行的变动)；\n- refactor： 重构、优化(既不增加新功能，也不是修复bug)；\n- perf： 性能优化；\n- release：发布；\n- deploy：部署；\n- test： 增加测试\n- chore： 构建过程或辅助工具的变动\n- revert： 回退\n- build： 打包\n</code></pre>\n<h2 id=\"GIT-常用操作\"><a href=\"#GIT-常用操作\" class=\"headerlink\" title=\"GIT 常用操作\"></a>GIT 常用操作</h2><h3 id=\"创建存储库\"><a href=\"#创建存储库\" class=\"headerlink\" title=\"创建存储库\"></a>创建存储库</h3><pre><code>  创建一个新的本地存储库\n  $ git init [项目名称]\n\n  克隆存储库(代码仓库)\n  $ git clone &lt;git_url&gt;\n\n  将存储库克隆到指定目录\n  $ git clone &lt;git_url&gt; 指定目录\n\n  将存储库克隆到指定目录，并指定分支\n  $ git clone &lt;git_url&gt; -b &lt;分支名称&gt; 指定目录\n</code></pre>\n<h3 id=\"使用分支\"><a href=\"#使用分支\" class=\"headerlink\" title=\"使用分支\"></a>使用分支</h3><pre><code>  列出所有本地分支\n  $ git branch\n\n  列出所有分支，本地和远程\n  $ git branch -av\n\n  切换到 my_branch，并更新工作目录\n  $ git checkout my_branch\n\n  创建一个名为 new_branch 的新分支\n  $ git checkout -b new_branch\n\n  删除名为 my_branch 的分支\n  $ git branch -d my_branch\n\n  将分支 A 合并到分支 B\n  $ git checkout branchB\n  $ git merge branchA\n\n  标记当前提交\n  $ git tag my_tag\n\n  从远程分支中创建并切换到本地分支\n  $ git checkout -b &lt;branch-name&gt; origin/&lt;branch-name&gt;\n</code></pre>\n<h3 id=\"做出改变\"><a href=\"#做出改变\" class=\"headerlink\" title=\"做出改变\"></a>做出改变</h3><pre><code>  在工作目录中显示修改后的文件，为您的下一次提交暂存\n  $ git status\n\n  暂存文件，准备提交\n  $ git add [file]\n\n  暂存所有更改的文件，准备提交\n  $ git add .\n\n  将所有暂存文件提交到版本化历史记录\n  $ git commit -m &quot;commit message&quot;\n\n  将所有跟踪的文件提交到版本化历史记录\n  $ git commit -am &quot;commit message&quot;\n\n  取消暂存文件，保留文件更改\n  $ git reset [file]\n\n  将所有内容恢复到最后一次提交\n  $ git reset --hard\n\n  已更改但未暂存内容的差异\n  $ git diff\n\n  已 commited 但尚未提交的内容的差异\n  $ git diff --staged\n\n  在指定分支之前应用当前分支的任何提交\n  $ git rebase [branch]\n</code></pre>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><pre><code>  设置将附加到您的提交和标签的名称\n  $ git config --global user.name &quot;name&quot;\n\n  设置将附加到您的提交和标签 tags 的电子邮件地址\n  $ git config --global user.email &quot;email&quot;\n\n  启用 Git 输出的一些着色\n  $ git config --global color.ui auto\n\n  在文本编辑器中编辑全局配置文件\n  $ git config --global --edit\n\n  显示本地 repo 配置设置\n  $ git config --list\n\n  删除全局设置\n  $ git config --global --unset &lt;entry-name&gt;\n</code></pre>\n<h3 id=\"重构文件名\"><a href=\"#重构文件名\" class=\"headerlink\" title=\"重构文件名\"></a>重构文件名</h3><pre><code>  # 从工作目录中删除文件并暂存删除\n  git rm &lt;filename&gt;\n\n  # 从版本控制中删除文件但在本地保留文件\n  git rm --cached &lt;filename&gt;\n\n  # 更改文件名并准备提交\n  git mv &lt;filename-orig&gt; &lt;filename-renamed&gt;\n</code></pre>\n<h3 id=\"同步\"><a href=\"#同步\" class=\"headerlink\" title=\"同步\"></a>同步</h3><pre><code>  从该 Git 远程获取所有分支\n  $ git fetch [alias]\n\n  将远程分支合并到当前分支以使其保持最新状态\n  $ git merge [alias]/[branch]\n\n  # 没有快进\n  $ git merge --no-ff [alias]/[branch]\n\n  # 仅快进\n  $ git merge --ff-only [alias]/[branch]\n\n  将本地分支提交传输到远程存储库分支\n  $ git push [alias] [branch]\n\n  从跟踪远程分支获取并合并任何提交\n  $ git pull\n\n  将另一个分支的一个特定提交合并到当前分支\n  $ git cherry-pick [commit_id]\n</code></pre>\n<h3 id=\"临时提交\"><a href=\"#临时提交\" class=\"headerlink\" title=\"临时提交\"></a>临时提交</h3><pre><code>  # 保存已修改和分阶段的更改\n  $ git stash\n\n  # 列出隐藏文件更改的堆栈顺序\n  $ git stash list\n\n  # 从存储堆栈顶部编写工作\n  $ git stash pop\n\n  # 丢弃存储堆栈顶部的更改\n  $ git stash drop\n\n  # 回到某个 stash 的状态\n  $ git stash apply &lt;stash@&#123;n&#125;&gt;\n\n  # 删除所有的 stash\n  $ git stash clear\n</code></pre>\n<h3 id=\"观察你的存储库\"><a href=\"#观察你的存储库\" class=\"headerlink\" title=\"观察你的存储库\"></a>观察你的存储库</h3><pre><code>  显示当前活动分支的提交历史\n  $ git log\n\n  显示 branchA 上不在 branchB 上的提交\n  $ git log branchB..branchA\n\n  显示更改文件的提交，即使跨重命名\n  $ git log --follow [file]\n\n  显示 branchA 中的内容与 branchB 中的内容的差异\n  $ git diff branchB...branchA\n\n  以人类可读的格式显示 Git 中的任何对象\n  $ git show [SHA]\n</code></pre>\n<h3 id=\"忽略文件\"><a href=\"#忽略文件\" class=\"headerlink\" title=\"忽略文件\"></a>忽略文件</h3><pre><code>  文件 .gitignore 指定了 Git 应该忽略的 未跟踪的 文件\n\n  行首 #\t全行注释，不支持行尾类注释 (转义 \\#)\n  行首 !\t否定模式 (转义 \\!)\n  **\t匹配任意路径\n  *\t匹配任意多个字符\n  ?\t匹配任意一个字符\n  doc/**\t匹配 doc 文件夹下的全部内容\n  doc/**/a\t匹配任意深度路径下的 a 文件或文件夹\n  /\t表示路径分隔符，不区分操作系统\n  / 结尾\t仅会匹配文件夹，否则会匹配文件和文件夹\n  空行\t不匹配任何文件\n  行尾空格\t默认被忽略，可使用\\进行转义\n  行首空格\t被正常处理，不会被忽略\n  当前 .gitignore 文件定义规则的优先级高于上级路径 .gitignore 定义规则的优先级；后定义的规则优先级高于前面定义规则的优先级\n</code></pre>\n<h4 id=\"忽略当前目录logs文件夹下的全部内容\"><a href=\"#忽略当前目录logs文件夹下的全部内容\" class=\"headerlink\" title=\"忽略当前目录logs文件夹下的全部内容\"></a>忽略当前目录logs文件夹下的全部内容</h4><pre><code>  /logs/\n  /logs/*\n  /logs/**\n</code></pre>\n<h4 id=\"上述几条规则等效\"><a href=\"#上述几条规则等效\" class=\"headerlink\" title=\"上述几条规则等效\"></a>上述几条规则等效</h4><h4 id=\"忽略-Mac-系统文件，包括任意子路径下的同名文件（夹）\"><a href=\"#忽略-Mac-系统文件，包括任意子路径下的同名文件（夹）\" class=\"headerlink\" title=\"忽略 Mac 系统文件，包括任意子路径下的同名文件（夹）\"></a>忽略 Mac 系统文件，包括任意子路径下的同名文件（夹）</h4><pre><code>  .DS_store\n</code></pre>\n<h4 id=\"忽略-node-modules-文件夹，包括任意子路径下的同名文件夹\"><a href=\"#忽略-node-modules-文件夹，包括任意子路径下的同名文件夹\" class=\"headerlink\" title=\"忽略 node_modules 文件夹，包括任意子路径下的同名文件夹\"></a>忽略 node_modules 文件夹，包括任意子路径下的同名文件夹</h4><pre><code>  node_modules/\n</code></pre>\n<h4 id=\"忽略任意子路径下build、target文件夹，\"><a href=\"#忽略任意子路径下build、target文件夹，\" class=\"headerlink\" title=\"忽略任意子路径下build、target文件夹，\"></a>忽略任意子路径下build、target文件夹，</h4><h4 id=\"但不忽略src-x2F-main、src-x2F-test下的build、target文件夹\"><a href=\"#但不忽略src-x2F-main、src-x2F-test下的build、target文件夹\" class=\"headerlink\" title=\"但不忽略src&#x2F;main、src&#x2F;test下的build、target文件夹\"></a>但不忽略src&#x2F;main、src&#x2F;test下的build、target文件夹</h4><pre><code>  build/\n  !**/src/main/**/build/\n  !**/src/test/**/build/\n  target/\n  !**/src/main/**/target/\n  !**/src/test/**/target/\n</code></pre>\n<h4 id=\"使用-重新包含指定文件（夹）\"><a href=\"#使用-重新包含指定文件（夹）\" class=\"headerlink\" title=\"使用 ! 重新包含指定文件（夹）\"></a>使用 ! 重新包含指定文件（夹）</h4><pre><code>  !logs/.gitkeep\n</code></pre>\n<h3 id=\"远程\"><a href=\"#远程\" class=\"headerlink\" title=\"远程\"></a>远程</h3><pre><code>  添加一个 git URL 作为别名\n  $ git remote add [alias] [url]\n\n  显示您设置的远程存储库的名称\n  $ git remote\n\n  显示远程存储库的名称和 URL\n  $ git remote -v\n\n  删除远程存储库\n  $ git remote rm [remote repo name]\n  更改 git repo 的 URL\n\n  $ git remote set-url origin [git_url]\n</code></pre>\n<h3 id=\"跟踪路径更改\"><a href=\"#跟踪路径更改\" class=\"headerlink\" title=\"跟踪路径更改\"></a>跟踪路径更改</h3><pre><code>  从项目中删除文件并暂存删除以进行提交\n  $ git rm [file]\n\n  更改现有文件路径并暂存移动\n  $ git mv [existing-path] [new-path]\n\n  显示所有提交日志，并指示任何移动的路径\n  $ git log --stat -M\n</code></pre>\n<h3 id=\"git-配置-ssh-代理\"><a href=\"#git-配置-ssh-代理\" class=\"headerlink\" title=\"git 配置 ssh 代理\"></a>git 配置 ssh 代理</h3><pre><code>  $ cat ~/.ssh/config\n  Host gitlab.com\n</code></pre>\n<h4 id=\"直接使用-shadowsocks-提供的-socks5-代理端口\"><a href=\"#直接使用-shadowsocks-提供的-socks5-代理端口\" class=\"headerlink\" title=\"直接使用 shadowsocks 提供的 socks5 代理端口\"></a>直接使用 shadowsocks 提供的 socks5 代理端口</h4><pre><code>  ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p \n\n  Host github.com\n  ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p\n</code></pre>\n<h2 id=\"Git-技巧\"><a href=\"#Git-技巧\" class=\"headerlink\" title=\"Git 技巧\"></a>Git 技巧</h2><h3 id=\"重命名分支\"><a href=\"#重命名分支\" class=\"headerlink\" title=\"重命名分支\"></a>重命名分支</h3><h4 id=\"重命名为new\"><a href=\"#重命名为new\" class=\"headerlink\" title=\"重命名为new\"></a>重命名为new</h4><pre><code>  $ git branch -m &lt;new&gt;\n  $ git branch -m &lt;old&gt; &lt;new&gt; #重命名分支\n</code></pre>\n<h4 id=\"推送并重置\"><a href=\"#推送并重置\" class=\"headerlink\" title=\"推送并重置\"></a>推送并重置</h4><pre><code>  $ git push origin -u &lt;new&gt;\n</code></pre>\n<h4 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h4><pre><code>  $ git push origin --delete &lt;old&gt; #方法1\n  $ git push origin :oldBranchName #方法2\n</code></pre>\n<h3 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"Log\"></a>Log</h3><h4 id=\"按内容搜索更改\"><a href=\"#按内容搜索更改\" class=\"headerlink\" title=\"按内容搜索更改\"></a>按内容搜索更改</h4><pre><code>  $ git log -S&#39;&lt;a term in the source&gt;&#39;\n</code></pre>\n<h4 id=\"显示特定文件随时间的变化\"><a href=\"#显示特定文件随时间的变化\" class=\"headerlink\" title=\"显示特定文件随时间的变化\"></a>显示特定文件随时间的变化</h4><pre><code>  $ git log -p &lt;file_name&gt;\n</code></pre>\n<h4 id=\"打印出很酷的日志可视化\"><a href=\"#打印出很酷的日志可视化\" class=\"headerlink\" title=\"打印出很酷的日志可视化\"></a>打印出很酷的日志可视化</h4><pre><code>  $ git log --pretty=oneline --graph --decorate --all\n</code></pre>\n<h3 id=\"Commit\"><a href=\"#Commit\" class=\"headerlink\" title=\"Commit\"></a>Commit</h3><pre><code>  $ git commit -v --amend\n  重写最后的提交信息\n</code></pre>\n<h3 id=\"忽略文件的权限变化\"><a href=\"#忽略文件的权限变化\" class=\"headerlink\" title=\"忽略文件的权限变化\"></a>忽略文件的权限变化</h3><pre><code>  git config core.fileMode false\n  不再将文件的权限变化视作改动\n</code></pre>\n<h3 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h3><h4 id=\"列出所有分支及其上游\"><a href=\"#列出所有分支及其上游\" class=\"headerlink\" title=\"列出所有分支及其上游\"></a>列出所有分支及其上游</h4><pre><code>  $ git branch -vv\n</code></pre>\n<h4 id=\"快速切换到上一个分支\"><a href=\"#快速切换到上一个分支\" class=\"headerlink\" title=\"快速切换到上一个分支\"></a>快速切换到上一个分支</h4><pre><code>  $ git checkout -\n</code></pre>\n<h4 id=\"只获取所有远程分支\"><a href=\"#只获取所有远程分支\" class=\"headerlink\" title=\"只获取所有远程分支\"></a>只获取所有远程分支</h4><pre><code>  $ git branch -r\n</code></pre>\n<h4 id=\"从另一个分支签出单个文件\"><a href=\"#从另一个分支签出单个文件\" class=\"headerlink\" title=\"从另一个分支签出单个文件\"></a>从另一个分支签出单个文件</h4><pre><code>  $ git checkout &lt;branch&gt; -- &lt;file&gt;\n</code></pre>\n<h4 id=\"删除本地存在远程不存在的分支\"><a href=\"#删除本地存在远程不存在的分支\" class=\"headerlink\" title=\"删除本地存在远程不存在的分支\"></a>删除本地存在远程不存在的分支</h4><pre><code>  git remote prune origin\n</code></pre>\n<h3 id=\"Git-别名\"><a href=\"#Git-别名\" class=\"headerlink\" title=\"Git 别名\"></a>Git 别名</h3><pre><code>  $ git config --global alias.co checkout\n\n  $ git config --global alias.br branch\n  \n  $ git config --global alias.ci commit\n  \n  $ git config --global alias.st status\n</code></pre>\n<h3 id=\"设置大小写敏感\"><a href=\"#设置大小写敏感\" class=\"headerlink\" title=\"设置大小写敏感\"></a>设置大小写敏感</h3><h4 id=\"查看git-的设置\"><a href=\"#查看git-的设置\" class=\"headerlink\" title=\"查看git 的设置\"></a>查看git 的设置</h4><pre><code>  $ git config --get core.ignorecase\n</code></pre>\n<h4 id=\"设置大小写敏感-1\"><a href=\"#设置大小写敏感-1\" class=\"headerlink\" title=\"设置大小写敏感\"></a>设置大小写敏感</h4><pre><code>  $ git config core.ignorecase false\n</code></pre>\n<h4 id=\"远程有俩相同目录，通过这种方式清除掉，然后提交记录\"><a href=\"#远程有俩相同目录，通过这种方式清除掉，然后提交记录\" class=\"headerlink\" title=\"远程有俩相同目录，通过这种方式清除掉，然后提交记录\"></a>远程有俩相同目录，通过这种方式清除掉，然后提交记录</h4><pre><code>  $ git rm -r --cached &lt;目录/文件&gt;\n</code></pre>\n<h3 id=\"撤销远程记录\"><a href=\"#撤销远程记录\" class=\"headerlink\" title=\"撤销远程记录\"></a>撤销远程记录</h3><h4 id=\"撤销一条记录\"><a href=\"#撤销一条记录\" class=\"headerlink\" title=\"撤销一条记录\"></a>撤销一条记录</h4><pre><code>  $ git reset --hard HEAD~1\n</code></pre>\n<h4 id=\"强制同步到远程仓库\"><a href=\"#强制同步到远程仓库\" class=\"headerlink\" title=\"强制同步到远程仓库\"></a>强制同步到远程仓库</h4><pre><code>  $ git push -f origin HEAD:master\n</code></pre>\n<h3 id=\"放弃本地修改内容\"><a href=\"#放弃本地修改内容\" class=\"headerlink\" title=\"放弃本地修改内容\"></a>放弃本地修改内容</h3><h4 id=\"如果有的修改以及加入暂存区的话\"><a href=\"#如果有的修改以及加入暂存区的话\" class=\"headerlink\" title=\"如果有的修改以及加入暂存区的话\"></a>如果有的修改以及加入暂存区的话</h4><pre><code>  $ git reset --hard \n</code></pre>\n<h4 id=\"还原所有修改，不会删除新增的文件\"><a href=\"#还原所有修改，不会删除新增的文件\" class=\"headerlink\" title=\"还原所有修改，不会删除新增的文件\"></a>还原所有修改，不会删除新增的文件</h4><pre><code>  $ git checkout . \n</code></pre>\n<h4 id=\"下面命令会删除新增的文件\"><a href=\"#下面命令会删除新增的文件\" class=\"headerlink\" title=\"下面命令会删除新增的文件\"></a>下面命令会删除新增的文件</h4><pre><code>  $ git clean -xdf\n</code></pre>\n<h3 id=\"获取最近一次提交的-Hash\"><a href=\"#获取最近一次提交的-Hash\" class=\"headerlink\" title=\"获取最近一次提交的 Hash\"></a>获取最近一次提交的 Hash</h3><pre><code>  $ git rev-parse HEAD # e10721cb8859b2c\n  获取短 hash\n  $ git rev-parse --short HEAD # e10721c\n</code></pre>\n<h3 id=\"删除已经合并到-master-的分支\"><a href=\"#删除已经合并到-master-的分支\" class=\"headerlink\" title=\"删除已经合并到 master 的分支\"></a>删除已经合并到 master 的分支</h3><pre><code>  $ git branch --merged master | grep -v &#39;^\\*\\|  master&#39; | xargs -n 1 git branch -d\n</code></pre>\n<h3 id=\"把-A-分支的某一个-commit，放到-B-分支上\"><a href=\"#把-A-分支的某一个-commit，放到-B-分支上\" class=\"headerlink\" title=\"把 A 分支的某一个 commit，放到 B 分支上\"></a>把 A 分支的某一个 commit，放到 B 分支上</h3><pre><code>  # 切换到 B 分支\n  $ git checkout &lt;B&gt;\n  # 将 A 分支 &lt;hash-id&gt; 的内容 pick 到 B 分支\n  $ git cherry-pick &lt;hash-id&gt;\n</code></pre>\n<h4 id=\"回到远程仓库的状态\"><a href=\"#回到远程仓库的状态\" class=\"headerlink\" title=\"回到远程仓库的状态\"></a>回到远程仓库的状态</h4><pre><code>  $ git fetch --all &amp;&amp; git reset --hard origin/master\n</code></pre>\n<h3 id=\"修改远程-Commit-记录\"><a href=\"#修改远程-Commit-记录\" class=\"headerlink\" title=\"修改远程 Commit 记录\"></a>修改远程 Commit 记录</h3><h4 id=\"表示要修改当前版本的倒数第三次状态\"><a href=\"#表示要修改当前版本的倒数第三次状态\" class=\"headerlink\" title=\"表示要修改当前版本的倒数第三次状态\"></a>表示要修改当前版本的倒数第三次状态</h4><pre><code>  $ git rebase -i HEAD~3\n</code></pre>\n<h4 id=\"将要更改的记录行首单词-pick-改为-edit\"><a href=\"#将要更改的记录行首单词-pick-改为-edit\" class=\"headerlink\" title=\"将要更改的记录行首单词 pick 改为 edit\"></a>将要更改的记录行首单词 pick 改为 edit</h4><pre><code>  pick 96dc3f9 提交 commit 描述内容 1\n  pick f1cce8a 提交 commit 描述内容 2\n  pick 6293516 提交 commit 描述内容 3\n  # Rebase eeb03a4..6293516 onto eeb03a4 \n  #                     (3 commands)\n  #\n  # Commands:\n  # p, pick = 使用提交\n  # r, reword = 使用提交，但编辑提交消息\n  # e, edit = 使用提交，但停止修改\n  # s, squash = 使用提交，但融合到先前的提交中\n  # f, fixup = 像 squash，但丢弃此提交的日志消息\n  # x, exec = 使用 shell 运行命令(该行的其余部分)\n  # d, drop = 删除提交\n\n  保存并退出，会弹出下面提示\n\n  # 您现在可以修改提交，使用\n  # \n  #   git commit --amend\n  # \n  # 对更改感到满意后，运行\n  # \n  #   git rebase --continue\n  #\n  # 1. 通过这条命令进入编辑更改 commit，保存退出\n  $ git commit --amend\n  # 2. 保存退出确认修改，继续执行下面命令, \n  $ git rebase --continue\n  # 如果修改多条记录反复执行上面两条命令直到完成所有修改\n\n  # 最后，确保没有人提交进行推送，最好不要加 -f 强制推送\n  $ git push -f origin master\n</code></pre>\n<h3 id=\"查看冲突文件列表\"><a href=\"#查看冲突文件列表\" class=\"headerlink\" title=\"查看冲突文件列表\"></a>查看冲突文件列表</h3><pre><code>  $ git diff --name-only --diff-filter=U\n</code></pre>\n<h3 id=\"关联远程分支\"><a href=\"#关联远程分支\" class=\"headerlink\" title=\"关联远程分支\"></a>关联远程分支</h3><pre><code>  $ git branch -u origin/mybranch\n  或者在 push 时加上 -u 参数\n\n  git push origin/mybranch -u\n  关联之后，git branch -vv 就可以展示关联的远程分支名了, 同时推送到远程仓库直接：git push，不需要指定远程仓库\n</code></pre>\n<h3 id=\"展示任意分支某一文件的内容\"><a href=\"#展示任意分支某一文件的内容\" class=\"headerlink\" title=\"展示任意分支某一文件的内容\"></a>展示任意分支某一文件的内容</h3><pre><code>  $ git show &lt;branch-name&gt;:&lt;file-name&gt;\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Git规范\"><a href=\"#Git规范\" class=\"headerlink\" title=\"Git规范\"></a>Git规范</h1><h3 id=\"写好git-commit提交有什么好处呢？\"><a href=\"#写好git-commit提交有什么好处呢？\" class=\"headerlink\" title=\"写好git commit提交有什么好处呢？\"></a>写好git commit提交有什么好处呢？</h3><ul>\n<li><p>查看提交的log也非常的优雅，这个就不多提了</p>\n</li>\n<li><p>方便查找日志记录，通过简单的过滤便能定位到具体想要查找的log</p>\n</li>\n<li><p>方便问题回溯，通过git log就能查找到当时提交的代码文件，以及修改的代码</p>\n</li>\n<li><p>其实如果使用过github的release, 可以直接根据feat和fix来过滤提取日志发布版本</p>\n</li>\n</ul>\n<h3 id=\"如何提交git-commit\"><a href=\"#如何提交git-commit\" class=\"headerlink\" title=\"如何提交git commit\"></a>如何提交git commit</h3><ol>\n<li><p>创建自己分支 (Yjh&#x2F;{type}&#x2F;xxx) 头部为提交人缩写 type为提交类型 xxx为模块描述</p>\n</li>\n<li><p>编写 commit 内容，内容应该尽量精简描述</p>\n</li>\n</ol>\n<p>  type 值一般有以下几种：</p>\n<pre><code>- feat：新功能 feature\n- bug：测试反馈 bug 列表中的 bug 号\n- fix： 修复 bug\n- ui：更新UI；\n- docs： 文档注释变更\n- style： 代码格式(不影响代码运行的变动)；\n- refactor： 重构、优化(既不增加新功能，也不是修复bug)；\n- perf： 性能优化；\n- release：发布；\n- deploy：部署；\n- test： 增加测试\n- chore： 构建过程或辅助工具的变动\n- revert： 回退\n- build： 打包\n</code></pre>\n<h2 id=\"GIT-常用操作\"><a href=\"#GIT-常用操作\" class=\"headerlink\" title=\"GIT 常用操作\"></a>GIT 常用操作</h2><h3 id=\"创建存储库\"><a href=\"#创建存储库\" class=\"headerlink\" title=\"创建存储库\"></a>创建存储库</h3><pre><code>  创建一个新的本地存储库\n  $ git init [项目名称]\n\n  克隆存储库(代码仓库)\n  $ git clone &lt;git_url&gt;\n\n  将存储库克隆到指定目录\n  $ git clone &lt;git_url&gt; 指定目录\n\n  将存储库克隆到指定目录，并指定分支\n  $ git clone &lt;git_url&gt; -b &lt;分支名称&gt; 指定目录\n</code></pre>\n<h3 id=\"使用分支\"><a href=\"#使用分支\" class=\"headerlink\" title=\"使用分支\"></a>使用分支</h3><pre><code>  列出所有本地分支\n  $ git branch\n\n  列出所有分支，本地和远程\n  $ git branch -av\n\n  切换到 my_branch，并更新工作目录\n  $ git checkout my_branch\n\n  创建一个名为 new_branch 的新分支\n  $ git checkout -b new_branch\n\n  删除名为 my_branch 的分支\n  $ git branch -d my_branch\n\n  将分支 A 合并到分支 B\n  $ git checkout branchB\n  $ git merge branchA\n\n  标记当前提交\n  $ git tag my_tag\n\n  从远程分支中创建并切换到本地分支\n  $ git checkout -b &lt;branch-name&gt; origin/&lt;branch-name&gt;\n</code></pre>\n<h3 id=\"做出改变\"><a href=\"#做出改变\" class=\"headerlink\" title=\"做出改变\"></a>做出改变</h3><pre><code>  在工作目录中显示修改后的文件，为您的下一次提交暂存\n  $ git status\n\n  暂存文件，准备提交\n  $ git add [file]\n\n  暂存所有更改的文件，准备提交\n  $ git add .\n\n  将所有暂存文件提交到版本化历史记录\n  $ git commit -m &quot;commit message&quot;\n\n  将所有跟踪的文件提交到版本化历史记录\n  $ git commit -am &quot;commit message&quot;\n\n  取消暂存文件，保留文件更改\n  $ git reset [file]\n\n  将所有内容恢复到最后一次提交\n  $ git reset --hard\n\n  已更改但未暂存内容的差异\n  $ git diff\n\n  已 commited 但尚未提交的内容的差异\n  $ git diff --staged\n\n  在指定分支之前应用当前分支的任何提交\n  $ git rebase [branch]\n</code></pre>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><pre><code>  设置将附加到您的提交和标签的名称\n  $ git config --global user.name &quot;name&quot;\n\n  设置将附加到您的提交和标签 tags 的电子邮件地址\n  $ git config --global user.email &quot;email&quot;\n\n  启用 Git 输出的一些着色\n  $ git config --global color.ui auto\n\n  在文本编辑器中编辑全局配置文件\n  $ git config --global --edit\n\n  显示本地 repo 配置设置\n  $ git config --list\n\n  删除全局设置\n  $ git config --global --unset &lt;entry-name&gt;\n</code></pre>\n<h3 id=\"重构文件名\"><a href=\"#重构文件名\" class=\"headerlink\" title=\"重构文件名\"></a>重构文件名</h3><pre><code>  # 从工作目录中删除文件并暂存删除\n  git rm &lt;filename&gt;\n\n  # 从版本控制中删除文件但在本地保留文件\n  git rm --cached &lt;filename&gt;\n\n  # 更改文件名并准备提交\n  git mv &lt;filename-orig&gt; &lt;filename-renamed&gt;\n</code></pre>\n<h3 id=\"同步\"><a href=\"#同步\" class=\"headerlink\" title=\"同步\"></a>同步</h3><pre><code>  从该 Git 远程获取所有分支\n  $ git fetch [alias]\n\n  将远程分支合并到当前分支以使其保持最新状态\n  $ git merge [alias]/[branch]\n\n  # 没有快进\n  $ git merge --no-ff [alias]/[branch]\n\n  # 仅快进\n  $ git merge --ff-only [alias]/[branch]\n\n  将本地分支提交传输到远程存储库分支\n  $ git push [alias] [branch]\n\n  从跟踪远程分支获取并合并任何提交\n  $ git pull\n\n  将另一个分支的一个特定提交合并到当前分支\n  $ git cherry-pick [commit_id]\n</code></pre>\n<h3 id=\"临时提交\"><a href=\"#临时提交\" class=\"headerlink\" title=\"临时提交\"></a>临时提交</h3><pre><code>  # 保存已修改和分阶段的更改\n  $ git stash\n\n  # 列出隐藏文件更改的堆栈顺序\n  $ git stash list\n\n  # 从存储堆栈顶部编写工作\n  $ git stash pop\n\n  # 丢弃存储堆栈顶部的更改\n  $ git stash drop\n\n  # 回到某个 stash 的状态\n  $ git stash apply &lt;stash@&#123;n&#125;&gt;\n\n  # 删除所有的 stash\n  $ git stash clear\n</code></pre>\n<h3 id=\"观察你的存储库\"><a href=\"#观察你的存储库\" class=\"headerlink\" title=\"观察你的存储库\"></a>观察你的存储库</h3><pre><code>  显示当前活动分支的提交历史\n  $ git log\n\n  显示 branchA 上不在 branchB 上的提交\n  $ git log branchB..branchA\n\n  显示更改文件的提交，即使跨重命名\n  $ git log --follow [file]\n\n  显示 branchA 中的内容与 branchB 中的内容的差异\n  $ git diff branchB...branchA\n\n  以人类可读的格式显示 Git 中的任何对象\n  $ git show [SHA]\n</code></pre>\n<h3 id=\"忽略文件\"><a href=\"#忽略文件\" class=\"headerlink\" title=\"忽略文件\"></a>忽略文件</h3><pre><code>  文件 .gitignore 指定了 Git 应该忽略的 未跟踪的 文件\n\n  行首 #\t全行注释，不支持行尾类注释 (转义 \\#)\n  行首 !\t否定模式 (转义 \\!)\n  **\t匹配任意路径\n  *\t匹配任意多个字符\n  ?\t匹配任意一个字符\n  doc/**\t匹配 doc 文件夹下的全部内容\n  doc/**/a\t匹配任意深度路径下的 a 文件或文件夹\n  /\t表示路径分隔符，不区分操作系统\n  / 结尾\t仅会匹配文件夹，否则会匹配文件和文件夹\n  空行\t不匹配任何文件\n  行尾空格\t默认被忽略，可使用\\进行转义\n  行首空格\t被正常处理，不会被忽略\n  当前 .gitignore 文件定义规则的优先级高于上级路径 .gitignore 定义规则的优先级；后定义的规则优先级高于前面定义规则的优先级\n</code></pre>\n<h4 id=\"忽略当前目录logs文件夹下的全部内容\"><a href=\"#忽略当前目录logs文件夹下的全部内容\" class=\"headerlink\" title=\"忽略当前目录logs文件夹下的全部内容\"></a>忽略当前目录logs文件夹下的全部内容</h4><pre><code>  /logs/\n  /logs/*\n  /logs/**\n</code></pre>\n<h4 id=\"上述几条规则等效\"><a href=\"#上述几条规则等效\" class=\"headerlink\" title=\"上述几条规则等效\"></a>上述几条规则等效</h4><h4 id=\"忽略-Mac-系统文件，包括任意子路径下的同名文件（夹）\"><a href=\"#忽略-Mac-系统文件，包括任意子路径下的同名文件（夹）\" class=\"headerlink\" title=\"忽略 Mac 系统文件，包括任意子路径下的同名文件（夹）\"></a>忽略 Mac 系统文件，包括任意子路径下的同名文件（夹）</h4><pre><code>  .DS_store\n</code></pre>\n<h4 id=\"忽略-node-modules-文件夹，包括任意子路径下的同名文件夹\"><a href=\"#忽略-node-modules-文件夹，包括任意子路径下的同名文件夹\" class=\"headerlink\" title=\"忽略 node_modules 文件夹，包括任意子路径下的同名文件夹\"></a>忽略 node_modules 文件夹，包括任意子路径下的同名文件夹</h4><pre><code>  node_modules/\n</code></pre>\n<h4 id=\"忽略任意子路径下build、target文件夹，\"><a href=\"#忽略任意子路径下build、target文件夹，\" class=\"headerlink\" title=\"忽略任意子路径下build、target文件夹，\"></a>忽略任意子路径下build、target文件夹，</h4><h4 id=\"但不忽略src-x2F-main、src-x2F-test下的build、target文件夹\"><a href=\"#但不忽略src-x2F-main、src-x2F-test下的build、target文件夹\" class=\"headerlink\" title=\"但不忽略src&#x2F;main、src&#x2F;test下的build、target文件夹\"></a>但不忽略src&#x2F;main、src&#x2F;test下的build、target文件夹</h4><pre><code>  build/\n  !**/src/main/**/build/\n  !**/src/test/**/build/\n  target/\n  !**/src/main/**/target/\n  !**/src/test/**/target/\n</code></pre>\n<h4 id=\"使用-重新包含指定文件（夹）\"><a href=\"#使用-重新包含指定文件（夹）\" class=\"headerlink\" title=\"使用 ! 重新包含指定文件（夹）\"></a>使用 ! 重新包含指定文件（夹）</h4><pre><code>  !logs/.gitkeep\n</code></pre>\n<h3 id=\"远程\"><a href=\"#远程\" class=\"headerlink\" title=\"远程\"></a>远程</h3><pre><code>  添加一个 git URL 作为别名\n  $ git remote add [alias] [url]\n\n  显示您设置的远程存储库的名称\n  $ git remote\n\n  显示远程存储库的名称和 URL\n  $ git remote -v\n\n  删除远程存储库\n  $ git remote rm [remote repo name]\n  更改 git repo 的 URL\n\n  $ git remote set-url origin [git_url]\n</code></pre>\n<h3 id=\"跟踪路径更改\"><a href=\"#跟踪路径更改\" class=\"headerlink\" title=\"跟踪路径更改\"></a>跟踪路径更改</h3><pre><code>  从项目中删除文件并暂存删除以进行提交\n  $ git rm [file]\n\n  更改现有文件路径并暂存移动\n  $ git mv [existing-path] [new-path]\n\n  显示所有提交日志，并指示任何移动的路径\n  $ git log --stat -M\n</code></pre>\n<h3 id=\"git-配置-ssh-代理\"><a href=\"#git-配置-ssh-代理\" class=\"headerlink\" title=\"git 配置 ssh 代理\"></a>git 配置 ssh 代理</h3><pre><code>  $ cat ~/.ssh/config\n  Host gitlab.com\n</code></pre>\n<h4 id=\"直接使用-shadowsocks-提供的-socks5-代理端口\"><a href=\"#直接使用-shadowsocks-提供的-socks5-代理端口\" class=\"headerlink\" title=\"直接使用 shadowsocks 提供的 socks5 代理端口\"></a>直接使用 shadowsocks 提供的 socks5 代理端口</h4><pre><code>  ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p \n\n  Host github.com\n  ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p\n</code></pre>\n<h2 id=\"Git-技巧\"><a href=\"#Git-技巧\" class=\"headerlink\" title=\"Git 技巧\"></a>Git 技巧</h2><h3 id=\"重命名分支\"><a href=\"#重命名分支\" class=\"headerlink\" title=\"重命名分支\"></a>重命名分支</h3><h4 id=\"重命名为new\"><a href=\"#重命名为new\" class=\"headerlink\" title=\"重命名为new\"></a>重命名为new</h4><pre><code>  $ git branch -m &lt;new&gt;\n  $ git branch -m &lt;old&gt; &lt;new&gt; #重命名分支\n</code></pre>\n<h4 id=\"推送并重置\"><a href=\"#推送并重置\" class=\"headerlink\" title=\"推送并重置\"></a>推送并重置</h4><pre><code>  $ git push origin -u &lt;new&gt;\n</code></pre>\n<h4 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h4><pre><code>  $ git push origin --delete &lt;old&gt; #方法1\n  $ git push origin :oldBranchName #方法2\n</code></pre>\n<h3 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"Log\"></a>Log</h3><h4 id=\"按内容搜索更改\"><a href=\"#按内容搜索更改\" class=\"headerlink\" title=\"按内容搜索更改\"></a>按内容搜索更改</h4><pre><code>  $ git log -S&#39;&lt;a term in the source&gt;&#39;\n</code></pre>\n<h4 id=\"显示特定文件随时间的变化\"><a href=\"#显示特定文件随时间的变化\" class=\"headerlink\" title=\"显示特定文件随时间的变化\"></a>显示特定文件随时间的变化</h4><pre><code>  $ git log -p &lt;file_name&gt;\n</code></pre>\n<h4 id=\"打印出很酷的日志可视化\"><a href=\"#打印出很酷的日志可视化\" class=\"headerlink\" title=\"打印出很酷的日志可视化\"></a>打印出很酷的日志可视化</h4><pre><code>  $ git log --pretty=oneline --graph --decorate --all\n</code></pre>\n<h3 id=\"Commit\"><a href=\"#Commit\" class=\"headerlink\" title=\"Commit\"></a>Commit</h3><pre><code>  $ git commit -v --amend\n  重写最后的提交信息\n</code></pre>\n<h3 id=\"忽略文件的权限变化\"><a href=\"#忽略文件的权限变化\" class=\"headerlink\" title=\"忽略文件的权限变化\"></a>忽略文件的权限变化</h3><pre><code>  git config core.fileMode false\n  不再将文件的权限变化视作改动\n</code></pre>\n<h3 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h3><h4 id=\"列出所有分支及其上游\"><a href=\"#列出所有分支及其上游\" class=\"headerlink\" title=\"列出所有分支及其上游\"></a>列出所有分支及其上游</h4><pre><code>  $ git branch -vv\n</code></pre>\n<h4 id=\"快速切换到上一个分支\"><a href=\"#快速切换到上一个分支\" class=\"headerlink\" title=\"快速切换到上一个分支\"></a>快速切换到上一个分支</h4><pre><code>  $ git checkout -\n</code></pre>\n<h4 id=\"只获取所有远程分支\"><a href=\"#只获取所有远程分支\" class=\"headerlink\" title=\"只获取所有远程分支\"></a>只获取所有远程分支</h4><pre><code>  $ git branch -r\n</code></pre>\n<h4 id=\"从另一个分支签出单个文件\"><a href=\"#从另一个分支签出单个文件\" class=\"headerlink\" title=\"从另一个分支签出单个文件\"></a>从另一个分支签出单个文件</h4><pre><code>  $ git checkout &lt;branch&gt; -- &lt;file&gt;\n</code></pre>\n<h4 id=\"删除本地存在远程不存在的分支\"><a href=\"#删除本地存在远程不存在的分支\" class=\"headerlink\" title=\"删除本地存在远程不存在的分支\"></a>删除本地存在远程不存在的分支</h4><pre><code>  git remote prune origin\n</code></pre>\n<h3 id=\"Git-别名\"><a href=\"#Git-别名\" class=\"headerlink\" title=\"Git 别名\"></a>Git 别名</h3><pre><code>  $ git config --global alias.co checkout\n\n  $ git config --global alias.br branch\n  \n  $ git config --global alias.ci commit\n  \n  $ git config --global alias.st status\n</code></pre>\n<h3 id=\"设置大小写敏感\"><a href=\"#设置大小写敏感\" class=\"headerlink\" title=\"设置大小写敏感\"></a>设置大小写敏感</h3><h4 id=\"查看git-的设置\"><a href=\"#查看git-的设置\" class=\"headerlink\" title=\"查看git 的设置\"></a>查看git 的设置</h4><pre><code>  $ git config --get core.ignorecase\n</code></pre>\n<h4 id=\"设置大小写敏感-1\"><a href=\"#设置大小写敏感-1\" class=\"headerlink\" title=\"设置大小写敏感\"></a>设置大小写敏感</h4><pre><code>  $ git config core.ignorecase false\n</code></pre>\n<h4 id=\"远程有俩相同目录，通过这种方式清除掉，然后提交记录\"><a href=\"#远程有俩相同目录，通过这种方式清除掉，然后提交记录\" class=\"headerlink\" title=\"远程有俩相同目录，通过这种方式清除掉，然后提交记录\"></a>远程有俩相同目录，通过这种方式清除掉，然后提交记录</h4><pre><code>  $ git rm -r --cached &lt;目录/文件&gt;\n</code></pre>\n<h3 id=\"撤销远程记录\"><a href=\"#撤销远程记录\" class=\"headerlink\" title=\"撤销远程记录\"></a>撤销远程记录</h3><h4 id=\"撤销一条记录\"><a href=\"#撤销一条记录\" class=\"headerlink\" title=\"撤销一条记录\"></a>撤销一条记录</h4><pre><code>  $ git reset --hard HEAD~1\n</code></pre>\n<h4 id=\"强制同步到远程仓库\"><a href=\"#强制同步到远程仓库\" class=\"headerlink\" title=\"强制同步到远程仓库\"></a>强制同步到远程仓库</h4><pre><code>  $ git push -f origin HEAD:master\n</code></pre>\n<h3 id=\"放弃本地修改内容\"><a href=\"#放弃本地修改内容\" class=\"headerlink\" title=\"放弃本地修改内容\"></a>放弃本地修改内容</h3><h4 id=\"如果有的修改以及加入暂存区的话\"><a href=\"#如果有的修改以及加入暂存区的话\" class=\"headerlink\" title=\"如果有的修改以及加入暂存区的话\"></a>如果有的修改以及加入暂存区的话</h4><pre><code>  $ git reset --hard \n</code></pre>\n<h4 id=\"还原所有修改，不会删除新增的文件\"><a href=\"#还原所有修改，不会删除新增的文件\" class=\"headerlink\" title=\"还原所有修改，不会删除新增的文件\"></a>还原所有修改，不会删除新增的文件</h4><pre><code>  $ git checkout . \n</code></pre>\n<h4 id=\"下面命令会删除新增的文件\"><a href=\"#下面命令会删除新增的文件\" class=\"headerlink\" title=\"下面命令会删除新增的文件\"></a>下面命令会删除新增的文件</h4><pre><code>  $ git clean -xdf\n</code></pre>\n<h3 id=\"获取最近一次提交的-Hash\"><a href=\"#获取最近一次提交的-Hash\" class=\"headerlink\" title=\"获取最近一次提交的 Hash\"></a>获取最近一次提交的 Hash</h3><pre><code>  $ git rev-parse HEAD # e10721cb8859b2c\n  获取短 hash\n  $ git rev-parse --short HEAD # e10721c\n</code></pre>\n<h3 id=\"删除已经合并到-master-的分支\"><a href=\"#删除已经合并到-master-的分支\" class=\"headerlink\" title=\"删除已经合并到 master 的分支\"></a>删除已经合并到 master 的分支</h3><pre><code>  $ git branch --merged master | grep -v &#39;^\\*\\|  master&#39; | xargs -n 1 git branch -d\n</code></pre>\n<h3 id=\"把-A-分支的某一个-commit，放到-B-分支上\"><a href=\"#把-A-分支的某一个-commit，放到-B-分支上\" class=\"headerlink\" title=\"把 A 分支的某一个 commit，放到 B 分支上\"></a>把 A 分支的某一个 commit，放到 B 分支上</h3><pre><code>  # 切换到 B 分支\n  $ git checkout &lt;B&gt;\n  # 将 A 分支 &lt;hash-id&gt; 的内容 pick 到 B 分支\n  $ git cherry-pick &lt;hash-id&gt;\n</code></pre>\n<h4 id=\"回到远程仓库的状态\"><a href=\"#回到远程仓库的状态\" class=\"headerlink\" title=\"回到远程仓库的状态\"></a>回到远程仓库的状态</h4><pre><code>  $ git fetch --all &amp;&amp; git reset --hard origin/master\n</code></pre>\n<h3 id=\"修改远程-Commit-记录\"><a href=\"#修改远程-Commit-记录\" class=\"headerlink\" title=\"修改远程 Commit 记录\"></a>修改远程 Commit 记录</h3><h4 id=\"表示要修改当前版本的倒数第三次状态\"><a href=\"#表示要修改当前版本的倒数第三次状态\" class=\"headerlink\" title=\"表示要修改当前版本的倒数第三次状态\"></a>表示要修改当前版本的倒数第三次状态</h4><pre><code>  $ git rebase -i HEAD~3\n</code></pre>\n<h4 id=\"将要更改的记录行首单词-pick-改为-edit\"><a href=\"#将要更改的记录行首单词-pick-改为-edit\" class=\"headerlink\" title=\"将要更改的记录行首单词 pick 改为 edit\"></a>将要更改的记录行首单词 pick 改为 edit</h4><pre><code>  pick 96dc3f9 提交 commit 描述内容 1\n  pick f1cce8a 提交 commit 描述内容 2\n  pick 6293516 提交 commit 描述内容 3\n  # Rebase eeb03a4..6293516 onto eeb03a4 \n  #                     (3 commands)\n  #\n  # Commands:\n  # p, pick = 使用提交\n  # r, reword = 使用提交，但编辑提交消息\n  # e, edit = 使用提交，但停止修改\n  # s, squash = 使用提交，但融合到先前的提交中\n  # f, fixup = 像 squash，但丢弃此提交的日志消息\n  # x, exec = 使用 shell 运行命令(该行的其余部分)\n  # d, drop = 删除提交\n\n  保存并退出，会弹出下面提示\n\n  # 您现在可以修改提交，使用\n  # \n  #   git commit --amend\n  # \n  # 对更改感到满意后，运行\n  # \n  #   git rebase --continue\n  #\n  # 1. 通过这条命令进入编辑更改 commit，保存退出\n  $ git commit --amend\n  # 2. 保存退出确认修改，继续执行下面命令, \n  $ git rebase --continue\n  # 如果修改多条记录反复执行上面两条命令直到完成所有修改\n\n  # 最后，确保没有人提交进行推送，最好不要加 -f 强制推送\n  $ git push -f origin master\n</code></pre>\n<h3 id=\"查看冲突文件列表\"><a href=\"#查看冲突文件列表\" class=\"headerlink\" title=\"查看冲突文件列表\"></a>查看冲突文件列表</h3><pre><code>  $ git diff --name-only --diff-filter=U\n</code></pre>\n<h3 id=\"关联远程分支\"><a href=\"#关联远程分支\" class=\"headerlink\" title=\"关联远程分支\"></a>关联远程分支</h3><pre><code>  $ git branch -u origin/mybranch\n  或者在 push 时加上 -u 参数\n\n  git push origin/mybranch -u\n  关联之后，git branch -vv 就可以展示关联的远程分支名了, 同时推送到远程仓库直接：git push，不需要指定远程仓库\n</code></pre>\n<h3 id=\"展示任意分支某一文件的内容\"><a href=\"#展示任意分支某一文件的内容\" class=\"headerlink\" title=\"展示任意分支某一文件的内容\"></a>展示任意分支某一文件的内容</h3><pre><code>  $ git show &lt;branch-name&gt;:&lt;file-name&gt;\n</code></pre>\n"},{"title":"h5页面调用摄像头","date":"2023-01-01T10:49:36.000Z","_content":"# h5页面调用摄像头\n\n## 调用摄像头的几个易难点\n\n1. 本地可以部署后不行\n>  navigator.mediaDevices 调用需要在 localhost,或者https 的环境下才能成功，如果是http的则将报错，无法调用成功。\n2. video 的宽高设置\n> video组件的宽高比是固定的，直接设置宽高是不能达到效果，我们需要 “object-fit: fill”, 将内容填充。这样设置的宽高才有效果。\n3. video 呈现的画面镜像问题\n> 这个需要翻转 利用 transform: rotateY(180deg)可以实现。\n4. ios 无法调用问题\n> 网上原有的方案中。在video.onloadedmetadata 方法中去调用 video.play() 可实现调起摄像头（在安卓手机上）。ios在升级后，这种方案已经无法调用了。我们需要调用 video.load() 后，延迟调用video.play() 延迟时间大概一秒左右。（底部有源码）\n5. 保存图片镜像问题\n> 利用canvas 保存video帧动画时，也会出现图片镜像问题，这时我们需要 context.scale(-1, 1) 左右镜像翻转，来实现。\n\n## vue 封装的 h5中调用摄像头代码 使用方法\n1. 引入组件（下方代码）\n\n2. 暴露方法 getVideoCameraInfo() 返回 canvas的数据，由自己处理\n\n\n### 代码 \n```vue\n<template>\n  <div>\n    <video\n      ref=\"video\"\n      id=\"videoCamera\"\n      autoPlay\n      muted\n      :width=\"videoWidth\"\n      :height=\"videoHeight\"\n      playsInline>\n    </video>\n    <canvas \n      style=\"display: none\"\n      :width=\"videoWidth\"\n      :height=\"videoHeight\"\n      id=\"canvasCamera\">\n    </canvas>\n    <div class=\"video-mark\">\n      <!-->插槽可自定义自己的遮罩层 <!-->\n      <slot name=\"mark\"></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Toast } from 'vant';\n\nexport default {\n  props: {\n    // 设置video 的宽\n    videoWidth: {\n      type: [ Number, String],\n      default: 300\n    },\n    // 设置video 的高\n    videoHeight: {\n      type: [ Number, String],\n      default: 300\n    }\n  },\n\n  mounted() {\n    // 进入页面 自动调用摄像头\n    this.initCamera();\n  },\n\n  methods: {\n    async initCamera() {\n      // 提示\n      await this.initToast('初始化...', 0)\n      // 校验兼容性\n      await this.checkCompatible()\n      // 创建video\n      await this.createVideo()\n\n    },\n\n    // 生成video\n    async createVideo() {\n      const constraints = {\n        audio: false,\n        video: {\n          width: this.videoWidth,\n          height: this.videoHeight,\n          facingMode: \"user\" // 前置优先\n        }\n      };\n      // 正常支持版本\n      navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\n        // 摄像头开启成功\n        this.$refs.video.srcObject = stream;\n        // ios 需要video load后才可以调用play\n        // 调用play 需要延迟处理\n        this.$refs.video.load()\n        setTimeout(() => {\n          this.$refs.video.play()\n          Toast.clear();\n        }, 1000);\n      }).catch(err => {\n        Toast.clear();\n        console.log('error===>', err);\n      });\n    },\n\n    // 校验兼容性\n    async checkCompatible() {\n      // 兼容性判断\n      // 旧版本浏览器可能根本不支持mediaDevices,首先设置一个空对象\n      if (navigator.mediaCapabilities === undefined) {\n        navigator.mediaCapabilities = {};\n      }\n      // 一些浏览器实现了部分mediaDevices,不能值分配一个对象\n      // 使用getUserMedia属性，就添加她\n      if (navigator.mediaDevices.getUserMedia === undefined) {\n        // eslint-disable-next-line func-names\n        navigator.mediaCapabilities.getUserMedia = function(constraints) {\n          // 首先获取现存的getUserMedia(如果存在)\n          const getUserMedia =\n            navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.getUserMedia;\n          // 有些浏览器不支持，会返回错误信息\n          // 保持接口一致\n          if (!getUserMedia) {\n            return Promise.reject(new Error(\"浏览器不支持！\"));\n          }\n          // 否则，使用Promise将调用爆炸到旧的navigator.getUserMedia\n          return new Promise((resolve, reject) => {\n            getUserMedia.call(navigator, constraints, resolve, reject);\n          });\n        };\n      }\n    },\n\n    // 获取\n    getVideoCameraInfo() {\n      // 获取 canvas 画布\n      const canvas = document.getElementById('canvasCamera');\n      const context = canvas.getContext('2d');\n\n      // 位移来做镜像翻转\n      context.translate(this.videoWidth, 0);\n      context.scale(-1, 1); // 左右镜像翻转\n      context.drawImage(this.$refs.video, 0, 0,  this.videoWidth, this.videoHeight);\n      return canvas;\n      // const image = canvas.toDataURL('image/png');\n      // return image;\n    },\n\n    async initToast(msg, duration = 0) {\n      Toast.loading({\n        duration, // 持续展示 toast\n        forbidClick: true,\n        message: msg,\n      });\n    }\n  },\n\n  beforeDestroy() {\n    // 关闭视频\n    this.$refs.video.srcObject.getTracks()[0].stop();\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.video-mark {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n}\n\nvideo {\n  display: block;\n  object-fit: fill;\n  transform: rotateY(180deg);\n  -webkit-transform: rotateY(180deg);    /* Safari 和 Chrome */\n  -moz-transform: rotateY(180deg);\n}\n</style>\n\n```\n\n## 附上压缩文件方法\n\n> 引入 npm run browser-image-compression\n\n### 使用方法\n> import imageCompression from 'browser-image-compression'\n\n```vue\n  // 获取图片base64链接\n  const options = {\n    maxSizeMB: 0.05, //压缩大小 MB\n    maxWidthOrHeight: 200, // 压缩尺寸\n    useWebWorker: true,\n    fileType: 'image/jpeg' // 文件类型\n  }\n\n const compressedFile = await imageCompression(blob, options);\n```\n","source":"_posts/h5medio.md","raw":"---\ntitle: h5页面调用摄像头\ndate: 2023-01-01 18:49:36\ntags:\n  - 技术分享\ncategories:\n  - 文章\n# cover: https://cover.png\n# feature: true\n---\n# h5页面调用摄像头\n\n## 调用摄像头的几个易难点\n\n1. 本地可以部署后不行\n>  navigator.mediaDevices 调用需要在 localhost,或者https 的环境下才能成功，如果是http的则将报错，无法调用成功。\n2. video 的宽高设置\n> video组件的宽高比是固定的，直接设置宽高是不能达到效果，我们需要 “object-fit: fill”, 将内容填充。这样设置的宽高才有效果。\n3. video 呈现的画面镜像问题\n> 这个需要翻转 利用 transform: rotateY(180deg)可以实现。\n4. ios 无法调用问题\n> 网上原有的方案中。在video.onloadedmetadata 方法中去调用 video.play() 可实现调起摄像头（在安卓手机上）。ios在升级后，这种方案已经无法调用了。我们需要调用 video.load() 后，延迟调用video.play() 延迟时间大概一秒左右。（底部有源码）\n5. 保存图片镜像问题\n> 利用canvas 保存video帧动画时，也会出现图片镜像问题，这时我们需要 context.scale(-1, 1) 左右镜像翻转，来实现。\n\n## vue 封装的 h5中调用摄像头代码 使用方法\n1. 引入组件（下方代码）\n\n2. 暴露方法 getVideoCameraInfo() 返回 canvas的数据，由自己处理\n\n\n### 代码 \n```vue\n<template>\n  <div>\n    <video\n      ref=\"video\"\n      id=\"videoCamera\"\n      autoPlay\n      muted\n      :width=\"videoWidth\"\n      :height=\"videoHeight\"\n      playsInline>\n    </video>\n    <canvas \n      style=\"display: none\"\n      :width=\"videoWidth\"\n      :height=\"videoHeight\"\n      id=\"canvasCamera\">\n    </canvas>\n    <div class=\"video-mark\">\n      <!-->插槽可自定义自己的遮罩层 <!-->\n      <slot name=\"mark\"></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Toast } from 'vant';\n\nexport default {\n  props: {\n    // 设置video 的宽\n    videoWidth: {\n      type: [ Number, String],\n      default: 300\n    },\n    // 设置video 的高\n    videoHeight: {\n      type: [ Number, String],\n      default: 300\n    }\n  },\n\n  mounted() {\n    // 进入页面 自动调用摄像头\n    this.initCamera();\n  },\n\n  methods: {\n    async initCamera() {\n      // 提示\n      await this.initToast('初始化...', 0)\n      // 校验兼容性\n      await this.checkCompatible()\n      // 创建video\n      await this.createVideo()\n\n    },\n\n    // 生成video\n    async createVideo() {\n      const constraints = {\n        audio: false,\n        video: {\n          width: this.videoWidth,\n          height: this.videoHeight,\n          facingMode: \"user\" // 前置优先\n        }\n      };\n      // 正常支持版本\n      navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\n        // 摄像头开启成功\n        this.$refs.video.srcObject = stream;\n        // ios 需要video load后才可以调用play\n        // 调用play 需要延迟处理\n        this.$refs.video.load()\n        setTimeout(() => {\n          this.$refs.video.play()\n          Toast.clear();\n        }, 1000);\n      }).catch(err => {\n        Toast.clear();\n        console.log('error===>', err);\n      });\n    },\n\n    // 校验兼容性\n    async checkCompatible() {\n      // 兼容性判断\n      // 旧版本浏览器可能根本不支持mediaDevices,首先设置一个空对象\n      if (navigator.mediaCapabilities === undefined) {\n        navigator.mediaCapabilities = {};\n      }\n      // 一些浏览器实现了部分mediaDevices,不能值分配一个对象\n      // 使用getUserMedia属性，就添加她\n      if (navigator.mediaDevices.getUserMedia === undefined) {\n        // eslint-disable-next-line func-names\n        navigator.mediaCapabilities.getUserMedia = function(constraints) {\n          // 首先获取现存的getUserMedia(如果存在)\n          const getUserMedia =\n            navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.getUserMedia;\n          // 有些浏览器不支持，会返回错误信息\n          // 保持接口一致\n          if (!getUserMedia) {\n            return Promise.reject(new Error(\"浏览器不支持！\"));\n          }\n          // 否则，使用Promise将调用爆炸到旧的navigator.getUserMedia\n          return new Promise((resolve, reject) => {\n            getUserMedia.call(navigator, constraints, resolve, reject);\n          });\n        };\n      }\n    },\n\n    // 获取\n    getVideoCameraInfo() {\n      // 获取 canvas 画布\n      const canvas = document.getElementById('canvasCamera');\n      const context = canvas.getContext('2d');\n\n      // 位移来做镜像翻转\n      context.translate(this.videoWidth, 0);\n      context.scale(-1, 1); // 左右镜像翻转\n      context.drawImage(this.$refs.video, 0, 0,  this.videoWidth, this.videoHeight);\n      return canvas;\n      // const image = canvas.toDataURL('image/png');\n      // return image;\n    },\n\n    async initToast(msg, duration = 0) {\n      Toast.loading({\n        duration, // 持续展示 toast\n        forbidClick: true,\n        message: msg,\n      });\n    }\n  },\n\n  beforeDestroy() {\n    // 关闭视频\n    this.$refs.video.srcObject.getTracks()[0].stop();\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.video-mark {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n}\n\nvideo {\n  display: block;\n  object-fit: fill;\n  transform: rotateY(180deg);\n  -webkit-transform: rotateY(180deg);    /* Safari 和 Chrome */\n  -moz-transform: rotateY(180deg);\n}\n</style>\n\n```\n\n## 附上压缩文件方法\n\n> 引入 npm run browser-image-compression\n\n### 使用方法\n> import imageCompression from 'browser-image-compression'\n\n```vue\n  // 获取图片base64链接\n  const options = {\n    maxSizeMB: 0.05, //压缩大小 MB\n    maxWidthOrHeight: 200, // 压缩尺寸\n    useWebWorker: true,\n    fileType: 'image/jpeg' // 文件类型\n  }\n\n const compressedFile = await imageCompression(blob, options);\n```\n","slug":"h5medio","published":1,"updated":"2023-06-05T10:46:14.535Z","comments":1,"layout":"post","photos":[],"link":"","_id":"climfiox9000bol9r8pr477hm","content":"<h1 id=\"h5页面调用摄像头\"><a href=\"#h5页面调用摄像头\" class=\"headerlink\" title=\"h5页面调用摄像头\"></a>h5页面调用摄像头</h1><h2 id=\"调用摄像头的几个易难点\"><a href=\"#调用摄像头的几个易难点\" class=\"headerlink\" title=\"调用摄像头的几个易难点\"></a>调用摄像头的几个易难点</h2><ol>\n<li>本地可以部署后不行<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> navigator.mediaDevices 调用需要在 localhost,或者https 的环境下才能成功，如果是http的则将报错，无法调用成功。</p></blockquote>\n</li>\n<li>video 的宽高设置<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>video组件的宽高比是固定的，直接设置宽高是不能达到效果，我们需要 “object-fit: fill”, 将内容填充。这样设置的宽高才有效果。</p></blockquote>\n</li>\n<li>video 呈现的画面镜像问题<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这个需要翻转 利用 transform: rotateY(180deg)可以实现。</p></blockquote>\n</li>\n<li>ios 无法调用问题<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>网上原有的方案中。在video.onloadedmetadata 方法中去调用 video.play() 可实现调起摄像头（在安卓手机上）。ios在升级后，这种方案已经无法调用了。我们需要调用 video.load() 后，延迟调用video.play() 延迟时间大概一秒左右。（底部有源码）</p></blockquote>\n</li>\n<li>保存图片镜像问题<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>利用canvas 保存video帧动画时，也会出现图片镜像问题，这时我们需要 context.scale(-1, 1) 左右镜像翻转，来实现。</p></blockquote>\n</li>\n</ol>\n<h2 id=\"vue-封装的-h5中调用摄像头代码-使用方法\"><a href=\"#vue-封装的-h5中调用摄像头代码-使用方法\" class=\"headerlink\" title=\"vue 封装的 h5中调用摄像头代码 使用方法\"></a>vue 封装的 h5中调用摄像头代码 使用方法</h2><ol>\n<li><p>引入组件（下方代码）</p>\n</li>\n<li><p>暴露方法 getVideoCameraInfo() 返回 canvas的数据，由自己处理</p>\n</li>\n</ol>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;video</span><br><span class=\"line\">      ref=&quot;video&quot;</span><br><span class=\"line\">      id=&quot;videoCamera&quot;</span><br><span class=\"line\">      autoPlay</span><br><span class=\"line\">      muted</span><br><span class=\"line\">      :width=&quot;videoWidth&quot;</span><br><span class=\"line\">      :height=&quot;videoHeight&quot;</span><br><span class=\"line\">      playsInline&gt;</span><br><span class=\"line\">    &lt;/video&gt;</span><br><span class=\"line\">    &lt;canvas </span><br><span class=\"line\">      style=&quot;display: none&quot;</span><br><span class=\"line\">      :width=&quot;videoWidth&quot;</span><br><span class=\"line\">      :height=&quot;videoHeight&quot;</span><br><span class=\"line\">      id=&quot;canvasCamera&quot;&gt;</span><br><span class=\"line\">    &lt;/canvas&gt;</span><br><span class=\"line\">    &lt;div class=&quot;video-mark&quot;&gt;</span><br><span class=\"line\">      &lt;!--&gt;插槽可自定义自己的遮罩层 &lt;!--&gt;</span><br><span class=\"line\">      &lt;slot name=&quot;mark&quot;&gt;&lt;/slot&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import &#123; Toast &#125; from &#x27;vant&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    // 设置video 的宽</span><br><span class=\"line\">    videoWidth: &#123;</span><br><span class=\"line\">      type: [ Number, String],</span><br><span class=\"line\">      default: 300</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 设置video 的高</span><br><span class=\"line\">    videoHeight: &#123;</span><br><span class=\"line\">      type: [ Number, String],</span><br><span class=\"line\">      default: 300</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    // 进入页面 自动调用摄像头</span><br><span class=\"line\">    this.initCamera();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    async initCamera() &#123;</span><br><span class=\"line\">      // 提示</span><br><span class=\"line\">      await this.initToast(&#x27;初始化...&#x27;, 0)</span><br><span class=\"line\">      // 校验兼容性</span><br><span class=\"line\">      await this.checkCompatible()</span><br><span class=\"line\">      // 创建video</span><br><span class=\"line\">      await this.createVideo()</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 生成video</span><br><span class=\"line\">    async createVideo() &#123;</span><br><span class=\"line\">      const constraints = &#123;</span><br><span class=\"line\">        audio: false,</span><br><span class=\"line\">        video: &#123;</span><br><span class=\"line\">          width: this.videoWidth,</span><br><span class=\"line\">          height: this.videoHeight,</span><br><span class=\"line\">          facingMode: &quot;user&quot; // 前置优先</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      // 正常支持版本</span><br><span class=\"line\">      navigator.mediaDevices.getUserMedia(constraints).then((stream) =&gt; &#123;</span><br><span class=\"line\">        // 摄像头开启成功</span><br><span class=\"line\">        this.$refs.video.srcObject = stream;</span><br><span class=\"line\">        // ios 需要video load后才可以调用play</span><br><span class=\"line\">        // 调用play 需要延迟处理</span><br><span class=\"line\">        this.$refs.video.load()</span><br><span class=\"line\">        setTimeout(() =&gt; &#123;</span><br><span class=\"line\">          this.$refs.video.play()</span><br><span class=\"line\">          Toast.clear();</span><br><span class=\"line\">        &#125;, 1000);</span><br><span class=\"line\">      &#125;).catch(err =&gt; &#123;</span><br><span class=\"line\">        Toast.clear();</span><br><span class=\"line\">        console.log(&#x27;error===&gt;&#x27;, err);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 校验兼容性</span><br><span class=\"line\">    async checkCompatible() &#123;</span><br><span class=\"line\">      // 兼容性判断</span><br><span class=\"line\">      // 旧版本浏览器可能根本不支持mediaDevices,首先设置一个空对象</span><br><span class=\"line\">      if (navigator.mediaCapabilities === undefined) &#123;</span><br><span class=\"line\">        navigator.mediaCapabilities = &#123;&#125;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      // 一些浏览器实现了部分mediaDevices,不能值分配一个对象</span><br><span class=\"line\">      // 使用getUserMedia属性，就添加她</span><br><span class=\"line\">      if (navigator.mediaDevices.getUserMedia === undefined) &#123;</span><br><span class=\"line\">        // eslint-disable-next-line func-names</span><br><span class=\"line\">        navigator.mediaCapabilities.getUserMedia = function(constraints) &#123;</span><br><span class=\"line\">          // 首先获取现存的getUserMedia(如果存在)</span><br><span class=\"line\">          const getUserMedia =</span><br><span class=\"line\">            navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.getUserMedia;</span><br><span class=\"line\">          // 有些浏览器不支持，会返回错误信息</span><br><span class=\"line\">          // 保持接口一致</span><br><span class=\"line\">          if (!getUserMedia) &#123;</span><br><span class=\"line\">            return Promise.reject(new Error(&quot;浏览器不支持！&quot;));</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          // 否则，使用Promise将调用爆炸到旧的navigator.getUserMedia</span><br><span class=\"line\">          return new Promise((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">            getUserMedia.call(navigator, constraints, resolve, reject);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 获取</span><br><span class=\"line\">    getVideoCameraInfo() &#123;</span><br><span class=\"line\">      // 获取 canvas 画布</span><br><span class=\"line\">      const canvas = document.getElementById(&#x27;canvasCamera&#x27;);</span><br><span class=\"line\">      const context = canvas.getContext(&#x27;2d&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">      // 位移来做镜像翻转</span><br><span class=\"line\">      context.translate(this.videoWidth, 0);</span><br><span class=\"line\">      context.scale(-1, 1); // 左右镜像翻转</span><br><span class=\"line\">      context.drawImage(this.$refs.video, 0, 0,  this.videoWidth, this.videoHeight);</span><br><span class=\"line\">      return canvas;</span><br><span class=\"line\">      // const image = canvas.toDataURL(&#x27;image/png&#x27;);</span><br><span class=\"line\">      // return image;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    async initToast(msg, duration = 0) &#123;</span><br><span class=\"line\">      Toast.loading(&#123;</span><br><span class=\"line\">        duration, // 持续展示 toast</span><br><span class=\"line\">        forbidClick: true,</span><br><span class=\"line\">        message: msg,</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  beforeDestroy() &#123;</span><br><span class=\"line\">    // 关闭视频</span><br><span class=\"line\">    this.$refs.video.srcObject.getTracks()[0].stop();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">.video-mark &#123;</span><br><span class=\"line\">  width: 100%;</span><br><span class=\"line\">  height: 100%;</span><br><span class=\"line\">  position: fixed;</span><br><span class=\"line\">  top: 0;</span><br><span class=\"line\">  left: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">video &#123;</span><br><span class=\"line\">  display: block;</span><br><span class=\"line\">  object-fit: fill;</span><br><span class=\"line\">  transform: rotateY(180deg);</span><br><span class=\"line\">  -webkit-transform: rotateY(180deg);    /* Safari 和 Chrome */</span><br><span class=\"line\">  -moz-transform: rotateY(180deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"附上压缩文件方法\"><a href=\"#附上压缩文件方法\" class=\"headerlink\" title=\"附上压缩文件方法\"></a>附上压缩文件方法</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>引入 npm run browser-image-compression</p></blockquote>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>import imageCompression from ‘browser-image-compression’</p></blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> // 获取图片base64链接</span><br><span class=\"line\"> const options = &#123;</span><br><span class=\"line\">   maxSizeMB: 0.05, //压缩大小 MB</span><br><span class=\"line\">   maxWidthOrHeight: 200, // 压缩尺寸</span><br><span class=\"line\">   useWebWorker: true,</span><br><span class=\"line\">   fileType: &#x27;image/jpeg&#x27; // 文件类型</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">const compressedFile = await imageCompression(blob, options);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"h5页面调用摄像头\"><a href=\"#h5页面调用摄像头\" class=\"headerlink\" title=\"h5页面调用摄像头\"></a>h5页面调用摄像头</h1><h2 id=\"调用摄像头的几个易难点\"><a href=\"#调用摄像头的几个易难点\" class=\"headerlink\" title=\"调用摄像头的几个易难点\"></a>调用摄像头的几个易难点</h2><ol>\n<li>本地可以部署后不行<blockquote>\n<p> navigator.mediaDevices 调用需要在 localhost,或者https 的环境下才能成功，如果是http的则将报错，无法调用成功。</p>\n</blockquote>\n</li>\n<li>video 的宽高设置<blockquote>\n<p>video组件的宽高比是固定的，直接设置宽高是不能达到效果，我们需要 “object-fit: fill”, 将内容填充。这样设置的宽高才有效果。</p>\n</blockquote>\n</li>\n<li>video 呈现的画面镜像问题<blockquote>\n<p>这个需要翻转 利用 transform: rotateY(180deg)可以实现。</p>\n</blockquote>\n</li>\n<li>ios 无法调用问题<blockquote>\n<p>网上原有的方案中。在video.onloadedmetadata 方法中去调用 video.play() 可实现调起摄像头（在安卓手机上）。ios在升级后，这种方案已经无法调用了。我们需要调用 video.load() 后，延迟调用video.play() 延迟时间大概一秒左右。（底部有源码）</p>\n</blockquote>\n</li>\n<li>保存图片镜像问题<blockquote>\n<p>利用canvas 保存video帧动画时，也会出现图片镜像问题，这时我们需要 context.scale(-1, 1) 左右镜像翻转，来实现。</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"vue-封装的-h5中调用摄像头代码-使用方法\"><a href=\"#vue-封装的-h5中调用摄像头代码-使用方法\" class=\"headerlink\" title=\"vue 封装的 h5中调用摄像头代码 使用方法\"></a>vue 封装的 h5中调用摄像头代码 使用方法</h2><ol>\n<li><p>引入组件（下方代码）</p>\n</li>\n<li><p>暴露方法 getVideoCameraInfo() 返回 canvas的数据，由自己处理</p>\n</li>\n</ol>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;video</span><br><span class=\"line\">      ref=&quot;video&quot;</span><br><span class=\"line\">      id=&quot;videoCamera&quot;</span><br><span class=\"line\">      autoPlay</span><br><span class=\"line\">      muted</span><br><span class=\"line\">      :width=&quot;videoWidth&quot;</span><br><span class=\"line\">      :height=&quot;videoHeight&quot;</span><br><span class=\"line\">      playsInline&gt;</span><br><span class=\"line\">    &lt;/video&gt;</span><br><span class=\"line\">    &lt;canvas </span><br><span class=\"line\">      style=&quot;display: none&quot;</span><br><span class=\"line\">      :width=&quot;videoWidth&quot;</span><br><span class=\"line\">      :height=&quot;videoHeight&quot;</span><br><span class=\"line\">      id=&quot;canvasCamera&quot;&gt;</span><br><span class=\"line\">    &lt;/canvas&gt;</span><br><span class=\"line\">    &lt;div class=&quot;video-mark&quot;&gt;</span><br><span class=\"line\">      &lt;!--&gt;插槽可自定义自己的遮罩层 &lt;!--&gt;</span><br><span class=\"line\">      &lt;slot name=&quot;mark&quot;&gt;&lt;/slot&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import &#123; Toast &#125; from &#x27;vant&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    // 设置video 的宽</span><br><span class=\"line\">    videoWidth: &#123;</span><br><span class=\"line\">      type: [ Number, String],</span><br><span class=\"line\">      default: 300</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 设置video 的高</span><br><span class=\"line\">    videoHeight: &#123;</span><br><span class=\"line\">      type: [ Number, String],</span><br><span class=\"line\">      default: 300</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    // 进入页面 自动调用摄像头</span><br><span class=\"line\">    this.initCamera();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    async initCamera() &#123;</span><br><span class=\"line\">      // 提示</span><br><span class=\"line\">      await this.initToast(&#x27;初始化...&#x27;, 0)</span><br><span class=\"line\">      // 校验兼容性</span><br><span class=\"line\">      await this.checkCompatible()</span><br><span class=\"line\">      // 创建video</span><br><span class=\"line\">      await this.createVideo()</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 生成video</span><br><span class=\"line\">    async createVideo() &#123;</span><br><span class=\"line\">      const constraints = &#123;</span><br><span class=\"line\">        audio: false,</span><br><span class=\"line\">        video: &#123;</span><br><span class=\"line\">          width: this.videoWidth,</span><br><span class=\"line\">          height: this.videoHeight,</span><br><span class=\"line\">          facingMode: &quot;user&quot; // 前置优先</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      // 正常支持版本</span><br><span class=\"line\">      navigator.mediaDevices.getUserMedia(constraints).then((stream) =&gt; &#123;</span><br><span class=\"line\">        // 摄像头开启成功</span><br><span class=\"line\">        this.$refs.video.srcObject = stream;</span><br><span class=\"line\">        // ios 需要video load后才可以调用play</span><br><span class=\"line\">        // 调用play 需要延迟处理</span><br><span class=\"line\">        this.$refs.video.load()</span><br><span class=\"line\">        setTimeout(() =&gt; &#123;</span><br><span class=\"line\">          this.$refs.video.play()</span><br><span class=\"line\">          Toast.clear();</span><br><span class=\"line\">        &#125;, 1000);</span><br><span class=\"line\">      &#125;).catch(err =&gt; &#123;</span><br><span class=\"line\">        Toast.clear();</span><br><span class=\"line\">        console.log(&#x27;error===&gt;&#x27;, err);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 校验兼容性</span><br><span class=\"line\">    async checkCompatible() &#123;</span><br><span class=\"line\">      // 兼容性判断</span><br><span class=\"line\">      // 旧版本浏览器可能根本不支持mediaDevices,首先设置一个空对象</span><br><span class=\"line\">      if (navigator.mediaCapabilities === undefined) &#123;</span><br><span class=\"line\">        navigator.mediaCapabilities = &#123;&#125;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      // 一些浏览器实现了部分mediaDevices,不能值分配一个对象</span><br><span class=\"line\">      // 使用getUserMedia属性，就添加她</span><br><span class=\"line\">      if (navigator.mediaDevices.getUserMedia === undefined) &#123;</span><br><span class=\"line\">        // eslint-disable-next-line func-names</span><br><span class=\"line\">        navigator.mediaCapabilities.getUserMedia = function(constraints) &#123;</span><br><span class=\"line\">          // 首先获取现存的getUserMedia(如果存在)</span><br><span class=\"line\">          const getUserMedia =</span><br><span class=\"line\">            navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.getUserMedia;</span><br><span class=\"line\">          // 有些浏览器不支持，会返回错误信息</span><br><span class=\"line\">          // 保持接口一致</span><br><span class=\"line\">          if (!getUserMedia) &#123;</span><br><span class=\"line\">            return Promise.reject(new Error(&quot;浏览器不支持！&quot;));</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          // 否则，使用Promise将调用爆炸到旧的navigator.getUserMedia</span><br><span class=\"line\">          return new Promise((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">            getUserMedia.call(navigator, constraints, resolve, reject);</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    // 获取</span><br><span class=\"line\">    getVideoCameraInfo() &#123;</span><br><span class=\"line\">      // 获取 canvas 画布</span><br><span class=\"line\">      const canvas = document.getElementById(&#x27;canvasCamera&#x27;);</span><br><span class=\"line\">      const context = canvas.getContext(&#x27;2d&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">      // 位移来做镜像翻转</span><br><span class=\"line\">      context.translate(this.videoWidth, 0);</span><br><span class=\"line\">      context.scale(-1, 1); // 左右镜像翻转</span><br><span class=\"line\">      context.drawImage(this.$refs.video, 0, 0,  this.videoWidth, this.videoHeight);</span><br><span class=\"line\">      return canvas;</span><br><span class=\"line\">      // const image = canvas.toDataURL(&#x27;image/png&#x27;);</span><br><span class=\"line\">      // return image;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    async initToast(msg, duration = 0) &#123;</span><br><span class=\"line\">      Toast.loading(&#123;</span><br><span class=\"line\">        duration, // 持续展示 toast</span><br><span class=\"line\">        forbidClick: true,</span><br><span class=\"line\">        message: msg,</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  beforeDestroy() &#123;</span><br><span class=\"line\">    // 关闭视频</span><br><span class=\"line\">    this.$refs.video.srcObject.getTracks()[0].stop();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class=\"line\">.video-mark &#123;</span><br><span class=\"line\">  width: 100%;</span><br><span class=\"line\">  height: 100%;</span><br><span class=\"line\">  position: fixed;</span><br><span class=\"line\">  top: 0;</span><br><span class=\"line\">  left: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">video &#123;</span><br><span class=\"line\">  display: block;</span><br><span class=\"line\">  object-fit: fill;</span><br><span class=\"line\">  transform: rotateY(180deg);</span><br><span class=\"line\">  -webkit-transform: rotateY(180deg);    /* Safari 和 Chrome */</span><br><span class=\"line\">  -moz-transform: rotateY(180deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"附上压缩文件方法\"><a href=\"#附上压缩文件方法\" class=\"headerlink\" title=\"附上压缩文件方法\"></a>附上压缩文件方法</h2><blockquote>\n<p>引入 npm run browser-image-compression</p>\n</blockquote>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><blockquote>\n<p>import imageCompression from ‘browser-image-compression’</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> // 获取图片base64链接</span><br><span class=\"line\"> const options = &#123;</span><br><span class=\"line\">   maxSizeMB: 0.05, //压缩大小 MB</span><br><span class=\"line\">   maxWidthOrHeight: 200, // 压缩尺寸</span><br><span class=\"line\">   useWebWorker: true,</span><br><span class=\"line\">   fileType: &#x27;image/jpeg&#x27; // 文件类型</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">const compressedFile = await imageCompression(blob, options);</span><br></pre></td></tr></table></figure>\n"},{"title":"基于van-swipe 进行的定制开发","date":"2023-06-15T10:49:36.000Z","_content":"\n# 基于van-swipe 进行的定制开发\n\n> 没改改其实现逻辑，只是对页面样式进行个性化\n\n## swiper 的实现逻辑\n\n> **说白了就是左右移动或者上下移动，利用translateX 或者translateY，固定显示区域，整个内容左右或上下移动。添加一些动画效果即可实现。**\n> **原理简单为什么不自己开发。主要原因在于进场动画，滑动效果动画，以及滑动边界判断等需要处理。能处理好这些。自己开发也是一个不错的选择。**\n\n\n## 如何实现 swiper 左中右 三块布局\n\n### 效果图\n![效果图](./img/tu01.png)\n\n离得最近的是van-swipe的固定宽度这个模版\n![van-swiper](./img/tu03.png)\n\n我们只要想办法实现如下效果\n\n![van-swiper](./img/tu02.png)\n\n\n## 实现步骤逻辑\n\n1. 构建van-swipe，设置swiper-item宽度（设置宽度值应小于页面宽度）\n\n2. 滑动后使其移动的距离小于设置宽度 公式： 移动距离 = - ( item宽度 -（屏幕宽度 - item宽度）/ 2) \n\n3. 当item是显示第一个时，将最后一个item移到第一个前面，当item是显示最后一个时，将第一个item移到最后。\n\n### 主要代码块\n\n##### 设置滑动后处理样式\n``` vue\n\n     // 设置样式\n    setSwiperStyle(index) {\n      this.$nextTick(() => {\n        const countItem = document.getElementsByClassName('user-card-waring')\n        const swiperItem = document.getElementsByClassName('van-swipe-item')\n        // 修改 选中样式\n        for (let i = 0; i < countItem.length; i++) {\n          countItem[i].classList.remove('current')\n          if (index == i) {\n            countItem[i].classList.add('current')\n          }\n        }\n        // 当前是第一个元素时\n        // 需将最后一个item元素前移\n        // 移除原有第一个元素的的style样式\n        if (index == 0) {\n          swiperItem[0].style.removeProperty('transform')\n          swiperItem[swiperItem.length - 1].style.transform = `translateX(${-swiperItem.length * this.width}px)`\n        } else if (index == swiperItem.length - 1) {\n          // 是最后一个元素时\n          // 需将第一个元素item 后移\n          // 移除原有的最后一个元素的style样式\n          swiperItem[swiperItem.length - 1].style.removeProperty('transform')\n          swiperItem[0].style.transform = `translateX(${swiperItem.length * this.width}px)`\n        } else {\n          // 不是第一个和最后一个元素时\n          // 需将第一个和最后一个元素item 归位\n          // 移除样式即可\n          swiperItem[0].style.removeProperty('transform')\n          swiperItem[swiperItem.length - 1].style.removeProperty('transform')\n        }\n        // 父组件移动距离\n        const dom = document.getElementsByClassName('van-swipe__track')\n        dom[0].style.transform = `translateX(${index * -this.width + this.space / 2}px)`\n      })\n    }\n```\n\n##### 自定义监听touch事件\n##### 用来处理覆盖van-swiper的样式\n```vue\n    addEventListener() {\n      // 监听 touchend 事件 用于处理滑块样式\n      const span = document.getElementsByClassName('van-swipe__track')\n      span[0].addEventListener('touchend', () => {\n        this.setSwiperStyle(this.selectIndex)\n      })\n    },\n\n```\n\n##### 监听移动事件\n```vue \n\n   onChange(index) {\n      const countItem = document.getElementsByClassName('user-card-waring')\n      // 判断移动方向\n      // 主要目的是为加载对应卡片内容提供一个进场动画\n      let moveDirection = 'right'\n      if (this.selectIndex > index) {\n        moveDirection = 'left'\n      }\n      // 当前选择的是最后一个item 并且上一次item是第一个。则依然是向左移动\n      if (countItem.length - 1 == index && this.selectIndex == 0) {\n        moveDirection = 'left'\n      }\n      // 当前是第一个item，并且上一次是最后一个item,则移动方向是向右移动\n      if (index == 0 && this.selectIndex == countItem.length - 1) {\n        moveDirection = 'right'\n      }\n      this.setSwiperStyle(index)\n      this.selectIndex = index\n      this.$emit('onChange', { index: index, moveDirection })\n    },\n\n```\n","source":"_posts/swiper.md","raw":"---\ntitle: 基于van-swipe 进行的定制开发\ndate: 2023-06-15 18:49:36\ntags:\n  - 技术分享\ncategories:\n  - 文章\n# cover: https://cover.png\n# feature: true\n---\n\n# 基于van-swipe 进行的定制开发\n\n> 没改改其实现逻辑，只是对页面样式进行个性化\n\n## swiper 的实现逻辑\n\n> **说白了就是左右移动或者上下移动，利用translateX 或者translateY，固定显示区域，整个内容左右或上下移动。添加一些动画效果即可实现。**\n> **原理简单为什么不自己开发。主要原因在于进场动画，滑动效果动画，以及滑动边界判断等需要处理。能处理好这些。自己开发也是一个不错的选择。**\n\n\n## 如何实现 swiper 左中右 三块布局\n\n### 效果图\n![效果图](./img/tu01.png)\n\n离得最近的是van-swipe的固定宽度这个模版\n![van-swiper](./img/tu03.png)\n\n我们只要想办法实现如下效果\n\n![van-swiper](./img/tu02.png)\n\n\n## 实现步骤逻辑\n\n1. 构建van-swipe，设置swiper-item宽度（设置宽度值应小于页面宽度）\n\n2. 滑动后使其移动的距离小于设置宽度 公式： 移动距离 = - ( item宽度 -（屏幕宽度 - item宽度）/ 2) \n\n3. 当item是显示第一个时，将最后一个item移到第一个前面，当item是显示最后一个时，将第一个item移到最后。\n\n### 主要代码块\n\n##### 设置滑动后处理样式\n``` vue\n\n     // 设置样式\n    setSwiperStyle(index) {\n      this.$nextTick(() => {\n        const countItem = document.getElementsByClassName('user-card-waring')\n        const swiperItem = document.getElementsByClassName('van-swipe-item')\n        // 修改 选中样式\n        for (let i = 0; i < countItem.length; i++) {\n          countItem[i].classList.remove('current')\n          if (index == i) {\n            countItem[i].classList.add('current')\n          }\n        }\n        // 当前是第一个元素时\n        // 需将最后一个item元素前移\n        // 移除原有第一个元素的的style样式\n        if (index == 0) {\n          swiperItem[0].style.removeProperty('transform')\n          swiperItem[swiperItem.length - 1].style.transform = `translateX(${-swiperItem.length * this.width}px)`\n        } else if (index == swiperItem.length - 1) {\n          // 是最后一个元素时\n          // 需将第一个元素item 后移\n          // 移除原有的最后一个元素的style样式\n          swiperItem[swiperItem.length - 1].style.removeProperty('transform')\n          swiperItem[0].style.transform = `translateX(${swiperItem.length * this.width}px)`\n        } else {\n          // 不是第一个和最后一个元素时\n          // 需将第一个和最后一个元素item 归位\n          // 移除样式即可\n          swiperItem[0].style.removeProperty('transform')\n          swiperItem[swiperItem.length - 1].style.removeProperty('transform')\n        }\n        // 父组件移动距离\n        const dom = document.getElementsByClassName('van-swipe__track')\n        dom[0].style.transform = `translateX(${index * -this.width + this.space / 2}px)`\n      })\n    }\n```\n\n##### 自定义监听touch事件\n##### 用来处理覆盖van-swiper的样式\n```vue\n    addEventListener() {\n      // 监听 touchend 事件 用于处理滑块样式\n      const span = document.getElementsByClassName('van-swipe__track')\n      span[0].addEventListener('touchend', () => {\n        this.setSwiperStyle(this.selectIndex)\n      })\n    },\n\n```\n\n##### 监听移动事件\n```vue \n\n   onChange(index) {\n      const countItem = document.getElementsByClassName('user-card-waring')\n      // 判断移动方向\n      // 主要目的是为加载对应卡片内容提供一个进场动画\n      let moveDirection = 'right'\n      if (this.selectIndex > index) {\n        moveDirection = 'left'\n      }\n      // 当前选择的是最后一个item 并且上一次item是第一个。则依然是向左移动\n      if (countItem.length - 1 == index && this.selectIndex == 0) {\n        moveDirection = 'left'\n      }\n      // 当前是第一个item，并且上一次是最后一个item,则移动方向是向右移动\n      if (index == 0 && this.selectIndex == countItem.length - 1) {\n        moveDirection = 'right'\n      }\n      this.setSwiperStyle(index)\n      this.selectIndex = index\n      this.$emit('onChange', { index: index, moveDirection })\n    },\n\n```\n","slug":"swiper","published":1,"updated":"2023-06-05T10:46:14.536Z","comments":1,"layout":"post","photos":[],"link":"","_id":"climfioxb000col9rdy8tfood","content":"<h1 id=\"基于van-swipe-进行的定制开发\"><a href=\"#基于van-swipe-进行的定制开发\" class=\"headerlink\" title=\"基于van-swipe 进行的定制开发\"></a>基于van-swipe 进行的定制开发</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>没改改其实现逻辑，只是对页面样式进行个性化</p></blockquote>\n<h2 id=\"swiper-的实现逻辑\"><a href=\"#swiper-的实现逻辑\" class=\"headerlink\" title=\"swiper 的实现逻辑\"></a>swiper 的实现逻辑</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>说白了就是左右移动或者上下移动，利用translateX 或者translateY，固定显示区域，整个内容左右或上下移动。添加一些动画效果即可实现。</strong><br><strong>原理简单为什么不自己开发。主要原因在于进场动画，滑动效果动画，以及滑动边界判断等需要处理。能处理好这些。自己开发也是一个不错的选择。</strong></p></blockquote>\n<h2 id=\"如何实现-swiper-左中右-三块布局\"><a href=\"#如何实现-swiper-左中右-三块布局\" class=\"headerlink\" title=\"如何实现 swiper 左中右 三块布局\"></a>如何实现 swiper 左中右 三块布局</h2><h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p><img src=\"./img/tu01.png\" alt=\"效果图\"></p>\n<p>离得最近的是van-swipe的固定宽度这个模版<br><img src=\"./img/tu03.png\" alt=\"van-swiper\"></p>\n<p>我们只要想办法实现如下效果</p>\n<p><img src=\"./img/tu02.png\" alt=\"van-swiper\"></p>\n<h2 id=\"实现步骤逻辑\"><a href=\"#实现步骤逻辑\" class=\"headerlink\" title=\"实现步骤逻辑\"></a>实现步骤逻辑</h2><ol>\n<li><p>构建van-swipe，设置swiper-item宽度（设置宽度值应小于页面宽度）</p>\n</li>\n<li><p>滑动后使其移动的距离小于设置宽度 公式： 移动距离 &#x3D; - ( item宽度 -（屏幕宽度 - item宽度）&#x2F; 2) </p>\n</li>\n<li><p>当item是显示第一个时，将最后一个item移到第一个前面，当item是显示最后一个时，将第一个item移到最后。</p>\n</li>\n</ol>\n<h3 id=\"主要代码块\"><a href=\"#主要代码块\" class=\"headerlink\" title=\"主要代码块\"></a>主要代码块</h3><h5 id=\"设置滑动后处理样式\"><a href=\"#设置滑动后处理样式\" class=\"headerlink\" title=\"设置滑动后处理样式\"></a>设置滑动后处理样式</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"> // 设置样式</span><br><span class=\"line\">setSwiperStyle(index) &#123;</span><br><span class=\"line\">  this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">    const countItem = document.getElementsByClassName(&#x27;user-card-waring&#x27;)</span><br><span class=\"line\">    const swiperItem = document.getElementsByClassName(&#x27;van-swipe-item&#x27;)</span><br><span class=\"line\">    // 修改 选中样式</span><br><span class=\"line\">    for (let i = 0; i &lt; countItem.length; i++) &#123;</span><br><span class=\"line\">      countItem[i].classList.remove(&#x27;current&#x27;)</span><br><span class=\"line\">      if (index == i) &#123;</span><br><span class=\"line\">        countItem[i].classList.add(&#x27;current&#x27;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // 当前是第一个元素时</span><br><span class=\"line\">    // 需将最后一个item元素前移</span><br><span class=\"line\">    // 移除原有第一个元素的的style样式</span><br><span class=\"line\">    if (index == 0) &#123;</span><br><span class=\"line\">      swiperItem[0].style.removeProperty(&#x27;transform&#x27;)</span><br><span class=\"line\">      swiperItem[swiperItem.length - 1].style.transform = `translateX($&#123;-swiperItem.length * this.width&#125;px)`</span><br><span class=\"line\">    &#125; else if (index == swiperItem.length - 1) &#123;</span><br><span class=\"line\">      // 是最后一个元素时</span><br><span class=\"line\">      // 需将第一个元素item 后移</span><br><span class=\"line\">      // 移除原有的最后一个元素的style样式</span><br><span class=\"line\">      swiperItem[swiperItem.length - 1].style.removeProperty(&#x27;transform&#x27;)</span><br><span class=\"line\">      swiperItem[0].style.transform = `translateX($&#123;swiperItem.length * this.width&#125;px)`</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      // 不是第一个和最后一个元素时</span><br><span class=\"line\">      // 需将第一个和最后一个元素item 归位</span><br><span class=\"line\">      // 移除样式即可</span><br><span class=\"line\">      swiperItem[0].style.removeProperty(&#x27;transform&#x27;)</span><br><span class=\"line\">      swiperItem[swiperItem.length - 1].style.removeProperty(&#x27;transform&#x27;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // 父组件移动距离</span><br><span class=\"line\">    const dom = document.getElementsByClassName(&#x27;van-swipe__track&#x27;)</span><br><span class=\"line\">    dom[0].style.transform = `translateX($&#123;index * -this.width + this.space / 2&#125;px)`</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"自定义监听touch事件\"><a href=\"#自定义监听touch事件\" class=\"headerlink\" title=\"自定义监听touch事件\"></a>自定义监听touch事件</h5><h5 id=\"用来处理覆盖van-swiper的样式\"><a href=\"#用来处理覆盖van-swiper的样式\" class=\"headerlink\" title=\"用来处理覆盖van-swiper的样式\"></a>用来处理覆盖van-swiper的样式</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addEventListener() &#123;</span><br><span class=\"line\">  // 监听 touchend 事件 用于处理滑块样式</span><br><span class=\"line\">  const span = document.getElementsByClassName(&#x27;van-swipe__track&#x27;)</span><br><span class=\"line\">  span[0].addEventListener(&#x27;touchend&#x27;, () =&gt; &#123;</span><br><span class=\"line\">    this.setSwiperStyle(this.selectIndex)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"监听移动事件\"><a href=\"#监听移动事件\" class=\"headerlink\" title=\"监听移动事件\"></a>监听移动事件</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">onChange(index) &#123;</span><br><span class=\"line\">   const countItem = document.getElementsByClassName(&#x27;user-card-waring&#x27;)</span><br><span class=\"line\">   // 判断移动方向</span><br><span class=\"line\">   // 主要目的是为加载对应卡片内容提供一个进场动画</span><br><span class=\"line\">   let moveDirection = &#x27;right&#x27;</span><br><span class=\"line\">   if (this.selectIndex &gt; index) &#123;</span><br><span class=\"line\">     moveDirection = &#x27;left&#x27;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   // 当前选择的是最后一个item 并且上一次item是第一个。则依然是向左移动</span><br><span class=\"line\">   if (countItem.length - 1 == index &amp;&amp; this.selectIndex == 0) &#123;</span><br><span class=\"line\">     moveDirection = &#x27;left&#x27;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   // 当前是第一个item，并且上一次是最后一个item,则移动方向是向右移动</span><br><span class=\"line\">   if (index == 0 &amp;&amp; this.selectIndex == countItem.length - 1) &#123;</span><br><span class=\"line\">     moveDirection = &#x27;right&#x27;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   this.setSwiperStyle(index)</span><br><span class=\"line\">   this.selectIndex = index</span><br><span class=\"line\">   this.$emit(&#x27;onChange&#x27;, &#123; index: index, moveDirection &#125;)</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"基于van-swipe-进行的定制开发\"><a href=\"#基于van-swipe-进行的定制开发\" class=\"headerlink\" title=\"基于van-swipe 进行的定制开发\"></a>基于van-swipe 进行的定制开发</h1><blockquote>\n<p>没改改其实现逻辑，只是对页面样式进行个性化</p>\n</blockquote>\n<h2 id=\"swiper-的实现逻辑\"><a href=\"#swiper-的实现逻辑\" class=\"headerlink\" title=\"swiper 的实现逻辑\"></a>swiper 的实现逻辑</h2><blockquote>\n<p><strong>说白了就是左右移动或者上下移动，利用translateX 或者translateY，固定显示区域，整个内容左右或上下移动。添加一些动画效果即可实现。</strong><br><strong>原理简单为什么不自己开发。主要原因在于进场动画，滑动效果动画，以及滑动边界判断等需要处理。能处理好这些。自己开发也是一个不错的选择。</strong></p>\n</blockquote>\n<h2 id=\"如何实现-swiper-左中右-三块布局\"><a href=\"#如何实现-swiper-左中右-三块布局\" class=\"headerlink\" title=\"如何实现 swiper 左中右 三块布局\"></a>如何实现 swiper 左中右 三块布局</h2><h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p><img src=\"./img/tu01.png\" alt=\"效果图\"></p>\n<p>离得最近的是van-swipe的固定宽度这个模版<br><img src=\"./img/tu03.png\" alt=\"van-swiper\"></p>\n<p>我们只要想办法实现如下效果</p>\n<p><img src=\"./img/tu02.png\" alt=\"van-swiper\"></p>\n<h2 id=\"实现步骤逻辑\"><a href=\"#实现步骤逻辑\" class=\"headerlink\" title=\"实现步骤逻辑\"></a>实现步骤逻辑</h2><ol>\n<li><p>构建van-swipe，设置swiper-item宽度（设置宽度值应小于页面宽度）</p>\n</li>\n<li><p>滑动后使其移动的距离小于设置宽度 公式： 移动距离 &#x3D; - ( item宽度 -（屏幕宽度 - item宽度）&#x2F; 2) </p>\n</li>\n<li><p>当item是显示第一个时，将最后一个item移到第一个前面，当item是显示最后一个时，将第一个item移到最后。</p>\n</li>\n</ol>\n<h3 id=\"主要代码块\"><a href=\"#主要代码块\" class=\"headerlink\" title=\"主要代码块\"></a>主要代码块</h3><h5 id=\"设置滑动后处理样式\"><a href=\"#设置滑动后处理样式\" class=\"headerlink\" title=\"设置滑动后处理样式\"></a>设置滑动后处理样式</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"> // 设置样式</span><br><span class=\"line\">setSwiperStyle(index) &#123;</span><br><span class=\"line\">  this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">    const countItem = document.getElementsByClassName(&#x27;user-card-waring&#x27;)</span><br><span class=\"line\">    const swiperItem = document.getElementsByClassName(&#x27;van-swipe-item&#x27;)</span><br><span class=\"line\">    // 修改 选中样式</span><br><span class=\"line\">    for (let i = 0; i &lt; countItem.length; i++) &#123;</span><br><span class=\"line\">      countItem[i].classList.remove(&#x27;current&#x27;)</span><br><span class=\"line\">      if (index == i) &#123;</span><br><span class=\"line\">        countItem[i].classList.add(&#x27;current&#x27;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // 当前是第一个元素时</span><br><span class=\"line\">    // 需将最后一个item元素前移</span><br><span class=\"line\">    // 移除原有第一个元素的的style样式</span><br><span class=\"line\">    if (index == 0) &#123;</span><br><span class=\"line\">      swiperItem[0].style.removeProperty(&#x27;transform&#x27;)</span><br><span class=\"line\">      swiperItem[swiperItem.length - 1].style.transform = `translateX($&#123;-swiperItem.length * this.width&#125;px)`</span><br><span class=\"line\">    &#125; else if (index == swiperItem.length - 1) &#123;</span><br><span class=\"line\">      // 是最后一个元素时</span><br><span class=\"line\">      // 需将第一个元素item 后移</span><br><span class=\"line\">      // 移除原有的最后一个元素的style样式</span><br><span class=\"line\">      swiperItem[swiperItem.length - 1].style.removeProperty(&#x27;transform&#x27;)</span><br><span class=\"line\">      swiperItem[0].style.transform = `translateX($&#123;swiperItem.length * this.width&#125;px)`</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      // 不是第一个和最后一个元素时</span><br><span class=\"line\">      // 需将第一个和最后一个元素item 归位</span><br><span class=\"line\">      // 移除样式即可</span><br><span class=\"line\">      swiperItem[0].style.removeProperty(&#x27;transform&#x27;)</span><br><span class=\"line\">      swiperItem[swiperItem.length - 1].style.removeProperty(&#x27;transform&#x27;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // 父组件移动距离</span><br><span class=\"line\">    const dom = document.getElementsByClassName(&#x27;van-swipe__track&#x27;)</span><br><span class=\"line\">    dom[0].style.transform = `translateX($&#123;index * -this.width + this.space / 2&#125;px)`</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"自定义监听touch事件\"><a href=\"#自定义监听touch事件\" class=\"headerlink\" title=\"自定义监听touch事件\"></a>自定义监听touch事件</h5><h5 id=\"用来处理覆盖van-swiper的样式\"><a href=\"#用来处理覆盖van-swiper的样式\" class=\"headerlink\" title=\"用来处理覆盖van-swiper的样式\"></a>用来处理覆盖van-swiper的样式</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addEventListener() &#123;</span><br><span class=\"line\">  // 监听 touchend 事件 用于处理滑块样式</span><br><span class=\"line\">  const span = document.getElementsByClassName(&#x27;van-swipe__track&#x27;)</span><br><span class=\"line\">  span[0].addEventListener(&#x27;touchend&#x27;, () =&gt; &#123;</span><br><span class=\"line\">    this.setSwiperStyle(this.selectIndex)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"监听移动事件\"><a href=\"#监听移动事件\" class=\"headerlink\" title=\"监听移动事件\"></a>监听移动事件</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">onChange(index) &#123;</span><br><span class=\"line\">   const countItem = document.getElementsByClassName(&#x27;user-card-waring&#x27;)</span><br><span class=\"line\">   // 判断移动方向</span><br><span class=\"line\">   // 主要目的是为加载对应卡片内容提供一个进场动画</span><br><span class=\"line\">   let moveDirection = &#x27;right&#x27;</span><br><span class=\"line\">   if (this.selectIndex &gt; index) &#123;</span><br><span class=\"line\">     moveDirection = &#x27;left&#x27;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   // 当前选择的是最后一个item 并且上一次item是第一个。则依然是向左移动</span><br><span class=\"line\">   if (countItem.length - 1 == index &amp;&amp; this.selectIndex == 0) &#123;</span><br><span class=\"line\">     moveDirection = &#x27;left&#x27;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   // 当前是第一个item，并且上一次是最后一个item,则移动方向是向右移动</span><br><span class=\"line\">   if (index == 0 &amp;&amp; this.selectIndex == countItem.length - 1) &#123;</span><br><span class=\"line\">     moveDirection = &#x27;right&#x27;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   this.setSwiperStyle(index)</span><br><span class=\"line\">   this.selectIndex = index</span><br><span class=\"line\">   this.$emit(&#x27;onChange&#x27;, &#123; index: index, moveDirection &#125;)</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"search 搜索框","date":"2022-10-15T10:49:36.000Z","_content":"# search 搜索框\n\n通用页面搜索使用，支持input slect date, 多条件时支持展开缩放功能\n\n## 演示案例\n\n### 示例一\n\n::: demo 通用页面搜索使用，支持input slect date, 多条件时支持展开缩放功能，只需配置搜索搜索项\n\n```vue\n<template>\n  <div>\n    <div>\n      <BaseSearch :options.sync=\"options\" @search=\"search\">\n      </BaseSearch>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return { \n        // 配置搜索项\n        options: {\n          open: false, // 当搜索条件大于3个时，是否展开搜索条件。默认不展开\n          data: [\n            {\n              label: '下拉选择',\n              prop: \"pcUuid\", // 字段标识\n              type: 'select', // 类型\n              value: '', // 初始值\n              clearable: false, // 是否可清空 默认可清空\n              filterable: true, // 搜索框是否可输入文字搜索 默认不可以\n              dicData: [{ // 数据配置项 目前只支持配置，不支持接口获取\n                name: '下拉数据1',\n                value: 1\n              },{\n                name: '下拉数据2',\n                value: 2\n              },{\n                name: '下拉数据3',\n                value: 3\n              }]\n            },\n            {\n              label: '输入测试',\n              type: 'input', // 输入类型\n              prop: 'cc',\n              value: ''\n            },\n            {\n              label: '开始时间',\n              type: 'date', // 时间类型\n              prop: 'ksrqks',\n              value: '',\n              pickerOptions: { // 时间选择配置项\n                disabledDate: true, // 时间选择限制是否开启 未开启 则时间选择不限制\n                compareValue: 'ksrqjs', // 开启后比较对象key \n                compareType: \"<\", // 限制规则 < ,> = 只支持三种\n              }\n            },\n            {\n              label: '结束时间', // 同上\n              type: 'date',\n              prop: 'ksrqjs',\n              value: '',\n              pickerOptions: {\n                disabledDate: true,\n                compareValue: 'ksrqks',\n                compareType: \">\",\n              }\n            },\n          ]\n        },\n      }\n    },\n\n    methods: {\n      // 搜索回调方法\n      search(data = {}) {\n        console.log(\"data==>\", data)\n      },\n    }\n  }\n</script>\n```\n:::\n\n### 示例二\n\n::: demo 通用页面搜索使用，支持input slect date, 多条件时支持展开缩放功能，只需配置搜索搜索项\n\n```vue\n<template>\n  <div>\n    <div>\n      <BaseSearch :options.sync=\"options2\" @search=\"search\">\n      </BaseSearch>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return { \n        options2: {\n          open: false, // 当搜索条件大于3个时，是否展开搜索条件。默认不展开\n          data: [\n            {\n              label: '下拉选择',\n              prop: \"pcUuid\", // 字段标识\n              type: 'select', // 类型\n              value: '', // 初始值\n              clearable: false, // 是否可清空 默认可清空\n              dicData: [{ // 数据配置项 目前只支持配置，不支持接口获取\n                name: '下拉数据1',\n                value: 1\n              },{\n                name: '下拉数据2',\n                value: 2\n              },{\n                name: '下拉数据3',\n                value: 3\n              }]\n            },\n            {\n              label: '输入测试',\n              type: 'input', // 输入类型\n              prop: 'cc',\n              value: ''\n            },\n          ]\n        }\n      }\n    },\n\n    methods: {\n      // 搜索回调方法\n      search(data = {}) {\n        console.log(\"data==>\", data)\n      },\n    }\n  }\n</script>\n```\n:::\n\n### 参数描述\n\n> options配置\n\n\n| 参数 |    说明 |    类型 | 可选值 | 默认值 |\n| ----- | ------ | ----- | :-----: |  :---:  |\n| open | 当搜索条件大于3个时，是否展开搜索条件。默认不展开 | Boolean | true/false | false |\n| data | 查询条件数据集 | Array | - | - |\n\n\n> data描述\n\n| 参数 |    说明  |   类型 | 可选值 | 默认值 |\n| ----- | ------ | ----- | :-----: |  :---:  |\n| label | 搜索名称 | String| - | - |\n| prop | 字段标识搜索返回的字段key | String | - | - |\n| type | 类型 | input/select/date | - | - |\n| value | 初始值 | String | - | - |\n| clearable | 是否可清除 | Boolean |true/false | true |\n| filterable | type=select有效 是否可输入 | Boolean |true/false | true |\n| dicData | 下拉选择项 当type = select时必填。数据格式[{name: '', value: ''}...] | Array | - | - |\n\n\n### 事件\n\n| 事件 | 说明  | 参数\n| --- | --- | --- |\n| search | 当用户点击搜索按钮，或者下拉选择数据时触发事件 | data |","source":"_posts/base-search.md","raw":"---\ntitle: search 搜索框\ndate: 2022-10-15 18:49:36\ntags:\n  - 组件封装\ncategories:\n  - 组件\n# cover: https://cover.png\n# feature: true\n---\n# search 搜索框\n\n通用页面搜索使用，支持input slect date, 多条件时支持展开缩放功能\n\n## 演示案例\n\n### 示例一\n\n::: demo 通用页面搜索使用，支持input slect date, 多条件时支持展开缩放功能，只需配置搜索搜索项\n\n```vue\n<template>\n  <div>\n    <div>\n      <BaseSearch :options.sync=\"options\" @search=\"search\">\n      </BaseSearch>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return { \n        // 配置搜索项\n        options: {\n          open: false, // 当搜索条件大于3个时，是否展开搜索条件。默认不展开\n          data: [\n            {\n              label: '下拉选择',\n              prop: \"pcUuid\", // 字段标识\n              type: 'select', // 类型\n              value: '', // 初始值\n              clearable: false, // 是否可清空 默认可清空\n              filterable: true, // 搜索框是否可输入文字搜索 默认不可以\n              dicData: [{ // 数据配置项 目前只支持配置，不支持接口获取\n                name: '下拉数据1',\n                value: 1\n              },{\n                name: '下拉数据2',\n                value: 2\n              },{\n                name: '下拉数据3',\n                value: 3\n              }]\n            },\n            {\n              label: '输入测试',\n              type: 'input', // 输入类型\n              prop: 'cc',\n              value: ''\n            },\n            {\n              label: '开始时间',\n              type: 'date', // 时间类型\n              prop: 'ksrqks',\n              value: '',\n              pickerOptions: { // 时间选择配置项\n                disabledDate: true, // 时间选择限制是否开启 未开启 则时间选择不限制\n                compareValue: 'ksrqjs', // 开启后比较对象key \n                compareType: \"<\", // 限制规则 < ,> = 只支持三种\n              }\n            },\n            {\n              label: '结束时间', // 同上\n              type: 'date',\n              prop: 'ksrqjs',\n              value: '',\n              pickerOptions: {\n                disabledDate: true,\n                compareValue: 'ksrqks',\n                compareType: \">\",\n              }\n            },\n          ]\n        },\n      }\n    },\n\n    methods: {\n      // 搜索回调方法\n      search(data = {}) {\n        console.log(\"data==>\", data)\n      },\n    }\n  }\n</script>\n```\n:::\n\n### 示例二\n\n::: demo 通用页面搜索使用，支持input slect date, 多条件时支持展开缩放功能，只需配置搜索搜索项\n\n```vue\n<template>\n  <div>\n    <div>\n      <BaseSearch :options.sync=\"options2\" @search=\"search\">\n      </BaseSearch>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return { \n        options2: {\n          open: false, // 当搜索条件大于3个时，是否展开搜索条件。默认不展开\n          data: [\n            {\n              label: '下拉选择',\n              prop: \"pcUuid\", // 字段标识\n              type: 'select', // 类型\n              value: '', // 初始值\n              clearable: false, // 是否可清空 默认可清空\n              dicData: [{ // 数据配置项 目前只支持配置，不支持接口获取\n                name: '下拉数据1',\n                value: 1\n              },{\n                name: '下拉数据2',\n                value: 2\n              },{\n                name: '下拉数据3',\n                value: 3\n              }]\n            },\n            {\n              label: '输入测试',\n              type: 'input', // 输入类型\n              prop: 'cc',\n              value: ''\n            },\n          ]\n        }\n      }\n    },\n\n    methods: {\n      // 搜索回调方法\n      search(data = {}) {\n        console.log(\"data==>\", data)\n      },\n    }\n  }\n</script>\n```\n:::\n\n### 参数描述\n\n> options配置\n\n\n| 参数 |    说明 |    类型 | 可选值 | 默认值 |\n| ----- | ------ | ----- | :-----: |  :---:  |\n| open | 当搜索条件大于3个时，是否展开搜索条件。默认不展开 | Boolean | true/false | false |\n| data | 查询条件数据集 | Array | - | - |\n\n\n> data描述\n\n| 参数 |    说明  |   类型 | 可选值 | 默认值 |\n| ----- | ------ | ----- | :-----: |  :---:  |\n| label | 搜索名称 | String| - | - |\n| prop | 字段标识搜索返回的字段key | String | - | - |\n| type | 类型 | input/select/date | - | - |\n| value | 初始值 | String | - | - |\n| clearable | 是否可清除 | Boolean |true/false | true |\n| filterable | type=select有效 是否可输入 | Boolean |true/false | true |\n| dicData | 下拉选择项 当type = select时必填。数据格式[{name: '', value: ''}...] | Array | - | - |\n\n\n### 事件\n\n| 事件 | 说明  | 参数\n| --- | --- | --- |\n| search | 当用户点击搜索按钮，或者下拉选择数据时触发事件 | data |","slug":"base-search","published":1,"updated":"2023-06-05T10:46:14.527Z","comments":1,"layout":"post","photos":[],"link":"","_id":"climfioxd000gol9relowcsp1","content":"<h1 id=\"search-搜索框\"><a href=\"#search-搜索框\" class=\"headerlink\" title=\"search 搜索框\"></a>search 搜索框</h1><p>通用页面搜索使用，支持input slect date, 多条件时支持展开缩放功能</p>\n<h2 id=\"演示案例\"><a href=\"#演示案例\" class=\"headerlink\" title=\"演示案例\"></a>演示案例</h2><h3 id=\"示例一\"><a href=\"#示例一\" class=\"headerlink\" title=\"示例一\"></a>示例一</h3><p>::: demo 通用页面搜索使用，支持input slect date, 多条件时支持展开缩放功能，只需配置搜索搜索项</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      &lt;BaseSearch :options.sync=&quot;options&quot; @search=&quot;search&quot;&gt;</span><br><span class=\"line\">      &lt;/BaseSearch&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      return &#123; </span><br><span class=\"line\">        // 配置搜索项</span><br><span class=\"line\">        options: &#123;</span><br><span class=\"line\">          open: false, // 当搜索条件大于3个时，是否展开搜索条件。默认不展开</span><br><span class=\"line\">          data: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              label: &#x27;下拉选择&#x27;,</span><br><span class=\"line\">              prop: &quot;pcUuid&quot;, // 字段标识</span><br><span class=\"line\">              type: &#x27;select&#x27;, // 类型</span><br><span class=\"line\">              value: &#x27;&#x27;, // 初始值</span><br><span class=\"line\">              clearable: false, // 是否可清空 默认可清空</span><br><span class=\"line\">              filterable: true, // 搜索框是否可输入文字搜索 默认不可以</span><br><span class=\"line\">              dicData: [&#123; // 数据配置项 目前只支持配置，不支持接口获取</span><br><span class=\"line\">                name: &#x27;下拉数据1&#x27;,</span><br><span class=\"line\">                value: 1</span><br><span class=\"line\">              &#125;,&#123;</span><br><span class=\"line\">                name: &#x27;下拉数据2&#x27;,</span><br><span class=\"line\">                value: 2</span><br><span class=\"line\">              &#125;,&#123;</span><br><span class=\"line\">                name: &#x27;下拉数据3&#x27;,</span><br><span class=\"line\">                value: 3</span><br><span class=\"line\">              &#125;]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              label: &#x27;输入测试&#x27;,</span><br><span class=\"line\">              type: &#x27;input&#x27;, // 输入类型</span><br><span class=\"line\">              prop: &#x27;cc&#x27;,</span><br><span class=\"line\">              value: &#x27;&#x27;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              label: &#x27;开始时间&#x27;,</span><br><span class=\"line\">              type: &#x27;date&#x27;, // 时间类型</span><br><span class=\"line\">              prop: &#x27;ksrqks&#x27;,</span><br><span class=\"line\">              value: &#x27;&#x27;,</span><br><span class=\"line\">              pickerOptions: &#123; // 时间选择配置项</span><br><span class=\"line\">                disabledDate: true, // 时间选择限制是否开启 未开启 则时间选择不限制</span><br><span class=\"line\">                compareValue: &#x27;ksrqjs&#x27;, // 开启后比较对象key </span><br><span class=\"line\">                compareType: &quot;&lt;&quot;, // 限制规则 &lt; ,&gt; = 只支持三种</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              label: &#x27;结束时间&#x27;, // 同上</span><br><span class=\"line\">              type: &#x27;date&#x27;,</span><br><span class=\"line\">              prop: &#x27;ksrqjs&#x27;,</span><br><span class=\"line\">              value: &#x27;&#x27;,</span><br><span class=\"line\">              pickerOptions: &#123;</span><br><span class=\"line\">                disabledDate: true,</span><br><span class=\"line\">                compareValue: &#x27;ksrqks&#x27;,</span><br><span class=\"line\">                compareType: &quot;&gt;&quot;,</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      // 搜索回调方法</span><br><span class=\"line\">      search(data = &#123;&#125;) &#123;</span><br><span class=\"line\">        console.log(&quot;data==&gt;&quot;, data)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>:::</p>\n<h3 id=\"示例二\"><a href=\"#示例二\" class=\"headerlink\" title=\"示例二\"></a>示例二</h3><p>::: demo 通用页面搜索使用，支持input slect date, 多条件时支持展开缩放功能，只需配置搜索搜索项</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      &lt;BaseSearch :options.sync=&quot;options2&quot; @search=&quot;search&quot;&gt;</span><br><span class=\"line\">      &lt;/BaseSearch&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      return &#123; </span><br><span class=\"line\">        options2: &#123;</span><br><span class=\"line\">          open: false, // 当搜索条件大于3个时，是否展开搜索条件。默认不展开</span><br><span class=\"line\">          data: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              label: &#x27;下拉选择&#x27;,</span><br><span class=\"line\">              prop: &quot;pcUuid&quot;, // 字段标识</span><br><span class=\"line\">              type: &#x27;select&#x27;, // 类型</span><br><span class=\"line\">              value: &#x27;&#x27;, // 初始值</span><br><span class=\"line\">              clearable: false, // 是否可清空 默认可清空</span><br><span class=\"line\">              dicData: [&#123; // 数据配置项 目前只支持配置，不支持接口获取</span><br><span class=\"line\">                name: &#x27;下拉数据1&#x27;,</span><br><span class=\"line\">                value: 1</span><br><span class=\"line\">              &#125;,&#123;</span><br><span class=\"line\">                name: &#x27;下拉数据2&#x27;,</span><br><span class=\"line\">                value: 2</span><br><span class=\"line\">              &#125;,&#123;</span><br><span class=\"line\">                name: &#x27;下拉数据3&#x27;,</span><br><span class=\"line\">                value: 3</span><br><span class=\"line\">              &#125;]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              label: &#x27;输入测试&#x27;,</span><br><span class=\"line\">              type: &#x27;input&#x27;, // 输入类型</span><br><span class=\"line\">              prop: &#x27;cc&#x27;,</span><br><span class=\"line\">              value: &#x27;&#x27;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      // 搜索回调方法</span><br><span class=\"line\">      search(data = &#123;&#125;) &#123;</span><br><span class=\"line\">        console.log(&quot;data==&gt;&quot;, data)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>:::</p>\n<h3 id=\"参数描述\"><a href=\"#参数描述\" class=\"headerlink\" title=\"参数描述\"></a>参数描述</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>options配置</p></blockquote>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th align=\"center\">可选值</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>open</td>\n<td>当搜索条件大于3个时，是否展开搜索条件。默认不展开</td>\n<td>Boolean</td>\n<td align=\"center\">true&#x2F;false</td>\n<td align=\"center\">false</td>\n</tr>\n<tr>\n<td>data</td>\n<td>查询条件数据集</td>\n<td>Array</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>data描述</p></blockquote>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th align=\"center\">可选值</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>label</td>\n<td>搜索名称</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>prop</td>\n<td>字段标识搜索返回的字段key</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>type</td>\n<td>类型</td>\n<td>input&#x2F;select&#x2F;date</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>value</td>\n<td>初始值</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>clearable</td>\n<td>是否可清除</td>\n<td>Boolean</td>\n<td align=\"center\">true&#x2F;false</td>\n<td align=\"center\">true</td>\n</tr>\n<tr>\n<td>filterable</td>\n<td>type&#x3D;select有效 是否可输入</td>\n<td>Boolean</td>\n<td align=\"center\">true&#x2F;false</td>\n<td align=\"center\">true</td>\n</tr>\n<tr>\n<td>dicData</td>\n<td>下拉选择项 当type &#x3D; select时必填。数据格式[{name: ‘’, value: ‘’}…]</td>\n<td>Array</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody></table>\n<h3 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h3><table>\n<thead>\n<tr>\n<th>事件</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>search</td>\n<td>当用户点击搜索按钮，或者下拉选择数据时触发事件</td>\n<td>data</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"search-搜索框\"><a href=\"#search-搜索框\" class=\"headerlink\" title=\"search 搜索框\"></a>search 搜索框</h1><p>通用页面搜索使用，支持input slect date, 多条件时支持展开缩放功能</p>\n<h2 id=\"演示案例\"><a href=\"#演示案例\" class=\"headerlink\" title=\"演示案例\"></a>演示案例</h2><h3 id=\"示例一\"><a href=\"#示例一\" class=\"headerlink\" title=\"示例一\"></a>示例一</h3><p>::: demo 通用页面搜索使用，支持input slect date, 多条件时支持展开缩放功能，只需配置搜索搜索项</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      &lt;BaseSearch :options.sync=&quot;options&quot; @search=&quot;search&quot;&gt;</span><br><span class=\"line\">      &lt;/BaseSearch&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      return &#123; </span><br><span class=\"line\">        // 配置搜索项</span><br><span class=\"line\">        options: &#123;</span><br><span class=\"line\">          open: false, // 当搜索条件大于3个时，是否展开搜索条件。默认不展开</span><br><span class=\"line\">          data: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              label: &#x27;下拉选择&#x27;,</span><br><span class=\"line\">              prop: &quot;pcUuid&quot;, // 字段标识</span><br><span class=\"line\">              type: &#x27;select&#x27;, // 类型</span><br><span class=\"line\">              value: &#x27;&#x27;, // 初始值</span><br><span class=\"line\">              clearable: false, // 是否可清空 默认可清空</span><br><span class=\"line\">              filterable: true, // 搜索框是否可输入文字搜索 默认不可以</span><br><span class=\"line\">              dicData: [&#123; // 数据配置项 目前只支持配置，不支持接口获取</span><br><span class=\"line\">                name: &#x27;下拉数据1&#x27;,</span><br><span class=\"line\">                value: 1</span><br><span class=\"line\">              &#125;,&#123;</span><br><span class=\"line\">                name: &#x27;下拉数据2&#x27;,</span><br><span class=\"line\">                value: 2</span><br><span class=\"line\">              &#125;,&#123;</span><br><span class=\"line\">                name: &#x27;下拉数据3&#x27;,</span><br><span class=\"line\">                value: 3</span><br><span class=\"line\">              &#125;]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              label: &#x27;输入测试&#x27;,</span><br><span class=\"line\">              type: &#x27;input&#x27;, // 输入类型</span><br><span class=\"line\">              prop: &#x27;cc&#x27;,</span><br><span class=\"line\">              value: &#x27;&#x27;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              label: &#x27;开始时间&#x27;,</span><br><span class=\"line\">              type: &#x27;date&#x27;, // 时间类型</span><br><span class=\"line\">              prop: &#x27;ksrqks&#x27;,</span><br><span class=\"line\">              value: &#x27;&#x27;,</span><br><span class=\"line\">              pickerOptions: &#123; // 时间选择配置项</span><br><span class=\"line\">                disabledDate: true, // 时间选择限制是否开启 未开启 则时间选择不限制</span><br><span class=\"line\">                compareValue: &#x27;ksrqjs&#x27;, // 开启后比较对象key </span><br><span class=\"line\">                compareType: &quot;&lt;&quot;, // 限制规则 &lt; ,&gt; = 只支持三种</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              label: &#x27;结束时间&#x27;, // 同上</span><br><span class=\"line\">              type: &#x27;date&#x27;,</span><br><span class=\"line\">              prop: &#x27;ksrqjs&#x27;,</span><br><span class=\"line\">              value: &#x27;&#x27;,</span><br><span class=\"line\">              pickerOptions: &#123;</span><br><span class=\"line\">                disabledDate: true,</span><br><span class=\"line\">                compareValue: &#x27;ksrqks&#x27;,</span><br><span class=\"line\">                compareType: &quot;&gt;&quot;,</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          ]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      // 搜索回调方法</span><br><span class=\"line\">      search(data = &#123;&#125;) &#123;</span><br><span class=\"line\">        console.log(&quot;data==&gt;&quot;, data)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>:::</p>\n<h3 id=\"示例二\"><a href=\"#示例二\" class=\"headerlink\" title=\"示例二\"></a>示例二</h3><p>::: demo 通用页面搜索使用，支持input slect date, 多条件时支持展开缩放功能，只需配置搜索搜索项</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      &lt;BaseSearch :options.sync=&quot;options2&quot; @search=&quot;search&quot;&gt;</span><br><span class=\"line\">      &lt;/BaseSearch&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      return &#123; </span><br><span class=\"line\">        options2: &#123;</span><br><span class=\"line\">          open: false, // 当搜索条件大于3个时，是否展开搜索条件。默认不展开</span><br><span class=\"line\">          data: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              label: &#x27;下拉选择&#x27;,</span><br><span class=\"line\">              prop: &quot;pcUuid&quot;, // 字段标识</span><br><span class=\"line\">              type: &#x27;select&#x27;, // 类型</span><br><span class=\"line\">              value: &#x27;&#x27;, // 初始值</span><br><span class=\"line\">              clearable: false, // 是否可清空 默认可清空</span><br><span class=\"line\">              dicData: [&#123; // 数据配置项 目前只支持配置，不支持接口获取</span><br><span class=\"line\">                name: &#x27;下拉数据1&#x27;,</span><br><span class=\"line\">                value: 1</span><br><span class=\"line\">              &#125;,&#123;</span><br><span class=\"line\">                name: &#x27;下拉数据2&#x27;,</span><br><span class=\"line\">                value: 2</span><br><span class=\"line\">              &#125;,&#123;</span><br><span class=\"line\">                name: &#x27;下拉数据3&#x27;,</span><br><span class=\"line\">                value: 3</span><br><span class=\"line\">              &#125;]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              label: &#x27;输入测试&#x27;,</span><br><span class=\"line\">              type: &#x27;input&#x27;, // 输入类型</span><br><span class=\"line\">              prop: &#x27;cc&#x27;,</span><br><span class=\"line\">              value: &#x27;&#x27;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      // 搜索回调方法</span><br><span class=\"line\">      search(data = &#123;&#125;) &#123;</span><br><span class=\"line\">        console.log(&quot;data==&gt;&quot;, data)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>:::</p>\n<h3 id=\"参数描述\"><a href=\"#参数描述\" class=\"headerlink\" title=\"参数描述\"></a>参数描述</h3><blockquote>\n<p>options配置</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th align=\"center\">可选值</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>open</td>\n<td>当搜索条件大于3个时，是否展开搜索条件。默认不展开</td>\n<td>Boolean</td>\n<td align=\"center\">true&#x2F;false</td>\n<td align=\"center\">false</td>\n</tr>\n<tr>\n<td>data</td>\n<td>查询条件数据集</td>\n<td>Array</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>data描述</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th align=\"center\">可选值</th>\n<th align=\"center\">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>label</td>\n<td>搜索名称</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>prop</td>\n<td>字段标识搜索返回的字段key</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>type</td>\n<td>类型</td>\n<td>input&#x2F;select&#x2F;date</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>value</td>\n<td>初始值</td>\n<td>String</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>clearable</td>\n<td>是否可清除</td>\n<td>Boolean</td>\n<td align=\"center\">true&#x2F;false</td>\n<td align=\"center\">true</td>\n</tr>\n<tr>\n<td>filterable</td>\n<td>type&#x3D;select有效 是否可输入</td>\n<td>Boolean</td>\n<td align=\"center\">true&#x2F;false</td>\n<td align=\"center\">true</td>\n</tr>\n<tr>\n<td>dicData</td>\n<td>下拉选择项 当type &#x3D; select时必填。数据格式[{name: ‘’, value: ‘’}…]</td>\n<td>Array</td>\n<td align=\"center\">-</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody></table>\n<h3 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h3><table>\n<thead>\n<tr>\n<th>事件</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>search</td>\n<td>当用户点击搜索按钮，或者下拉选择数据时触发事件</td>\n<td>data</td>\n</tr>\n</tbody></table>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"climfiox50006ol9rafia4990","category_id":"climfiox20003ol9rdjage2hu","_id":"climfioxb000dol9r86rv5csc"},{"post_id":"climfiowx0001ol9rewpyb6cg","category_id":"climfiox20003ol9rdjage2hu","_id":"climfioxe000hol9r09clfg90"},{"post_id":"climfiox60007ol9r7luda0vl","category_id":"climfiox20003ol9rdjage2hu","_id":"climfioxe000jol9rfdto46b3"},{"post_id":"climfiox00002ol9ra8w36wsu","category_id":"climfiox20003ol9rdjage2hu","_id":"climfioxf000nol9rgunn8jkj"},{"post_id":"climfioxd000gol9relowcsp1","category_id":"climfioxc000eol9r5xq0405r","_id":"climfioxg000pol9r6yry519l"},{"post_id":"climfiox30005ol9reb10g7ms","category_id":"climfioxc000eol9r5xq0405r","_id":"climfioxg000sol9r78hqe84m"},{"post_id":"climfiox9000bol9r8pr477hm","category_id":"climfioxf000kol9rflrjbrts","_id":"climfioxh000uol9raq7t533z"},{"post_id":"climfioxb000col9rdy8tfood","category_id":"climfioxf000kol9rflrjbrts","_id":"climfioxi000xol9r46vf6loc"}],"PostTag":[{"post_id":"climfiowx0001ol9rewpyb6cg","tag_id":"climfiox30004ol9r3p2rdxnv","_id":"climfiox9000aol9r5wwv60ys"},{"post_id":"climfiox00002ol9ra8w36wsu","tag_id":"climfiox70009ol9r99qhfqtb","_id":"climfioxe000iol9rc0cv14zu"},{"post_id":"climfioxd000gol9relowcsp1","tag_id":"climfioxc000fol9r40xzev42","_id":"climfioxf000mol9rb4myh12y"},{"post_id":"climfiox30005ol9reb10g7ms","tag_id":"climfioxc000fol9r40xzev42","_id":"climfioxf000ool9r4uo48j4m"},{"post_id":"climfiox50006ol9rafia4990","tag_id":"climfioxf000lol9rgehh9znz","_id":"climfioxh000tol9rb5szc1fh"},{"post_id":"climfiox60007ol9r7luda0vl","tag_id":"climfioxg000rol9r59b120au","_id":"climfioxh000wol9r5ou4ecyg"},{"post_id":"climfiox9000bol9r8pr477hm","tag_id":"climfioxh000vol9rdngo0wnv","_id":"climfioxi000zol9rdrji4la0"},{"post_id":"climfioxb000col9rdy8tfood","tag_id":"climfioxh000vol9rdngo0wnv","_id":"climfioxi0010ol9rgm4a26tq"}],"Tag":[{"name":"Vue 规范","_id":"climfiox30004ol9r3p2rdxnv"},{"name":"css规范","_id":"climfiox70009ol9r99qhfqtb"},{"name":"组件封装","_id":"climfioxc000fol9r40xzev42"},{"name":"命名规范","_id":"climfioxf000lol9rgehh9znz"},{"name":"Git 规范","_id":"climfioxg000rol9r59b120au"},{"name":"技术分享","_id":"climfioxh000vol9rdngo0wnv"}]}}