{"title":"Git操作规范","uid":"4d9513f4ca1217585e9de135aa4bfa69","slug":"git-standard","date":"2022-10-15T10:49:36.000Z","updated":"2023-06-14T02:00:59.857Z","comments":false,"path":"api/articles/git-standard.json","keywords":null,"cover":null,"content":"<h1 id=\"Git规范\"><a href=\"#Git规范\" class=\"headerlink\" title=\"Git规范\"></a>Git规范</h1><h3 id=\"写好git-commit提交有什么好处呢？\"><a href=\"#写好git-commit提交有什么好处呢？\" class=\"headerlink\" title=\"写好git commit提交有什么好处呢？\"></a>写好git commit提交有什么好处呢？</h3><ul>\n<li><p>查看提交的log也非常的优雅，这个就不多提了</p>\n</li>\n<li><p>方便查找日志记录，通过简单的过滤便能定位到具体想要查找的log</p>\n</li>\n<li><p>方便问题回溯，通过git log就能查找到当时提交的代码文件，以及修改的代码</p>\n</li>\n<li><p>其实如果使用过github的release, 可以直接根据feat和fix来过滤提取日志发布版本</p>\n</li>\n</ul>\n<h3 id=\"如何提交git-commit\"><a href=\"#如何提交git-commit\" class=\"headerlink\" title=\"如何提交git commit\"></a>如何提交git commit</h3><ol>\n<li><p>创建自己分支 (Yjh&#x2F;{type}&#x2F;xxx) 头部为提交人缩写 type为提交类型 xxx为模块描述</p>\n</li>\n<li><p>编写 commit 内容，内容应该尽量精简描述</p>\n</li>\n</ol>\n<p>  type 值一般有以下几种：</p>\n<pre><code>- feat：新功能 feature\n- bug：测试反馈 bug 列表中的 bug 号\n- fix： 修复 bug\n- ui：更新UI；\n- docs： 文档注释变更\n- style： 代码格式(不影响代码运行的变动)；\n- refactor： 重构、优化(既不增加新功能，也不是修复bug)；\n- perf： 性能优化；\n- release：发布；\n- deploy：部署；\n- test： 增加测试\n- chore： 构建过程或辅助工具的变动\n- revert： 回退\n- build： 打包\n</code></pre>\n<h2 id=\"GIT-常用操作\"><a href=\"#GIT-常用操作\" class=\"headerlink\" title=\"GIT 常用操作\"></a>GIT 常用操作</h2><h3 id=\"创建存储库\"><a href=\"#创建存储库\" class=\"headerlink\" title=\"创建存储库\"></a>创建存储库</h3><pre><code>  创建一个新的本地存储库\n  $ git init [项目名称]\n\n  克隆存储库(代码仓库)\n  $ git clone &lt;git_url&gt;\n\n  将存储库克隆到指定目录\n  $ git clone &lt;git_url&gt; 指定目录\n\n  将存储库克隆到指定目录，并指定分支\n  $ git clone &lt;git_url&gt; -b &lt;分支名称&gt; 指定目录\n</code></pre>\n<h3 id=\"使用分支\"><a href=\"#使用分支\" class=\"headerlink\" title=\"使用分支\"></a>使用分支</h3><pre><code>  列出所有本地分支\n  $ git branch\n\n  列出所有分支，本地和远程\n  $ git branch -av\n\n  切换到 my_branch，并更新工作目录\n  $ git checkout my_branch\n\n  创建一个名为 new_branch 的新分支\n  $ git checkout -b new_branch\n\n  删除名为 my_branch 的分支\n  $ git branch -d my_branch\n\n  将分支 A 合并到分支 B\n  $ git checkout branchB\n  $ git merge branchA\n\n  标记当前提交\n  $ git tag my_tag\n\n  从远程分支中创建并切换到本地分支\n  $ git checkout -b &lt;branch-name&gt; origin/&lt;branch-name&gt;\n</code></pre>\n<h3 id=\"做出改变\"><a href=\"#做出改变\" class=\"headerlink\" title=\"做出改变\"></a>做出改变</h3><pre><code>  在工作目录中显示修改后的文件，为您的下一次提交暂存\n  $ git status\n\n  暂存文件，准备提交\n  $ git add [file]\n\n  暂存所有更改的文件，准备提交\n  $ git add .\n\n  将所有暂存文件提交到版本化历史记录\n  $ git commit -m &quot;commit message&quot;\n\n  将所有跟踪的文件提交到版本化历史记录\n  $ git commit -am &quot;commit message&quot;\n\n  取消暂存文件，保留文件更改\n  $ git reset [file]\n\n  将所有内容恢复到最后一次提交\n  $ git reset --hard\n\n  已更改但未暂存内容的差异\n  $ git diff\n\n  已 commited 但尚未提交的内容的差异\n  $ git diff --staged\n\n  在指定分支之前应用当前分支的任何提交\n  $ git rebase [branch]\n</code></pre>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><pre><code>  设置将附加到您的提交和标签的名称\n  $ git config --global user.name &quot;name&quot;\n\n  设置将附加到您的提交和标签 tags 的电子邮件地址\n  $ git config --global user.email &quot;email&quot;\n\n  启用 Git 输出的一些着色\n  $ git config --global color.ui auto\n\n  在文本编辑器中编辑全局配置文件\n  $ git config --global --edit\n\n  显示本地 repo 配置设置\n  $ git config --list\n\n  删除全局设置\n  $ git config --global --unset &lt;entry-name&gt;\n</code></pre>\n<h3 id=\"重构文件名\"><a href=\"#重构文件名\" class=\"headerlink\" title=\"重构文件名\"></a>重构文件名</h3><pre><code>  # 从工作目录中删除文件并暂存删除\n  git rm &lt;filename&gt;\n\n  # 从版本控制中删除文件但在本地保留文件\n  git rm --cached &lt;filename&gt;\n\n  # 更改文件名并准备提交\n  git mv &lt;filename-orig&gt; &lt;filename-renamed&gt;\n</code></pre>\n<h3 id=\"同步\"><a href=\"#同步\" class=\"headerlink\" title=\"同步\"></a>同步</h3><pre><code>  从该 Git 远程获取所有分支\n  $ git fetch [alias]\n\n  将远程分支合并到当前分支以使其保持最新状态\n  $ git merge [alias]/[branch]\n\n  # 没有快进\n  $ git merge --no-ff [alias]/[branch]\n\n  # 仅快进\n  $ git merge --ff-only [alias]/[branch]\n\n  将本地分支提交传输到远程存储库分支\n  $ git push [alias] [branch]\n\n  从跟踪远程分支获取并合并任何提交\n  $ git pull\n\n  将另一个分支的一个特定提交合并到当前分支\n  $ git cherry-pick [commit_id]\n</code></pre>\n<h3 id=\"临时提交\"><a href=\"#临时提交\" class=\"headerlink\" title=\"临时提交\"></a>临时提交</h3><pre><code>  # 保存已修改和分阶段的更改\n  $ git stash\n\n  # 列出隐藏文件更改的堆栈顺序\n  $ git stash list\n\n  # 从存储堆栈顶部编写工作\n  $ git stash pop\n\n  # 丢弃存储堆栈顶部的更改\n  $ git stash drop\n\n  # 回到某个 stash 的状态\n  $ git stash apply &lt;stash@&#123;n&#125;&gt;\n\n  # 删除所有的 stash\n  $ git stash clear\n</code></pre>\n<h3 id=\"观察你的存储库\"><a href=\"#观察你的存储库\" class=\"headerlink\" title=\"观察你的存储库\"></a>观察你的存储库</h3><pre><code>  显示当前活动分支的提交历史\n  $ git log\n\n  显示 branchA 上不在 branchB 上的提交\n  $ git log branchB..branchA\n\n  显示更改文件的提交，即使跨重命名\n  $ git log --follow [file]\n\n  显示 branchA 中的内容与 branchB 中的内容的差异\n  $ git diff branchB...branchA\n\n  以人类可读的格式显示 Git 中的任何对象\n  $ git show [SHA]\n</code></pre>\n<h3 id=\"忽略文件\"><a href=\"#忽略文件\" class=\"headerlink\" title=\"忽略文件\"></a>忽略文件</h3><pre><code>  文件 .gitignore 指定了 Git 应该忽略的 未跟踪的 文件\n\n  行首 #\t全行注释，不支持行尾类注释 (转义 \\#)\n  行首 !\t否定模式 (转义 \\!)\n  **\t匹配任意路径\n  *\t匹配任意多个字符\n  ?\t匹配任意一个字符\n  doc/**\t匹配 doc 文件夹下的全部内容\n  doc/**/a\t匹配任意深度路径下的 a 文件或文件夹\n  /\t表示路径分隔符，不区分操作系统\n  / 结尾\t仅会匹配文件夹，否则会匹配文件和文件夹\n  空行\t不匹配任何文件\n  行尾空格\t默认被忽略，可使用\\进行转义\n  行首空格\t被正常处理，不会被忽略\n  当前 .gitignore 文件定义规则的优先级高于上级路径 .gitignore 定义规则的优先级；后定义的规则优先级高于前面定义规则的优先级\n</code></pre>\n<h4 id=\"忽略当前目录logs文件夹下的全部内容\"><a href=\"#忽略当前目录logs文件夹下的全部内容\" class=\"headerlink\" title=\"忽略当前目录logs文件夹下的全部内容\"></a>忽略当前目录logs文件夹下的全部内容</h4><pre><code>  /logs/\n  /logs/*\n  /logs/**\n</code></pre>\n<h4 id=\"上述几条规则等效\"><a href=\"#上述几条规则等效\" class=\"headerlink\" title=\"上述几条规则等效\"></a>上述几条规则等效</h4><h4 id=\"忽略-Mac-系统文件，包括任意子路径下的同名文件（夹）\"><a href=\"#忽略-Mac-系统文件，包括任意子路径下的同名文件（夹）\" class=\"headerlink\" title=\"忽略 Mac 系统文件，包括任意子路径下的同名文件（夹）\"></a>忽略 Mac 系统文件，包括任意子路径下的同名文件（夹）</h4><pre><code>  .DS_store\n</code></pre>\n<h4 id=\"忽略-node-modules-文件夹，包括任意子路径下的同名文件夹\"><a href=\"#忽略-node-modules-文件夹，包括任意子路径下的同名文件夹\" class=\"headerlink\" title=\"忽略 node_modules 文件夹，包括任意子路径下的同名文件夹\"></a>忽略 node_modules 文件夹，包括任意子路径下的同名文件夹</h4><pre><code>  node_modules/\n</code></pre>\n<h4 id=\"忽略任意子路径下build、target文件夹，\"><a href=\"#忽略任意子路径下build、target文件夹，\" class=\"headerlink\" title=\"忽略任意子路径下build、target文件夹，\"></a>忽略任意子路径下build、target文件夹，</h4><h4 id=\"但不忽略src-x2F-main、src-x2F-test下的build、target文件夹\"><a href=\"#但不忽略src-x2F-main、src-x2F-test下的build、target文件夹\" class=\"headerlink\" title=\"但不忽略src&#x2F;main、src&#x2F;test下的build、target文件夹\"></a>但不忽略src&#x2F;main、src&#x2F;test下的build、target文件夹</h4><pre><code>  build/\n  !**/src/main/**/build/\n  !**/src/test/**/build/\n  target/\n  !**/src/main/**/target/\n  !**/src/test/**/target/\n</code></pre>\n<h4 id=\"使用-重新包含指定文件（夹）\"><a href=\"#使用-重新包含指定文件（夹）\" class=\"headerlink\" title=\"使用 ! 重新包含指定文件（夹）\"></a>使用 ! 重新包含指定文件（夹）</h4><pre><code>  !logs/.gitkeep\n</code></pre>\n<h3 id=\"远程\"><a href=\"#远程\" class=\"headerlink\" title=\"远程\"></a>远程</h3><pre><code>  添加一个 git URL 作为别名\n  $ git remote add [alias] [url]\n\n  显示您设置的远程存储库的名称\n  $ git remote\n\n  显示远程存储库的名称和 URL\n  $ git remote -v\n\n  删除远程存储库\n  $ git remote rm [remote repo name]\n  更改 git repo 的 URL\n\n  $ git remote set-url origin [git_url]\n</code></pre>\n<h3 id=\"跟踪路径更改\"><a href=\"#跟踪路径更改\" class=\"headerlink\" title=\"跟踪路径更改\"></a>跟踪路径更改</h3><pre><code>  从项目中删除文件并暂存删除以进行提交\n  $ git rm [file]\n\n  更改现有文件路径并暂存移动\n  $ git mv [existing-path] [new-path]\n\n  显示所有提交日志，并指示任何移动的路径\n  $ git log --stat -M\n</code></pre>\n<h3 id=\"git-配置-ssh-代理\"><a href=\"#git-配置-ssh-代理\" class=\"headerlink\" title=\"git 配置 ssh 代理\"></a>git 配置 ssh 代理</h3><pre><code>  $ cat ~/.ssh/config\n  Host gitlab.com\n</code></pre>\n<h4 id=\"直接使用-shadowsocks-提供的-socks5-代理端口\"><a href=\"#直接使用-shadowsocks-提供的-socks5-代理端口\" class=\"headerlink\" title=\"直接使用 shadowsocks 提供的 socks5 代理端口\"></a>直接使用 shadowsocks 提供的 socks5 代理端口</h4><pre><code>  ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p \n\n  Host github.com\n  ProxyCommand nc -X 5 -x 127.0.0.1:1080 %h %p\n</code></pre>\n<h2 id=\"Git-技巧\"><a href=\"#Git-技巧\" class=\"headerlink\" title=\"Git 技巧\"></a>Git 技巧</h2><h3 id=\"重命名分支\"><a href=\"#重命名分支\" class=\"headerlink\" title=\"重命名分支\"></a>重命名分支</h3><h4 id=\"重命名为new\"><a href=\"#重命名为new\" class=\"headerlink\" title=\"重命名为new\"></a>重命名为new</h4><pre><code>  $ git branch -m &lt;new&gt;\n  $ git branch -m &lt;old&gt; &lt;new&gt; #重命名分支\n</code></pre>\n<h4 id=\"推送并重置\"><a href=\"#推送并重置\" class=\"headerlink\" title=\"推送并重置\"></a>推送并重置</h4><pre><code>  $ git push origin -u &lt;new&gt;\n</code></pre>\n<h4 id=\"删除远程分支\"><a href=\"#删除远程分支\" class=\"headerlink\" title=\"删除远程分支\"></a>删除远程分支</h4><pre><code>  $ git push origin --delete &lt;old&gt; #方法1\n  $ git push origin :oldBranchName #方法2\n</code></pre>\n<h3 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"Log\"></a>Log</h3><h4 id=\"按内容搜索更改\"><a href=\"#按内容搜索更改\" class=\"headerlink\" title=\"按内容搜索更改\"></a>按内容搜索更改</h4><pre><code>  $ git log -S&#39;&lt;a term in the source&gt;&#39;\n</code></pre>\n<h4 id=\"显示特定文件随时间的变化\"><a href=\"#显示特定文件随时间的变化\" class=\"headerlink\" title=\"显示特定文件随时间的变化\"></a>显示特定文件随时间的变化</h4><pre><code>  $ git log -p &lt;file_name&gt;\n</code></pre>\n<h4 id=\"打印出很酷的日志可视化\"><a href=\"#打印出很酷的日志可视化\" class=\"headerlink\" title=\"打印出很酷的日志可视化\"></a>打印出很酷的日志可视化</h4><pre><code>  $ git log --pretty=oneline --graph --decorate --all\n</code></pre>\n<h3 id=\"Commit\"><a href=\"#Commit\" class=\"headerlink\" title=\"Commit\"></a>Commit</h3><pre><code>  $ git commit -v --amend\n  重写最后的提交信息\n</code></pre>\n<h3 id=\"忽略文件的权限变化\"><a href=\"#忽略文件的权限变化\" class=\"headerlink\" title=\"忽略文件的权限变化\"></a>忽略文件的权限变化</h3><pre><code>  git config core.fileMode false\n  不再将文件的权限变化视作改动\n</code></pre>\n<h3 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h3><h4 id=\"列出所有分支及其上游\"><a href=\"#列出所有分支及其上游\" class=\"headerlink\" title=\"列出所有分支及其上游\"></a>列出所有分支及其上游</h4><pre><code>  $ git branch -vv\n</code></pre>\n<h4 id=\"快速切换到上一个分支\"><a href=\"#快速切换到上一个分支\" class=\"headerlink\" title=\"快速切换到上一个分支\"></a>快速切换到上一个分支</h4><pre><code>  $ git checkout -\n</code></pre>\n<h4 id=\"只获取所有远程分支\"><a href=\"#只获取所有远程分支\" class=\"headerlink\" title=\"只获取所有远程分支\"></a>只获取所有远程分支</h4><pre><code>  $ git branch -r\n</code></pre>\n<h4 id=\"从另一个分支签出单个文件\"><a href=\"#从另一个分支签出单个文件\" class=\"headerlink\" title=\"从另一个分支签出单个文件\"></a>从另一个分支签出单个文件</h4><pre><code>  $ git checkout &lt;branch&gt; -- &lt;file&gt;\n</code></pre>\n<h4 id=\"删除本地存在远程不存在的分支\"><a href=\"#删除本地存在远程不存在的分支\" class=\"headerlink\" title=\"删除本地存在远程不存在的分支\"></a>删除本地存在远程不存在的分支</h4><pre><code>  git remote prune origin\n</code></pre>\n<h3 id=\"Git-别名\"><a href=\"#Git-别名\" class=\"headerlink\" title=\"Git 别名\"></a>Git 别名</h3><pre><code>  $ git config --global alias.co checkout\n\n  $ git config --global alias.br branch\n  \n  $ git config --global alias.ci commit\n  \n  $ git config --global alias.st status\n</code></pre>\n<h3 id=\"设置大小写敏感\"><a href=\"#设置大小写敏感\" class=\"headerlink\" title=\"设置大小写敏感\"></a>设置大小写敏感</h3><h4 id=\"查看git-的设置\"><a href=\"#查看git-的设置\" class=\"headerlink\" title=\"查看git 的设置\"></a>查看git 的设置</h4><pre><code>  $ git config --get core.ignorecase\n</code></pre>\n<h4 id=\"设置大小写敏感-1\"><a href=\"#设置大小写敏感-1\" class=\"headerlink\" title=\"设置大小写敏感\"></a>设置大小写敏感</h4><pre><code>  $ git config core.ignorecase false\n</code></pre>\n<h4 id=\"远程有俩相同目录，通过这种方式清除掉，然后提交记录\"><a href=\"#远程有俩相同目录，通过这种方式清除掉，然后提交记录\" class=\"headerlink\" title=\"远程有俩相同目录，通过这种方式清除掉，然后提交记录\"></a>远程有俩相同目录，通过这种方式清除掉，然后提交记录</h4><pre><code>  $ git rm -r --cached &lt;目录/文件&gt;\n</code></pre>\n<h3 id=\"撤销远程记录\"><a href=\"#撤销远程记录\" class=\"headerlink\" title=\"撤销远程记录\"></a>撤销远程记录</h3><h4 id=\"撤销一条记录\"><a href=\"#撤销一条记录\" class=\"headerlink\" title=\"撤销一条记录\"></a>撤销一条记录</h4><pre><code>  $ git reset --hard HEAD~1\n</code></pre>\n<h4 id=\"强制同步到远程仓库\"><a href=\"#强制同步到远程仓库\" class=\"headerlink\" title=\"强制同步到远程仓库\"></a>强制同步到远程仓库</h4><pre><code>  $ git push -f origin HEAD:master\n</code></pre>\n<h3 id=\"放弃本地修改内容\"><a href=\"#放弃本地修改内容\" class=\"headerlink\" title=\"放弃本地修改内容\"></a>放弃本地修改内容</h3><h4 id=\"如果有的修改以及加入暂存区的话\"><a href=\"#如果有的修改以及加入暂存区的话\" class=\"headerlink\" title=\"如果有的修改以及加入暂存区的话\"></a>如果有的修改以及加入暂存区的话</h4><pre><code>  $ git reset --hard \n</code></pre>\n<h4 id=\"还原所有修改，不会删除新增的文件\"><a href=\"#还原所有修改，不会删除新增的文件\" class=\"headerlink\" title=\"还原所有修改，不会删除新增的文件\"></a>还原所有修改，不会删除新增的文件</h4><pre><code>  $ git checkout . \n</code></pre>\n<h4 id=\"下面命令会删除新增的文件\"><a href=\"#下面命令会删除新增的文件\" class=\"headerlink\" title=\"下面命令会删除新增的文件\"></a>下面命令会删除新增的文件</h4><pre><code>  $ git clean -xdf\n</code></pre>\n<h3 id=\"获取最近一次提交的-Hash\"><a href=\"#获取最近一次提交的-Hash\" class=\"headerlink\" title=\"获取最近一次提交的 Hash\"></a>获取最近一次提交的 Hash</h3><pre><code>  $ git rev-parse HEAD # e10721cb8859b2c\n  获取短 hash\n  $ git rev-parse --short HEAD # e10721c\n</code></pre>\n<h3 id=\"删除已经合并到-master-的分支\"><a href=\"#删除已经合并到-master-的分支\" class=\"headerlink\" title=\"删除已经合并到 master 的分支\"></a>删除已经合并到 master 的分支</h3><pre><code>  $ git branch --merged master | grep -v &#39;^\\*\\|  master&#39; | xargs -n 1 git branch -d\n</code></pre>\n<h3 id=\"把-A-分支的某一个-commit，放到-B-分支上\"><a href=\"#把-A-分支的某一个-commit，放到-B-分支上\" class=\"headerlink\" title=\"把 A 分支的某一个 commit，放到 B 分支上\"></a>把 A 分支的某一个 commit，放到 B 分支上</h3><pre><code>  # 切换到 B 分支\n  $ git checkout &lt;B&gt;\n  # 将 A 分支 &lt;hash-id&gt; 的内容 pick 到 B 分支\n  $ git cherry-pick &lt;hash-id&gt;\n</code></pre>\n<h4 id=\"回到远程仓库的状态\"><a href=\"#回到远程仓库的状态\" class=\"headerlink\" title=\"回到远程仓库的状态\"></a>回到远程仓库的状态</h4><pre><code>  $ git fetch --all &amp;&amp; git reset --hard origin/master\n</code></pre>\n<h3 id=\"修改远程-Commit-记录\"><a href=\"#修改远程-Commit-记录\" class=\"headerlink\" title=\"修改远程 Commit 记录\"></a>修改远程 Commit 记录</h3><h4 id=\"表示要修改当前版本的倒数第三次状态\"><a href=\"#表示要修改当前版本的倒数第三次状态\" class=\"headerlink\" title=\"表示要修改当前版本的倒数第三次状态\"></a>表示要修改当前版本的倒数第三次状态</h4><pre><code>  $ git rebase -i HEAD~3\n</code></pre>\n<h4 id=\"将要更改的记录行首单词-pick-改为-edit\"><a href=\"#将要更改的记录行首单词-pick-改为-edit\" class=\"headerlink\" title=\"将要更改的记录行首单词 pick 改为 edit\"></a>将要更改的记录行首单词 pick 改为 edit</h4><pre><code>  pick 96dc3f9 提交 commit 描述内容 1\n  pick f1cce8a 提交 commit 描述内容 2\n  pick 6293516 提交 commit 描述内容 3\n  # Rebase eeb03a4..6293516 onto eeb03a4 \n  #                     (3 commands)\n  #\n  # Commands:\n  # p, pick = 使用提交\n  # r, reword = 使用提交，但编辑提交消息\n  # e, edit = 使用提交，但停止修改\n  # s, squash = 使用提交，但融合到先前的提交中\n  # f, fixup = 像 squash，但丢弃此提交的日志消息\n  # x, exec = 使用 shell 运行命令(该行的其余部分)\n  # d, drop = 删除提交\n\n  保存并退出，会弹出下面提示\n\n  # 您现在可以修改提交，使用\n  # \n  #   git commit --amend\n  # \n  # 对更改感到满意后，运行\n  # \n  #   git rebase --continue\n  #\n  # 1. 通过这条命令进入编辑更改 commit，保存退出\n  $ git commit --amend\n  # 2. 保存退出确认修改，继续执行下面命令, \n  $ git rebase --continue\n  # 如果修改多条记录反复执行上面两条命令直到完成所有修改\n\n  # 最后，确保没有人提交进行推送，最好不要加 -f 强制推送\n  $ git push -f origin master\n</code></pre>\n<h3 id=\"查看冲突文件列表\"><a href=\"#查看冲突文件列表\" class=\"headerlink\" title=\"查看冲突文件列表\"></a>查看冲突文件列表</h3><pre><code>  $ git diff --name-only --diff-filter=U\n</code></pre>\n<h3 id=\"关联远程分支\"><a href=\"#关联远程分支\" class=\"headerlink\" title=\"关联远程分支\"></a>关联远程分支</h3><pre><code>  $ git branch -u origin/mybranch\n  或者在 push 时加上 -u 参数\n\n  git push origin/mybranch -u\n  关联之后，git branch -vv 就可以展示关联的远程分支名了, 同时推送到远程仓库直接：git push，不需要指定远程仓库\n</code></pre>\n<h3 id=\"展示任意分支某一文件的内容\"><a href=\"#展示任意分支某一文件的内容\" class=\"headerlink\" title=\"展示任意分支某一文件的内容\"></a>展示任意分支某一文件的内容</h3><pre><code>  $ git show &lt;branch-name&gt;:&lt;file-name&gt;\n</code></pre>\n","text":"Git规范写好git commit提交有什么好处呢？ 查看提交的log也非常的优雅，这个就不多提了 方便查找日志记录，通过简单的过滤便能定位到具体想要查找的log 方便问题回溯，通过git log就能查找到当时提交的代码文件，以及修改的代码 其实如果使用过github的relea...","link":"","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[{"name":"规范","slug":"规范","count":4,"path":"api/categories/规范.json"}],"tags":[{"name":"Git 规范","slug":"Git-规范","count":1,"path":"api/tags/Git-规范.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Git%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">Git规范</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%99%E5%A5%BDgit-commit%E6%8F%90%E4%BA%A4%E6%9C%89%E4%BB%80%E4%B9%88%E5%A5%BD%E5%A4%84%E5%91%A2%EF%BC%9F\"><span class=\"toc-text\">写好git commit提交有什么好处呢？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E6%8F%90%E4%BA%A4git-commit\"><span class=\"toc-text\">如何提交git commit</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GIT-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">GIT 常用操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%AD%98%E5%82%A8%E5%BA%93\"><span class=\"toc-text\">创建存储库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E5%88%86%E6%94%AF\"><span class=\"toc-text\">使用分支</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%81%9A%E5%87%BA%E6%94%B9%E5%8F%98\"><span class=\"toc-text\">做出改变</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%87%8D%E6%9E%84%E6%96%87%E4%BB%B6%E5%90%8D\"><span class=\"toc-text\">重构文件名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%8C%E6%AD%A5\"><span class=\"toc-text\">同步</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%B4%E6%97%B6%E6%8F%90%E4%BA%A4\"><span class=\"toc-text\">临时提交</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%82%E5%AF%9F%E4%BD%A0%E7%9A%84%E5%AD%98%E5%82%A8%E5%BA%93\"><span class=\"toc-text\">观察你的存储库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">忽略文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BF%BD%E7%95%A5%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95logs%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84%E5%85%A8%E9%83%A8%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">忽略当前目录logs文件夹下的全部内容</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E8%BF%B0%E5%87%A0%E6%9D%A1%E8%A7%84%E5%88%99%E7%AD%89%E6%95%88\"><span class=\"toc-text\">上述几条规则等效</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BF%BD%E7%95%A5-Mac-%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6%EF%BC%8C%E5%8C%85%E6%8B%AC%E4%BB%BB%E6%84%8F%E5%AD%90%E8%B7%AF%E5%BE%84%E4%B8%8B%E7%9A%84%E5%90%8C%E5%90%8D%E6%96%87%E4%BB%B6%EF%BC%88%E5%A4%B9%EF%BC%89\"><span class=\"toc-text\">忽略 Mac 系统文件，包括任意子路径下的同名文件（夹）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BF%BD%E7%95%A5-node-modules-%E6%96%87%E4%BB%B6%E5%A4%B9%EF%BC%8C%E5%8C%85%E6%8B%AC%E4%BB%BB%E6%84%8F%E5%AD%90%E8%B7%AF%E5%BE%84%E4%B8%8B%E7%9A%84%E5%90%8C%E5%90%8D%E6%96%87%E4%BB%B6%E5%A4%B9\"><span class=\"toc-text\">忽略 node_modules 文件夹，包括任意子路径下的同名文件夹</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BF%BD%E7%95%A5%E4%BB%BB%E6%84%8F%E5%AD%90%E8%B7%AF%E5%BE%84%E4%B8%8Bbuild%E3%80%81target%E6%96%87%E4%BB%B6%E5%A4%B9%EF%BC%8C\"><span class=\"toc-text\">忽略任意子路径下build、target文件夹，</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%86%E4%B8%8D%E5%BF%BD%E7%95%A5src-x2F-main%E3%80%81src-x2F-test%E4%B8%8B%E7%9A%84build%E3%80%81target%E6%96%87%E4%BB%B6%E5%A4%B9\"><span class=\"toc-text\">但不忽略src&#x2F;main、src&#x2F;test下的build、target文件夹</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-%E9%87%8D%E6%96%B0%E5%8C%85%E5%90%AB%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%EF%BC%88%E5%A4%B9%EF%BC%89\"><span class=\"toc-text\">使用 ! 重新包含指定文件（夹）</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9C%E7%A8%8B\"><span class=\"toc-text\">远程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B7%9F%E8%B8%AA%E8%B7%AF%E5%BE%84%E6%9B%B4%E6%94%B9\"><span class=\"toc-text\">跟踪路径更改</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#git-%E9%85%8D%E7%BD%AE-ssh-%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">git 配置 ssh 代理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8-shadowsocks-%E6%8F%90%E4%BE%9B%E7%9A%84-socks5-%E4%BB%A3%E7%90%86%E7%AB%AF%E5%8F%A3\"><span class=\"toc-text\">直接使用 shadowsocks 提供的 socks5 代理端口</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Git-%E6%8A%80%E5%B7%A7\"><span class=\"toc-text\">Git 技巧</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%87%8D%E5%91%BD%E5%90%8D%E5%88%86%E6%94%AF\"><span class=\"toc-text\">重命名分支</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%87%8D%E5%91%BD%E5%90%8D%E4%B8%BAnew\"><span class=\"toc-text\">重命名为new</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8E%A8%E9%80%81%E5%B9%B6%E9%87%8D%E7%BD%AE\"><span class=\"toc-text\">推送并重置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF\"><span class=\"toc-text\">删除远程分支</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Log\"><span class=\"toc-text\">Log</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8C%89%E5%86%85%E5%AE%B9%E6%90%9C%E7%B4%A2%E6%9B%B4%E6%94%B9\"><span class=\"toc-text\">按内容搜索更改</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%98%BE%E7%A4%BA%E7%89%B9%E5%AE%9A%E6%96%87%E4%BB%B6%E9%9A%8F%E6%97%B6%E9%97%B4%E7%9A%84%E5%8F%98%E5%8C%96\"><span class=\"toc-text\">显示特定文件随时间的变化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%8D%B0%E5%87%BA%E5%BE%88%E9%85%B7%E7%9A%84%E6%97%A5%E5%BF%97%E5%8F%AF%E8%A7%86%E5%8C%96\"><span class=\"toc-text\">打印出很酷的日志可视化</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Commit\"><span class=\"toc-text\">Commit</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E7%9A%84%E6%9D%83%E9%99%90%E5%8F%98%E5%8C%96\"><span class=\"toc-text\">忽略文件的权限变化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%94%AF\"><span class=\"toc-text\">分支</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%97%E5%87%BA%E6%89%80%E6%9C%89%E5%88%86%E6%94%AF%E5%8F%8A%E5%85%B6%E4%B8%8A%E6%B8%B8\"><span class=\"toc-text\">列出所有分支及其上游</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BF%AB%E9%80%9F%E5%88%87%E6%8D%A2%E5%88%B0%E4%B8%8A%E4%B8%80%E4%B8%AA%E5%88%86%E6%94%AF\"><span class=\"toc-text\">快速切换到上一个分支</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%AA%E8%8E%B7%E5%8F%96%E6%89%80%E6%9C%89%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF\"><span class=\"toc-text\">只获取所有远程分支</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%88%86%E6%94%AF%E7%AD%BE%E5%87%BA%E5%8D%95%E4%B8%AA%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">从另一个分支签出单个文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%9C%A8%E8%BF%9C%E7%A8%8B%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E5%88%86%E6%94%AF\"><span class=\"toc-text\">删除本地存在远程不存在的分支</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Git-%E5%88%AB%E5%90%8D\"><span class=\"toc-text\">Git 别名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE%E5%A4%A7%E5%B0%8F%E5%86%99%E6%95%8F%E6%84%9F\"><span class=\"toc-text\">设置大小写敏感</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8Bgit-%E7%9A%84%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">查看git 的设置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE%E5%A4%A7%E5%B0%8F%E5%86%99%E6%95%8F%E6%84%9F-1\"><span class=\"toc-text\">设置大小写敏感</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9C%E7%A8%8B%E6%9C%89%E4%BF%A9%E7%9B%B8%E5%90%8C%E7%9B%AE%E5%BD%95%EF%BC%8C%E9%80%9A%E8%BF%87%E8%BF%99%E7%A7%8D%E6%96%B9%E5%BC%8F%E6%B8%85%E9%99%A4%E6%8E%89%EF%BC%8C%E7%84%B6%E5%90%8E%E6%8F%90%E4%BA%A4%E8%AE%B0%E5%BD%95\"><span class=\"toc-text\">远程有俩相同目录，通过这种方式清除掉，然后提交记录</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%92%A4%E9%94%80%E8%BF%9C%E7%A8%8B%E8%AE%B0%E5%BD%95\"><span class=\"toc-text\">撤销远程记录</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%92%A4%E9%94%80%E4%B8%80%E6%9D%A1%E8%AE%B0%E5%BD%95\"><span class=\"toc-text\">撤销一条记录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%BA%E5%88%B6%E5%90%8C%E6%AD%A5%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">强制同步到远程仓库</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%94%BE%E5%BC%83%E6%9C%AC%E5%9C%B0%E4%BF%AE%E6%94%B9%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">放弃本地修改内容</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A6%82%E6%9E%9C%E6%9C%89%E7%9A%84%E4%BF%AE%E6%94%B9%E4%BB%A5%E5%8F%8A%E5%8A%A0%E5%85%A5%E6%9A%82%E5%AD%98%E5%8C%BA%E7%9A%84%E8%AF%9D\"><span class=\"toc-text\">如果有的修改以及加入暂存区的话</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%98%E5%8E%9F%E6%89%80%E6%9C%89%E4%BF%AE%E6%94%B9%EF%BC%8C%E4%B8%8D%E4%BC%9A%E5%88%A0%E9%99%A4%E6%96%B0%E5%A2%9E%E7%9A%84%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">还原所有修改，不会删除新增的文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E9%9D%A2%E5%91%BD%E4%BB%A4%E4%BC%9A%E5%88%A0%E9%99%A4%E6%96%B0%E5%A2%9E%E7%9A%84%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">下面命令会删除新增的文件</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E6%9C%80%E8%BF%91%E4%B8%80%E6%AC%A1%E6%8F%90%E4%BA%A4%E7%9A%84-Hash\"><span class=\"toc-text\">获取最近一次提交的 Hash</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4%E5%B7%B2%E7%BB%8F%E5%90%88%E5%B9%B6%E5%88%B0-master-%E7%9A%84%E5%88%86%E6%94%AF\"><span class=\"toc-text\">删除已经合并到 master 的分支</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8A%8A-A-%E5%88%86%E6%94%AF%E7%9A%84%E6%9F%90%E4%B8%80%E4%B8%AA-commit%EF%BC%8C%E6%94%BE%E5%88%B0-B-%E5%88%86%E6%94%AF%E4%B8%8A\"><span class=\"toc-text\">把 A 分支的某一个 commit，放到 B 分支上</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9B%9E%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">回到远程仓库的状态</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E8%BF%9C%E7%A8%8B-Commit-%E8%AE%B0%E5%BD%95\"><span class=\"toc-text\">修改远程 Commit 记录</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A1%A8%E7%A4%BA%E8%A6%81%E4%BF%AE%E6%94%B9%E5%BD%93%E5%89%8D%E7%89%88%E6%9C%AC%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%AC%E4%B8%89%E6%AC%A1%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">表示要修改当前版本的倒数第三次状态</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B0%86%E8%A6%81%E6%9B%B4%E6%94%B9%E7%9A%84%E8%AE%B0%E5%BD%95%E8%A1%8C%E9%A6%96%E5%8D%95%E8%AF%8D-pick-%E6%94%B9%E4%B8%BA-edit\"><span class=\"toc-text\">将要更改的记录行首单词 pick 改为 edit</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E5%86%B2%E7%AA%81%E6%96%87%E4%BB%B6%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">查看冲突文件列表</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E8%81%94%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF\"><span class=\"toc-text\">关联远程分支</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B1%95%E7%A4%BA%E4%BB%BB%E6%84%8F%E5%88%86%E6%94%AF%E6%9F%90%E4%B8%80%E6%96%87%E4%BB%B6%E7%9A%84%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">展示任意分支某一文件的内容</span></a></li></ol></li></ol></li></ol>","author":{"name":"虞建辉","slug":"虞建辉","avatar":"https://avatars.githubusercontent.com/u/7228360?s=400&u=5b2242e59ba02c0e1e7bc43eb68b070e26ec6a6e&v=4","link":"/","description":"好的程序员从来不只写代码，他们还致力于优雅地解决问题","socials":{"github":"https://github.com/yujianhui1993?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"前端命名规范","uid":"09dff03eab2b3667889d9cf16a04a6ed","slug":"fore-end-standard","date":"2022-10-15T10:49:36.000Z","updated":"2023-06-13T00:48:08.082Z","comments":false,"path":"api/articles/fore-end-standard.json","keywords":null,"cover":null,"text":"前端命名规范引入 Eslint、Prettier 规范一个不好的命名，可能就会引起别人的错误理解； 遵循一套严格的命名规范，无论是对自己还是接手的他人，都会大大降低代码的维护成本，所以想要成为一名合格的前端开发，命名规范是必须的； 一些常见的不规则命名： 单词拼写错误：到底是 f...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"规范","slug":"规范","count":4,"path":"api/categories/规范.json"}],"tags":[{"name":"命名规范","slug":"命名规范","count":1,"path":"api/tags/命名规范.json"}],"author":{"name":"虞建辉","slug":"虞建辉","avatar":"https://avatars.githubusercontent.com/u/7228360?s=400&u=5b2242e59ba02c0e1e7bc43eb68b070e26ec6a6e&v=4","link":"/","description":"好的程序员从来不只写代码，他们还致力于优雅地解决问题","socials":{"github":"https://github.com/yujianhui1993?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}