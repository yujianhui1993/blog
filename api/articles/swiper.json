{"title":"基于van-swipe 进行的定制开发","uid":"7ad521757790024b9bb4160a33768155","slug":"swiper","date":"2023-06-15T10:49:36.000Z","updated":"2023-06-13T00:39:47.722Z","comments":false,"path":"api/articles/swiper.json","keywords":null,"cover":"/blog/post/swiper/tu01.png","content":"<h1 id=\"基于van-swipe-进行的定制开发\"><a href=\"#基于van-swipe-进行的定制开发\" class=\"headerlink\" title=\"基于van-swipe 进行的定制开发\"></a>基于van-swipe 进行的定制开发</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>没改改其实现逻辑，只是对页面样式进行个性化</p></blockquote>\n<h2 id=\"swiper-的实现逻辑\"><a href=\"#swiper-的实现逻辑\" class=\"headerlink\" title=\"swiper 的实现逻辑\"></a>swiper 的实现逻辑</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>说白了就是左右移动或者上下移动，利用translateX 或者translateY，固定显示区域，整个内容左右或上下移动。添加一些动画效果即可实现。</strong><br><strong>原理简单为什么不自己开发。主要原因在于进场动画，滑动效果动画，以及滑动边界判断等需要处理。能处理好这些。自己开发也是一个不错的选择。</strong></p></blockquote>\n<h2 id=\"如何实现-swiper-左中右-三块布局\"><a href=\"#如何实现-swiper-左中右-三块布局\" class=\"headerlink\" title=\"如何实现 swiper 左中右 三块布局\"></a>如何实现 swiper 左中右 三块布局</h2><h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p><img src=\"./swiper/tu01.png\" alt=\"效果图\"></p>\n<p>离得最近的是van-swipe的固定宽度这个模版<br><img src=\"./swiper/tu03.png\" alt=\"van-swiper\"></p>\n<p>我们只要想办法实现如下效果</p>\n<p><img src=\"./swiper/tu02.png\" alt=\"van-swiper\"></p>\n<h2 id=\"实现步骤逻辑\"><a href=\"#实现步骤逻辑\" class=\"headerlink\" title=\"实现步骤逻辑\"></a>实现步骤逻辑</h2><ol>\n<li><p>构建van-swipe，设置swiper-item宽度（设置宽度值应小于页面宽度）</p>\n</li>\n<li><p>滑动后使其移动的距离小于设置宽度 公式： 移动距离 &#x3D; - ( item宽度 -（屏幕宽度 - item宽度）&#x2F; 2) </p>\n</li>\n<li><p>当item是显示第一个时，将最后一个item移到第一个前面，当item是显示最后一个时，将第一个item移到最后。</p>\n</li>\n</ol>\n<h3 id=\"主要代码块\"><a href=\"#主要代码块\" class=\"headerlink\" title=\"主要代码块\"></a>主要代码块</h3><h5 id=\"设置滑动后处理样式\"><a href=\"#设置滑动后处理样式\" class=\"headerlink\" title=\"设置滑动后处理样式\"></a>设置滑动后处理样式</h5><pre><code class=\"vue\">\n     // 设置样式\n    setSwiperStyle(index) &#123;\n      this.$nextTick(() =&gt; &#123;\n        const countItem = document.getElementsByClassName(&#39;user-card-waring&#39;)\n        const swiperItem = document.getElementsByClassName(&#39;van-swipe-item&#39;)\n        // 修改 选中样式\n        for (let i = 0; i &lt; countItem.length; i++) &#123;\n          countItem[i].classList.remove(&#39;current&#39;)\n          if (index == i) &#123;\n            countItem[i].classList.add(&#39;current&#39;)\n          &#125;\n        &#125;\n        // 当前是第一个元素时\n        // 需将最后一个item元素前移\n        // 移除原有第一个元素的的style样式\n        if (index == 0) &#123;\n          swiperItem[0].style.removeProperty(&#39;transform&#39;)\n          swiperItem[swiperItem.length - 1].style.transform = `translateX($&#123;-swiperItem.length * this.width&#125;px)`\n        &#125; else if (index == swiperItem.length - 1) &#123;\n          // 是最后一个元素时\n          // 需将第一个元素item 后移\n          // 移除原有的最后一个元素的style样式\n          swiperItem[swiperItem.length - 1].style.removeProperty(&#39;transform&#39;)\n          swiperItem[0].style.transform = `translateX($&#123;swiperItem.length * this.width&#125;px)`\n        &#125; else &#123;\n          // 不是第一个和最后一个元素时\n          // 需将第一个和最后一个元素item 归位\n          // 移除样式即可\n          swiperItem[0].style.removeProperty(&#39;transform&#39;)\n          swiperItem[swiperItem.length - 1].style.removeProperty(&#39;transform&#39;)\n        &#125;\n        // 父组件移动距离\n        const dom = document.getElementsByClassName(&#39;van-swipe__track&#39;)\n        dom[0].style.transform = `translateX($&#123;index * -this.width + this.space / 2&#125;px)`\n      &#125;)\n    &#125;\n</code></pre>\n<h5 id=\"自定义监听touch事件\"><a href=\"#自定义监听touch事件\" class=\"headerlink\" title=\"自定义监听touch事件\"></a>自定义监听touch事件</h5><h5 id=\"用来处理覆盖van-swiper的样式\"><a href=\"#用来处理覆盖van-swiper的样式\" class=\"headerlink\" title=\"用来处理覆盖van-swiper的样式\"></a>用来处理覆盖van-swiper的样式</h5><pre><code class=\"vue\">    addEventListener() &#123;\n      // 监听 touchend 事件 用于处理滑块样式\n      const span = document.getElementsByClassName(&#39;van-swipe__track&#39;)\n      span[0].addEventListener(&#39;touchend&#39;, () =&gt; &#123;\n        this.setSwiperStyle(this.selectIndex)\n      &#125;)\n    &#125;,\n</code></pre>\n<h5 id=\"监听移动事件\"><a href=\"#监听移动事件\" class=\"headerlink\" title=\"监听移动事件\"></a>监听移动事件</h5><pre><code class=\"vue\">\n   onChange(index) &#123;\n      const countItem = document.getElementsByClassName(&#39;user-card-waring&#39;)\n      // 判断移动方向\n      // 主要目的是为加载对应卡片内容提供一个进场动画\n      let moveDirection = &#39;right&#39;\n      if (this.selectIndex &gt; index) &#123;\n        moveDirection = &#39;left&#39;\n      &#125;\n      // 当前选择的是最后一个item 并且上一次item是第一个。则依然是向左移动\n      if (countItem.length - 1 == index &amp;&amp; this.selectIndex == 0) &#123;\n        moveDirection = &#39;left&#39;\n      &#125;\n      // 当前是第一个item，并且上一次是最后一个item,则移动方向是向右移动\n      if (index == 0 &amp;&amp; this.selectIndex == countItem.length - 1) &#123;\n        moveDirection = &#39;right&#39;\n      &#125;\n      this.setSwiperStyle(index)\n      this.selectIndex = index\n      this.$emit(&#39;onChange&#39;, &#123; index: index, moveDirection &#125;)\n    &#125;,\n</code></pre>\n","text":"基于van-swipe 进行的定制开发 没改改其实现逻辑，只是对页面样式进行个性化 swiper 的实现逻辑 说白了就是左右移动或者上下移动，利用translateX 或者translateY，固定显示区域，整个内容左右或上下移动。添加一些动画效果即可实现。原理简单为什么不自己开...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"文章","slug":"文章","count":2,"path":"api/categories/文章.json"}],"tags":[{"name":"技术分享","slug":"技术分享","count":2,"path":"api/tags/技术分享.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8Evan-swipe-%E8%BF%9B%E8%A1%8C%E7%9A%84%E5%AE%9A%E5%88%B6%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">基于van-swipe 进行的定制开发</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#swiper-%E7%9A%84%E5%AE%9E%E7%8E%B0%E9%80%BB%E8%BE%91\"><span class=\"toc-text\">swiper 的实现逻辑</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0-swiper-%E5%B7%A6%E4%B8%AD%E5%8F%B3-%E4%B8%89%E5%9D%97%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">如何实现 swiper 左中右 三块布局</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%88%E6%9E%9C%E5%9B%BE\"><span class=\"toc-text\">效果图</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E6%AD%A5%E9%AA%A4%E9%80%BB%E8%BE%91\"><span class=\"toc-text\">实现步骤逻辑</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E8%A6%81%E4%BB%A3%E7%A0%81%E5%9D%97\"><span class=\"toc-text\">主要代码块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE%E6%BB%91%E5%8A%A8%E5%90%8E%E5%A4%84%E7%90%86%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">设置滑动后处理样式</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%91%E5%90%ACtouch%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">自定义监听touch事件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%9D%A5%E5%A4%84%E7%90%86%E8%A6%86%E7%9B%96van-swiper%E7%9A%84%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">用来处理覆盖van-swiper的样式</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%9B%91%E5%90%AC%E7%A7%BB%E5%8A%A8%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">监听移动事件</span></a></li></ol></li></ol></li></ol></li></ol></li></ol>","author":{"name":"虞建辉","slug":"虞建辉","avatar":"https://avatars.githubusercontent.com/u/7228360?s=400&u=5b2242e59ba02c0e1e7bc43eb68b070e26ec6a6e&v=4","link":"/","description":"好的程序员从来不只写代码，他们还致力于优雅地解决问题","socials":{"github":"https://github.com/yujianhui1993?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Git操作规范","uid":"4d9513f4ca1217585e9de135aa4bfa69","slug":"git-standard","date":"2022-10-15T10:49:36.000Z","updated":"2023-06-13T10:19:03.007Z","comments":false,"path":"api/articles/git-standard.json","keywords":null,"cover":null,"text":"Git规范写好git commit提交有什么好处呢？ 查看提交的log也非常的优雅，这个就不多提了 方便查找日志记录，通过简单的过滤便能定位到具体想要查找的log 方便问题回溯，通过git log就能查找到当时提交的代码文件，以及修改的代码 其实如果使用过github的relea...","link":"","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[{"name":"规范","slug":"规范","count":4,"path":"api/categories/规范.json"}],"tags":[{"name":"Git 规范","slug":"Git-规范","count":1,"path":"api/tags/Git-规范.json"}],"author":{"name":"虞建辉","slug":"虞建辉","avatar":"https://avatars.githubusercontent.com/u/7228360?s=400&u=5b2242e59ba02c0e1e7bc43eb68b070e26ec6a6e&v=4","link":"/","description":"好的程序员从来不只写代码，他们还致力于优雅地解决问题","socials":{"github":"https://github.com/yujianhui1993?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"h5页面调用摄像头","uid":"e2dd80b7de5fb2e3b8f29ae72f511dd3","slug":"h5medio","date":"2023-01-01T10:49:36.000Z","updated":"2023-06-13T00:38:22.632Z","comments":false,"path":"api/articles/h5medio.json","keywords":null,"cover":null,"text":"h5页面调用摄像头调用摄像头的几个易难点 本地可以部署后不行 navigator.mediaDevices 调用需要在 localhost,或者https 的环境下才能成功，如果是http的则将报错，无法调用成功。 video 的宽高设置 video组件的宽高比是固定的，直接设置...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"文章","slug":"文章","count":2,"path":"api/categories/文章.json"}],"tags":[{"name":"技术分享","slug":"技术分享","count":2,"path":"api/tags/技术分享.json"}],"author":{"name":"虞建辉","slug":"虞建辉","avatar":"https://avatars.githubusercontent.com/u/7228360?s=400&u=5b2242e59ba02c0e1e7bc43eb68b070e26ec6a6e&v=4","link":"/","description":"好的程序员从来不只写代码，他们还致力于优雅地解决问题","socials":{"github":"https://github.com/yujianhui1993?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}